"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/bills/reminders/route";
exports.ids = ["app/api/bills/reminders/route"];
exports.modules = {

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "nodemailer":
/*!*****************************!*\
  !*** external "nodemailer" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("nodemailer");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_joshu_mnu8z3u_Downloads_J_H_Apartment_app_api_bills_reminders_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/bills/reminders/route.js */ \"(rsc)/./app/api/bills/reminders/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/bills/reminders/route\",\n        pathname: \"/api/bills/reminders\",\n        filename: \"route\",\n        bundlePath: \"app/api/bills/reminders/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\joshu_mnu8z3u\\\\Downloads\\\\J-H-Apartment\\\\app\\\\api\\\\bills\\\\reminders\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_joshu_mnu8z3u_Downloads_J_H_Apartment_app_api_bills_reminders_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/bills/reminders/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZiaWxscyUyRnJlbWluZGVycyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYmlsbHMlMkZyZW1pbmRlcnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZiaWxscyUyRnJlbWluZGVycyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNqb3NodV9tbnU4ejN1JTVDRG93bmxvYWRzJTVDSi1ILUFwYXJ0bWVudCU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDam9zaHVfbW51OHozdSU1Q0Rvd25sb2FkcyU1Q0otSC1BcGFydG1lbnQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3dDO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vai1oLWFwYXJ0bWVudC1uZXh0anMvPzgyMjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcam9zaHVfbW51OHozdVxcXFxEb3dubG9hZHNcXFxcSi1ILUFwYXJ0bWVudFxcXFxhcHBcXFxcYXBpXFxcXGJpbGxzXFxcXHJlbWluZGVyc1xcXFxyb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYmlsbHMvcmVtaW5kZXJzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYmlsbHMvcmVtaW5kZXJzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9iaWxscy9yZW1pbmRlcnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxqb3NodV9tbnU4ejN1XFxcXERvd25sb2Fkc1xcXFxKLUgtQXBhcnRtZW50XFxcXGFwcFxcXFxhcGlcXFxcYmlsbHNcXFxccmVtaW5kZXJzXFxcXHJvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9iaWxscy9yZW1pbmRlcnMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/bills/reminders/route.js":
/*!******************************************!*\
  !*** ./app/api/bills/reminders/route.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/database */ \"(rsc)/./lib/database.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_database__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../lib/auth */ \"(rsc)/./lib/auth.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_auth__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _services_emailService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../services/emailService */ \"(rsc)/./services/emailService.js\");\n/* harmony import */ var _models_bill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../models/bill */ \"(rsc)/./models/bill.js\");\n/* harmony import */ var _models_bill__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_models_bill__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nasync function POST(request) {\n    try {\n        // Check authentication\n        const authResult = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireAuth)(request);\n        if (authResult.error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: authResult.error\n            }, {\n                status: authResult.status\n            });\n        }\n        console.log(\"\\uD83D\\uDD14 Processing billing reminders...\");\n        // Get bills that need reminders (due within 3 days or overdue)\n        const billsNeedingReminders = await _models_bill__WEBPACK_IMPORTED_MODULE_4___default().getBillsNeedingReminders();\n        if (billsNeedingReminders.length === 0) {\n            console.log(\"✅ No bills need reminders today\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"No bills need reminders today\",\n                bills_processed: 0,\n                reminders_sent: 0\n            });\n        }\n        console.log(`📋 Found ${billsNeedingReminders.length} bills needing reminders`);\n        // Filter bills that haven't had a reminder sent today\n        const today = new Date().toISOString().split(\"T\")[0];\n        const billsToRemind = [];\n        for (const bill of billsNeedingReminders){\n            // Check if reminder was already sent today for this bill\n            const [existingReminder] = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.execute(`\r\n        SELECT id FROM billing_reminders \r\n        WHERE bill_id = ? AND reminder_date = ?\r\n      `, [\n                bill.id,\n                today\n            ]);\n            if (existingReminder.length === 0) {\n                billsToRemind.push(bill);\n            }\n        }\n        if (billsToRemind.length === 0) {\n            console.log(\"✅ All reminders for today have already been sent\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"All reminders for today have already been sent\",\n                bills_processed: billsNeedingReminders.length,\n                reminders_sent: 0\n            });\n        }\n        console.log(`📧 Sending reminder for ${billsToRemind.length} bills`);\n        // Send email reminder to management\n        const emailResult = await _services_emailService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].sendBillingReminderToManagement(billsToRemind);\n        let remindersSent = 0;\n        let errors = [];\n        if (emailResult.success) {\n            // Record reminders in database\n            for (const bill of billsToRemind){\n                try {\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.execute(`\r\n            INSERT INTO billing_reminders \r\n            (bill_id, reminder_date, days_before_due, email_sent, email_sent_at) \r\n            VALUES (?, ?, ?, TRUE, NOW())\r\n          `, [\n                        bill.id,\n                        today,\n                        bill.days_until_due\n                    ]);\n                    // Also log in email_notifications table\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.execute(`\r\n            INSERT INTO email_notifications \r\n            (tenant_id, email_type, email_subject, recipient_email, status, sent_at) \r\n            VALUES (?, 'billing_reminder', ?, 'official.jhapartment@gmail.com', 'sent', NOW())\r\n          `, [\n                        bill.tenant_id,\n                        `Billing Reminder - ${bill.tenant_name} - Room ${bill.room_number}`\n                    ]);\n                    remindersSent++;\n                } catch (error) {\n                    console.error(`❌ Failed to record reminder for bill ${bill.id}:`, error);\n                    errors.push({\n                        bill_id: bill.id,\n                        tenant_name: bill.tenant_name,\n                        error: error.message\n                    });\n                }\n            }\n            console.log(`✅ Successfully sent billing reminder email with ${remindersSent} bills`);\n        } else {\n            console.error(\"❌ Failed to send billing reminder email:\", emailResult.error);\n            // Record failed attempts\n            for (const bill of billsToRemind){\n                try {\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.execute(`\r\n            INSERT INTO billing_reminders \r\n            (bill_id, reminder_date, days_before_due, email_sent, email_sent_at) \r\n            VALUES (?, ?, ?, FALSE, NULL)\r\n          `, [\n                        bill.id,\n                        today,\n                        bill.days_until_due\n                    ]);\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.execute(`\r\n            INSERT INTO email_notifications \r\n            (tenant_id, email_type, email_subject, recipient_email, status, error_message) \r\n            VALUES (?, 'billing_reminder', ?, 'official.jhapartment@gmail.com', 'failed', ?)\r\n          `, [\n                        bill.tenant_id,\n                        `Billing Reminder - ${bill.tenant_name} - Room ${bill.room_number}`,\n                        emailResult.error\n                    ]);\n                } catch (recordError) {\n                    console.error(`❌ Failed to record failed reminder for bill ${bill.id}:`, recordError);\n                }\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: emailResult.success ? `Billing reminder sent successfully for ${remindersSent} bills` : `Failed to send billing reminder: ${emailResult.error}`,\n            bills_processed: billsNeedingReminders.length,\n            bills_to_remind: billsToRemind.length,\n            reminders_sent: remindersSent,\n            email_result: emailResult,\n            errors: errors.length > 0 ? errors : undefined\n        });\n    } catch (error) {\n        console.error(\"❌ Billing reminders error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"Internal server error\",\n            error: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n// GET endpoint to check what bills need reminders (for testing/preview)\nasync function GET(request) {\n    try {\n        // Check authentication\n        const authResult = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireAuth)(request);\n        if (authResult.error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: authResult.error\n            }, {\n                status: authResult.status\n            });\n        }\n        // Get bills that need reminders\n        const billsNeedingReminders = await _models_bill__WEBPACK_IMPORTED_MODULE_4___default().getBillsNeedingReminders();\n        // Check which ones haven't had reminders sent today\n        const today = new Date().toISOString().split(\"T\")[0];\n        const billsWithReminderStatus = [];\n        for (const bill of billsNeedingReminders){\n            const [existingReminder] = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.execute(`\r\n        SELECT id, email_sent, email_sent_at FROM billing_reminders \r\n        WHERE bill_id = ? AND reminder_date = ?\r\n      `, [\n                bill.id,\n                today\n            ]);\n            billsWithReminderStatus.push({\n                ...bill,\n                reminder_sent_today: existingReminder.length > 0,\n                reminder_details: existingReminder[0] || null\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            bills_needing_reminders: billsNeedingReminders.length,\n            bills_without_reminders_today: billsWithReminderStatus.filter((b)=>!b.reminder_sent_today).length,\n            bills: billsWithReminderStatus\n        });\n    } catch (error) {\n        console.error(\"❌ Get billing reminders error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"Internal server error\",\n            error: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2JpbGxzL3JlbWluZGVycy9yb3V0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ0s7QUFDRztBQUNVO0FBQ2xCO0FBRW5DLGVBQWVLLEtBQUtDLE9BQU87SUFDaEMsSUFBSTtRQUNGLHVCQUF1QjtRQUN2QixNQUFNQyxhQUFhTCxzREFBV0EsQ0FBQ0k7UUFDL0IsSUFBSUMsV0FBV0MsS0FBSyxFQUFFO1lBQ3BCLE9BQU9SLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3RCO2dCQUFFQyxTQUFTO2dCQUFPQyxTQUFTSixXQUFXQyxLQUFLO1lBQUMsR0FDNUM7Z0JBQUVJLFFBQVFMLFdBQVdLLE1BQU07WUFBQztRQUVoQztRQUVBQyxRQUFRQyxHQUFHLENBQUM7UUFFWiwrREFBK0Q7UUFDL0QsTUFBTUMsd0JBQXdCLE1BQU1YLDRFQUE2QjtRQUVqRSxJQUFJVyxzQkFBc0JFLE1BQU0sS0FBSyxHQUFHO1lBQ3RDSixRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPZCxxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO2dCQUN2QkMsU0FBUztnQkFDVEMsU0FBUztnQkFDVE8saUJBQWlCO2dCQUNqQkMsZ0JBQWdCO1lBQ2xCO1FBQ0Y7UUFFQU4sUUFBUUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFQyxzQkFBc0JFLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQztRQUU5RSxzREFBc0Q7UUFDdEQsTUFBTUcsUUFBUSxJQUFJQyxPQUFPQyxXQUFXLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNwRCxNQUFNQyxnQkFBZ0IsRUFBRTtRQUV4QixLQUFLLE1BQU1DLFFBQVFWLHNCQUF1QjtZQUN4Qyx5REFBeUQ7WUFDekQsTUFBTSxDQUFDVyxpQkFBaUIsR0FBRyxNQUFNekIsK0NBQUlBLENBQUMwQixPQUFPLENBQUMsQ0FBQzs7O01BRy9DLENBQUMsRUFBRTtnQkFBQ0YsS0FBS0csRUFBRTtnQkFBRVI7YUFBTTtZQUVuQixJQUFJTSxpQkFBaUJULE1BQU0sS0FBSyxHQUFHO2dCQUNqQ08sY0FBY0ssSUFBSSxDQUFDSjtZQUNyQjtRQUNGO1FBRUEsSUFBSUQsY0FBY1AsTUFBTSxLQUFLLEdBQUc7WUFDOUJKLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU9kLHFEQUFZQSxDQUFDUyxJQUFJLENBQUM7Z0JBQ3ZCQyxTQUFTO2dCQUNUQyxTQUFTO2dCQUNUTyxpQkFBaUJILHNCQUFzQkUsTUFBTTtnQkFDN0NFLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUFOLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLHdCQUF3QixFQUFFVSxjQUFjUCxNQUFNLENBQUMsTUFBTSxDQUFDO1FBRW5FLG9DQUFvQztRQUNwQyxNQUFNYSxjQUFjLE1BQU0zQiw4REFBWUEsQ0FBQzRCLCtCQUErQixDQUFDUDtRQUV2RSxJQUFJUSxnQkFBZ0I7UUFDcEIsSUFBSUMsU0FBUyxFQUFFO1FBRWYsSUFBSUgsWUFBWXBCLE9BQU8sRUFBRTtZQUN2QiwrQkFBK0I7WUFDL0IsS0FBSyxNQUFNZSxRQUFRRCxjQUFlO2dCQUNoQyxJQUFJO29CQUNGLE1BQU12QiwrQ0FBSUEsQ0FBQzBCLE9BQU8sQ0FBQyxDQUFDOzs7O1VBSXBCLENBQUMsRUFBRTt3QkFBQ0YsS0FBS0csRUFBRTt3QkFBRVI7d0JBQU9LLEtBQUtTLGNBQWM7cUJBQUM7b0JBRXhDLHdDQUF3QztvQkFDeEMsTUFBTWpDLCtDQUFJQSxDQUFDMEIsT0FBTyxDQUFDLENBQUM7Ozs7VUFJcEIsQ0FBQyxFQUFFO3dCQUFDRixLQUFLVSxTQUFTO3dCQUFFLENBQUMsbUJBQW1CLEVBQUVWLEtBQUtXLFdBQVcsQ0FBQyxRQUFRLEVBQUVYLEtBQUtZLFdBQVcsQ0FBQyxDQUFDO3FCQUFDO29CQUV4Rkw7Z0JBQ0YsRUFBRSxPQUFPeEIsT0FBTztvQkFDZEssUUFBUUwsS0FBSyxDQUFDLENBQUMscUNBQXFDLEVBQUVpQixLQUFLRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUVwQjtvQkFDbEV5QixPQUFPSixJQUFJLENBQUM7d0JBQ1ZTLFNBQVNiLEtBQUtHLEVBQUU7d0JBQ2hCUSxhQUFhWCxLQUFLVyxXQUFXO3dCQUM3QjVCLE9BQU9BLE1BQU1HLE9BQU87b0JBQ3RCO2dCQUNGO1lBQ0Y7WUFFQUUsUUFBUUMsR0FBRyxDQUFDLENBQUMsZ0RBQWdELEVBQUVrQixjQUFjLE1BQU0sQ0FBQztRQUN0RixPQUFPO1lBQ0xuQixRQUFRTCxLQUFLLENBQUMsNENBQTRDc0IsWUFBWXRCLEtBQUs7WUFFM0UseUJBQXlCO1lBQ3pCLEtBQUssTUFBTWlCLFFBQVFELGNBQWU7Z0JBQ2hDLElBQUk7b0JBQ0YsTUFBTXZCLCtDQUFJQSxDQUFDMEIsT0FBTyxDQUFDLENBQUM7Ozs7VUFJcEIsQ0FBQyxFQUFFO3dCQUFDRixLQUFLRyxFQUFFO3dCQUFFUjt3QkFBT0ssS0FBS1MsY0FBYztxQkFBQztvQkFFeEMsTUFBTWpDLCtDQUFJQSxDQUFDMEIsT0FBTyxDQUFDLENBQUM7Ozs7VUFJcEIsQ0FBQyxFQUFFO3dCQUFDRixLQUFLVSxTQUFTO3dCQUFFLENBQUMsbUJBQW1CLEVBQUVWLEtBQUtXLFdBQVcsQ0FBQyxRQUFRLEVBQUVYLEtBQUtZLFdBQVcsQ0FBQyxDQUFDO3dCQUFFUCxZQUFZdEIsS0FBSztxQkFBQztnQkFDN0csRUFBRSxPQUFPK0IsYUFBYTtvQkFDcEIxQixRQUFRTCxLQUFLLENBQUMsQ0FBQyw0Q0FBNEMsRUFBRWlCLEtBQUtHLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRVc7Z0JBQzNFO1lBQ0Y7UUFDRjtRQUVBLE9BQU92QyxxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RDLFNBQVNtQixZQUFZcEIsT0FBTyxHQUMxQixDQUFDLHVDQUF1QyxFQUFFc0IsY0FBYyxNQUFNLENBQUMsR0FDL0QsQ0FBQyxpQ0FBaUMsRUFBRUYsWUFBWXRCLEtBQUssQ0FBQyxDQUFDO1lBQ3pEVSxpQkFBaUJILHNCQUFzQkUsTUFBTTtZQUM3Q3VCLGlCQUFpQmhCLGNBQWNQLE1BQU07WUFDckNFLGdCQUFnQmE7WUFDaEJTLGNBQWNYO1lBQ2RHLFFBQVFBLE9BQU9oQixNQUFNLEdBQUcsSUFBSWdCLFNBQVNTO1FBQ3ZDO0lBRUYsRUFBRSxPQUFPbEMsT0FBTztRQUNkSyxRQUFRTCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxPQUFPUixxREFBWUEsQ0FBQ1MsSUFBSSxDQUN0QjtZQUFFQyxTQUFTO1lBQU9DLFNBQVM7WUFBeUJILE9BQU9BLE1BQU1HLE9BQU87UUFBQyxHQUN6RTtZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRjtBQUVBLHdFQUF3RTtBQUNqRSxlQUFlK0IsSUFBSXJDLE9BQU87SUFDL0IsSUFBSTtRQUNGLHVCQUF1QjtRQUN2QixNQUFNQyxhQUFhTCxzREFBV0EsQ0FBQ0k7UUFDL0IsSUFBSUMsV0FBV0MsS0FBSyxFQUFFO1lBQ3BCLE9BQU9SLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3RCO2dCQUFFQyxTQUFTO2dCQUFPQyxTQUFTSixXQUFXQyxLQUFLO1lBQUMsR0FDNUM7Z0JBQUVJLFFBQVFMLFdBQVdLLE1BQU07WUFBQztRQUVoQztRQUVBLGdDQUFnQztRQUNoQyxNQUFNRyx3QkFBd0IsTUFBTVgsNEVBQTZCO1FBRWpFLG9EQUFvRDtRQUNwRCxNQUFNZ0IsUUFBUSxJQUFJQyxPQUFPQyxXQUFXLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNwRCxNQUFNcUIsMEJBQTBCLEVBQUU7UUFFbEMsS0FBSyxNQUFNbkIsUUFBUVYsc0JBQXVCO1lBQ3hDLE1BQU0sQ0FBQ1csaUJBQWlCLEdBQUcsTUFBTXpCLCtDQUFJQSxDQUFDMEIsT0FBTyxDQUFDLENBQUM7OztNQUcvQyxDQUFDLEVBQUU7Z0JBQUNGLEtBQUtHLEVBQUU7Z0JBQUVSO2FBQU07WUFFbkJ3Qix3QkFBd0JmLElBQUksQ0FBQztnQkFDM0IsR0FBR0osSUFBSTtnQkFDUG9CLHFCQUFxQm5CLGlCQUFpQlQsTUFBTSxHQUFHO2dCQUMvQzZCLGtCQUFrQnBCLGdCQUFnQixDQUFDLEVBQUUsSUFBSTtZQUMzQztRQUNGO1FBRUEsT0FBTzFCLHFEQUFZQSxDQUFDUyxJQUFJLENBQUM7WUFDdkJDLFNBQVM7WUFDVHFDLHlCQUF5QmhDLHNCQUFzQkUsTUFBTTtZQUNyRCtCLCtCQUErQkosd0JBQXdCSyxNQUFNLENBQUNDLENBQUFBLElBQUssQ0FBQ0EsRUFBRUwsbUJBQW1CLEVBQUU1QixNQUFNO1lBQ2pHa0MsT0FBT1A7UUFDVDtJQUVGLEVBQUUsT0FBT3BDLE9BQU87UUFDZEssUUFBUUwsS0FBSyxDQUFDLGtDQUFrQ0E7UUFDaEQsT0FBT1IscURBQVlBLENBQUNTLElBQUksQ0FDdEI7WUFBRUMsU0FBUztZQUFPQyxTQUFTO1lBQXlCSCxPQUFPQSxNQUFNRyxPQUFPO1FBQUMsR0FDekU7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qLWgtYXBhcnRtZW50LW5leHRqcy8uL2FwcC9hcGkvYmlsbHMvcmVtaW5kZXJzL3JvdXRlLmpzPzk3OGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXHJcbmltcG9ydCB7IHBvb2wgfSBmcm9tICcuLi8uLi8uLi8uLi9saWIvZGF0YWJhc2UnXHJcbmltcG9ydCB7IHJlcXVpcmVBdXRoIH0gZnJvbSAnLi4vLi4vLi4vLi4vbGliL2F1dGgnXHJcbmltcG9ydCBlbWFpbFNlcnZpY2UgZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvZW1haWxTZXJ2aWNlJ1xyXG5pbXBvcnQgQmlsbCBmcm9tICcuLi8uLi8uLi8uLi9tb2RlbHMvYmlsbCdcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgLy8gQ2hlY2sgYXV0aGVudGljYXRpb25cclxuICAgIGNvbnN0IGF1dGhSZXN1bHQgPSByZXF1aXJlQXV0aChyZXF1ZXN0KVxyXG4gICAgaWYgKGF1dGhSZXN1bHQuZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGF1dGhSZXN1bHQuZXJyb3IgfSxcclxuICAgICAgICB7IHN0YXR1czogYXV0aFJlc3VsdC5zdGF0dXMgfVxyXG4gICAgICApXHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ/CflJQgUHJvY2Vzc2luZyBiaWxsaW5nIHJlbWluZGVycy4uLicpXHJcblxyXG4gICAgLy8gR2V0IGJpbGxzIHRoYXQgbmVlZCByZW1pbmRlcnMgKGR1ZSB3aXRoaW4gMyBkYXlzIG9yIG92ZXJkdWUpXHJcbiAgICBjb25zdCBiaWxsc05lZWRpbmdSZW1pbmRlcnMgPSBhd2FpdCBCaWxsLmdldEJpbGxzTmVlZGluZ1JlbWluZGVycygpXHJcbiAgICBcclxuICAgIGlmIChiaWxsc05lZWRpbmdSZW1pbmRlcnMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgTm8gYmlsbHMgbmVlZCByZW1pbmRlcnMgdG9kYXknKVxyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgbWVzc2FnZTogJ05vIGJpbGxzIG5lZWQgcmVtaW5kZXJzIHRvZGF5JyxcclxuICAgICAgICBiaWxsc19wcm9jZXNzZWQ6IDAsXHJcbiAgICAgICAgcmVtaW5kZXJzX3NlbnQ6IDBcclxuICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZyhg8J+TiyBGb3VuZCAke2JpbGxzTmVlZGluZ1JlbWluZGVycy5sZW5ndGh9IGJpbGxzIG5lZWRpbmcgcmVtaW5kZXJzYClcclxuXHJcbiAgICAvLyBGaWx0ZXIgYmlsbHMgdGhhdCBoYXZlbid0IGhhZCBhIHJlbWluZGVyIHNlbnQgdG9kYXlcclxuICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF1cclxuICAgIGNvbnN0IGJpbGxzVG9SZW1pbmQgPSBbXVxyXG5cclxuICAgIGZvciAoY29uc3QgYmlsbCBvZiBiaWxsc05lZWRpbmdSZW1pbmRlcnMpIHtcclxuICAgICAgLy8gQ2hlY2sgaWYgcmVtaW5kZXIgd2FzIGFscmVhZHkgc2VudCB0b2RheSBmb3IgdGhpcyBiaWxsXHJcbiAgICAgIGNvbnN0IFtleGlzdGluZ1JlbWluZGVyXSA9IGF3YWl0IHBvb2wuZXhlY3V0ZShgXHJcbiAgICAgICAgU0VMRUNUIGlkIEZST00gYmlsbGluZ19yZW1pbmRlcnMgXHJcbiAgICAgICAgV0hFUkUgYmlsbF9pZCA9ID8gQU5EIHJlbWluZGVyX2RhdGUgPSA/XHJcbiAgICAgIGAsIFtiaWxsLmlkLCB0b2RheV0pXHJcblxyXG4gICAgICBpZiAoZXhpc3RpbmdSZW1pbmRlci5sZW5ndGggPT09IDApIHtcclxuICAgICAgICBiaWxsc1RvUmVtaW5kLnB1c2goYmlsbClcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChiaWxsc1RvUmVtaW5kLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICBjb25zb2xlLmxvZygn4pyFIEFsbCByZW1pbmRlcnMgZm9yIHRvZGF5IGhhdmUgYWxyZWFkeSBiZWVuIHNlbnQnKVxyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgbWVzc2FnZTogJ0FsbCByZW1pbmRlcnMgZm9yIHRvZGF5IGhhdmUgYWxyZWFkeSBiZWVuIHNlbnQnLFxyXG4gICAgICAgIGJpbGxzX3Byb2Nlc3NlZDogYmlsbHNOZWVkaW5nUmVtaW5kZXJzLmxlbmd0aCxcclxuICAgICAgICByZW1pbmRlcnNfc2VudDogMFxyXG4gICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKGDwn5OnIFNlbmRpbmcgcmVtaW5kZXIgZm9yICR7YmlsbHNUb1JlbWluZC5sZW5ndGh9IGJpbGxzYClcclxuXHJcbiAgICAvLyBTZW5kIGVtYWlsIHJlbWluZGVyIHRvIG1hbmFnZW1lbnRcclxuICAgIGNvbnN0IGVtYWlsUmVzdWx0ID0gYXdhaXQgZW1haWxTZXJ2aWNlLnNlbmRCaWxsaW5nUmVtaW5kZXJUb01hbmFnZW1lbnQoYmlsbHNUb1JlbWluZClcclxuICAgIFxyXG4gICAgbGV0IHJlbWluZGVyc1NlbnQgPSAwXHJcbiAgICBsZXQgZXJyb3JzID0gW11cclxuXHJcbiAgICBpZiAoZW1haWxSZXN1bHQuc3VjY2Vzcykge1xyXG4gICAgICAvLyBSZWNvcmQgcmVtaW5kZXJzIGluIGRhdGFiYXNlXHJcbiAgICAgIGZvciAoY29uc3QgYmlsbCBvZiBiaWxsc1RvUmVtaW5kKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGF3YWl0IHBvb2wuZXhlY3V0ZShgXHJcbiAgICAgICAgICAgIElOU0VSVCBJTlRPIGJpbGxpbmdfcmVtaW5kZXJzIFxyXG4gICAgICAgICAgICAoYmlsbF9pZCwgcmVtaW5kZXJfZGF0ZSwgZGF5c19iZWZvcmVfZHVlLCBlbWFpbF9zZW50LCBlbWFpbF9zZW50X2F0KSBcclxuICAgICAgICAgICAgVkFMVUVTICg/LCA/LCA/LCBUUlVFLCBOT1coKSlcclxuICAgICAgICAgIGAsIFtiaWxsLmlkLCB0b2RheSwgYmlsbC5kYXlzX3VudGlsX2R1ZV0pXHJcblxyXG4gICAgICAgICAgLy8gQWxzbyBsb2cgaW4gZW1haWxfbm90aWZpY2F0aW9ucyB0YWJsZVxyXG4gICAgICAgICAgYXdhaXQgcG9vbC5leGVjdXRlKGBcclxuICAgICAgICAgICAgSU5TRVJUIElOVE8gZW1haWxfbm90aWZpY2F0aW9ucyBcclxuICAgICAgICAgICAgKHRlbmFudF9pZCwgZW1haWxfdHlwZSwgZW1haWxfc3ViamVjdCwgcmVjaXBpZW50X2VtYWlsLCBzdGF0dXMsIHNlbnRfYXQpIFxyXG4gICAgICAgICAgICBWQUxVRVMgKD8sICdiaWxsaW5nX3JlbWluZGVyJywgPywgJ29mZmljaWFsLmpoYXBhcnRtZW50QGdtYWlsLmNvbScsICdzZW50JywgTk9XKCkpXHJcbiAgICAgICAgICBgLCBbYmlsbC50ZW5hbnRfaWQsIGBCaWxsaW5nIFJlbWluZGVyIC0gJHtiaWxsLnRlbmFudF9uYW1lfSAtIFJvb20gJHtiaWxsLnJvb21fbnVtYmVyfWBdKVxyXG5cclxuICAgICAgICAgIHJlbWluZGVyc1NlbnQrK1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGDinYwgRmFpbGVkIHRvIHJlY29yZCByZW1pbmRlciBmb3IgYmlsbCAke2JpbGwuaWR9OmAsIGVycm9yKVxyXG4gICAgICAgICAgZXJyb3JzLnB1c2goe1xyXG4gICAgICAgICAgICBiaWxsX2lkOiBiaWxsLmlkLFxyXG4gICAgICAgICAgICB0ZW5hbnRfbmFtZTogYmlsbC50ZW5hbnRfbmFtZSxcclxuICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zb2xlLmxvZyhg4pyFIFN1Y2Nlc3NmdWxseSBzZW50IGJpbGxpbmcgcmVtaW5kZXIgZW1haWwgd2l0aCAke3JlbWluZGVyc1NlbnR9IGJpbGxzYClcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGYWlsZWQgdG8gc2VuZCBiaWxsaW5nIHJlbWluZGVyIGVtYWlsOicsIGVtYWlsUmVzdWx0LmVycm9yKVxyXG4gICAgICBcclxuICAgICAgLy8gUmVjb3JkIGZhaWxlZCBhdHRlbXB0c1xyXG4gICAgICBmb3IgKGNvbnN0IGJpbGwgb2YgYmlsbHNUb1JlbWluZCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBhd2FpdCBwb29sLmV4ZWN1dGUoYFxyXG4gICAgICAgICAgICBJTlNFUlQgSU5UTyBiaWxsaW5nX3JlbWluZGVycyBcclxuICAgICAgICAgICAgKGJpbGxfaWQsIHJlbWluZGVyX2RhdGUsIGRheXNfYmVmb3JlX2R1ZSwgZW1haWxfc2VudCwgZW1haWxfc2VudF9hdCkgXHJcbiAgICAgICAgICAgIFZBTFVFUyAoPywgPywgPywgRkFMU0UsIE5VTEwpXHJcbiAgICAgICAgICBgLCBbYmlsbC5pZCwgdG9kYXksIGJpbGwuZGF5c191bnRpbF9kdWVdKVxyXG5cclxuICAgICAgICAgIGF3YWl0IHBvb2wuZXhlY3V0ZShgXHJcbiAgICAgICAgICAgIElOU0VSVCBJTlRPIGVtYWlsX25vdGlmaWNhdGlvbnMgXHJcbiAgICAgICAgICAgICh0ZW5hbnRfaWQsIGVtYWlsX3R5cGUsIGVtYWlsX3N1YmplY3QsIHJlY2lwaWVudF9lbWFpbCwgc3RhdHVzLCBlcnJvcl9tZXNzYWdlKSBcclxuICAgICAgICAgICAgVkFMVUVTICg/LCAnYmlsbGluZ19yZW1pbmRlcicsID8sICdvZmZpY2lhbC5qaGFwYXJ0bWVudEBnbWFpbC5jb20nLCAnZmFpbGVkJywgPylcclxuICAgICAgICAgIGAsIFtiaWxsLnRlbmFudF9pZCwgYEJpbGxpbmcgUmVtaW5kZXIgLSAke2JpbGwudGVuYW50X25hbWV9IC0gUm9vbSAke2JpbGwucm9vbV9udW1iZXJ9YCwgZW1haWxSZXN1bHQuZXJyb3JdKVxyXG4gICAgICAgIH0gY2F0Y2ggKHJlY29yZEVycm9yKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGDinYwgRmFpbGVkIHRvIHJlY29yZCBmYWlsZWQgcmVtaW5kZXIgZm9yIGJpbGwgJHtiaWxsLmlkfTpgLCByZWNvcmRFcnJvcilcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBtZXNzYWdlOiBlbWFpbFJlc3VsdC5zdWNjZXNzID8gXHJcbiAgICAgICAgYEJpbGxpbmcgcmVtaW5kZXIgc2VudCBzdWNjZXNzZnVsbHkgZm9yICR7cmVtaW5kZXJzU2VudH0gYmlsbHNgIDogXHJcbiAgICAgICAgYEZhaWxlZCB0byBzZW5kIGJpbGxpbmcgcmVtaW5kZXI6ICR7ZW1haWxSZXN1bHQuZXJyb3J9YCxcclxuICAgICAgYmlsbHNfcHJvY2Vzc2VkOiBiaWxsc05lZWRpbmdSZW1pbmRlcnMubGVuZ3RoLFxyXG4gICAgICBiaWxsc190b19yZW1pbmQ6IGJpbGxzVG9SZW1pbmQubGVuZ3RoLFxyXG4gICAgICByZW1pbmRlcnNfc2VudDogcmVtaW5kZXJzU2VudCxcclxuICAgICAgZW1haWxfcmVzdWx0OiBlbWFpbFJlc3VsdCxcclxuICAgICAgZXJyb3JzOiBlcnJvcnMubGVuZ3RoID4gMCA/IGVycm9ycyA6IHVuZGVmaW5lZFxyXG4gICAgfSlcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBCaWxsaW5nIHJlbWluZGVycyBlcnJvcjonLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ0ludGVybmFsIHNlcnZlciBlcnJvcicsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKVxyXG4gIH1cclxufVxyXG5cclxuLy8gR0VUIGVuZHBvaW50IHRvIGNoZWNrIHdoYXQgYmlsbHMgbmVlZCByZW1pbmRlcnMgKGZvciB0ZXN0aW5nL3ByZXZpZXcpXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBDaGVjayBhdXRoZW50aWNhdGlvblxyXG4gICAgY29uc3QgYXV0aFJlc3VsdCA9IHJlcXVpcmVBdXRoKHJlcXVlc3QpXHJcbiAgICBpZiAoYXV0aFJlc3VsdC5lcnJvcikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogYXV0aFJlc3VsdC5lcnJvciB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiBhdXRoUmVzdWx0LnN0YXR1cyB9XHJcbiAgICAgIClcclxuICAgIH1cclxuXHJcbiAgICAvLyBHZXQgYmlsbHMgdGhhdCBuZWVkIHJlbWluZGVyc1xyXG4gICAgY29uc3QgYmlsbHNOZWVkaW5nUmVtaW5kZXJzID0gYXdhaXQgQmlsbC5nZXRCaWxsc05lZWRpbmdSZW1pbmRlcnMoKVxyXG4gICAgXHJcbiAgICAvLyBDaGVjayB3aGljaCBvbmVzIGhhdmVuJ3QgaGFkIHJlbWluZGVycyBzZW50IHRvZGF5XHJcbiAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdXHJcbiAgICBjb25zdCBiaWxsc1dpdGhSZW1pbmRlclN0YXR1cyA9IFtdXHJcblxyXG4gICAgZm9yIChjb25zdCBiaWxsIG9mIGJpbGxzTmVlZGluZ1JlbWluZGVycykge1xyXG4gICAgICBjb25zdCBbZXhpc3RpbmdSZW1pbmRlcl0gPSBhd2FpdCBwb29sLmV4ZWN1dGUoYFxyXG4gICAgICAgIFNFTEVDVCBpZCwgZW1haWxfc2VudCwgZW1haWxfc2VudF9hdCBGUk9NIGJpbGxpbmdfcmVtaW5kZXJzIFxyXG4gICAgICAgIFdIRVJFIGJpbGxfaWQgPSA/IEFORCByZW1pbmRlcl9kYXRlID0gP1xyXG4gICAgICBgLCBbYmlsbC5pZCwgdG9kYXldKVxyXG5cclxuICAgICAgYmlsbHNXaXRoUmVtaW5kZXJTdGF0dXMucHVzaCh7XHJcbiAgICAgICAgLi4uYmlsbCxcclxuICAgICAgICByZW1pbmRlcl9zZW50X3RvZGF5OiBleGlzdGluZ1JlbWluZGVyLmxlbmd0aCA+IDAsXHJcbiAgICAgICAgcmVtaW5kZXJfZGV0YWlsczogZXhpc3RpbmdSZW1pbmRlclswXSB8fCBudWxsXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgYmlsbHNfbmVlZGluZ19yZW1pbmRlcnM6IGJpbGxzTmVlZGluZ1JlbWluZGVycy5sZW5ndGgsXHJcbiAgICAgIGJpbGxzX3dpdGhvdXRfcmVtaW5kZXJzX3RvZGF5OiBiaWxsc1dpdGhSZW1pbmRlclN0YXR1cy5maWx0ZXIoYiA9PiAhYi5yZW1pbmRlcl9zZW50X3RvZGF5KS5sZW5ndGgsXHJcbiAgICAgIGJpbGxzOiBiaWxsc1dpdGhSZW1pbmRlclN0YXR1c1xyXG4gICAgfSlcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBHZXQgYmlsbGluZyByZW1pbmRlcnMgZXJyb3I6JywgZXJyb3IpXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InLCBlcnJvcjogZXJyb3IubWVzc2FnZSB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgIClcclxuICB9XHJcbn0gIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInBvb2wiLCJyZXF1aXJlQXV0aCIsImVtYWlsU2VydmljZSIsIkJpbGwiLCJQT1NUIiwicmVxdWVzdCIsImF1dGhSZXN1bHQiLCJlcnJvciIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsInN0YXR1cyIsImNvbnNvbGUiLCJsb2ciLCJiaWxsc05lZWRpbmdSZW1pbmRlcnMiLCJnZXRCaWxsc05lZWRpbmdSZW1pbmRlcnMiLCJsZW5ndGgiLCJiaWxsc19wcm9jZXNzZWQiLCJyZW1pbmRlcnNfc2VudCIsInRvZGF5IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJiaWxsc1RvUmVtaW5kIiwiYmlsbCIsImV4aXN0aW5nUmVtaW5kZXIiLCJleGVjdXRlIiwiaWQiLCJwdXNoIiwiZW1haWxSZXN1bHQiLCJzZW5kQmlsbGluZ1JlbWluZGVyVG9NYW5hZ2VtZW50IiwicmVtaW5kZXJzU2VudCIsImVycm9ycyIsImRheXNfdW50aWxfZHVlIiwidGVuYW50X2lkIiwidGVuYW50X25hbWUiLCJyb29tX251bWJlciIsImJpbGxfaWQiLCJyZWNvcmRFcnJvciIsImJpbGxzX3RvX3JlbWluZCIsImVtYWlsX3Jlc3VsdCIsInVuZGVmaW5lZCIsIkdFVCIsImJpbGxzV2l0aFJlbWluZGVyU3RhdHVzIiwicmVtaW5kZXJfc2VudF90b2RheSIsInJlbWluZGVyX2RldGFpbHMiLCJiaWxsc19uZWVkaW5nX3JlbWluZGVycyIsImJpbGxzX3dpdGhvdXRfcmVtaW5kZXJzX3RvZGF5IiwiZmlsdGVyIiwiYiIsImJpbGxzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/bills/reminders/route.js\n");

/***/ }),

/***/ "(rsc)/./config/database.js":
/*!****************************!*\
  !*** ./config/database.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mysql = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\nconst dotenv = __webpack_require__(/*! dotenv */ \"(rsc)/../../node_modules/dotenv/lib/main.js\");\ndotenv.config();\n// Database connection pool\nconst pool = mysql.createPool({\n    host: \"localhost\" || 0,\n    user: \"root\" || 0,\n    password:  false || \"\",\n    database: \"jh_apartment\" || 0,\n    port: \"3306\" || 0,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0\n});\n// Test database connection\nasync function testConnection() {\n    try {\n        const connection = await pool.getConnection();\n        console.log(\"Database connection successful\");\n        connection.release();\n        return true;\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return false;\n    }\n}\nmodule.exports = {\n    pool,\n    testConnection\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9jb25maWcvZGF0YWJhc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDO0FBRXZCQyxPQUFPQyxNQUFNO0FBRWIsMkJBQTJCO0FBQzNCLE1BQU1DLE9BQU9KLE1BQU1LLFVBQVUsQ0FBQztJQUM1QkMsTUFBTUMsV0FBbUIsSUFBSTtJQUM3QkcsTUFBTUgsTUFBbUIsSUFBSTtJQUM3QkssVUFBVUwsTUFBdUIsSUFBSTtJQUNyQ08sVUFBVVAsY0FBbUIsSUFBSTtJQUNqQ1MsTUFBTVQsTUFBbUIsSUFBSSxDQUFJO0lBQ2pDVyxvQkFBb0I7SUFDcEJDLGlCQUFpQjtJQUNqQkMsWUFBWTtBQUNkO0FBRUEsMkJBQTJCO0FBQzNCLGVBQWVDO0lBQ2IsSUFBSTtRQUNGLE1BQU1DLGFBQWEsTUFBTWxCLEtBQUttQixhQUFhO1FBQzNDQyxRQUFRQyxHQUFHLENBQUM7UUFDWkgsV0FBV0ksT0FBTztRQUNsQixPQUFPO0lBQ1QsRUFBRSxPQUFPQyxPQUFPO1FBQ2RILFFBQVFHLEtBQUssQ0FBQywrQkFBK0JBO1FBQzdDLE9BQU87SUFDVDtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBRztJQUNmekI7SUFDQWlCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qLWgtYXBhcnRtZW50LW5leHRqcy8uL2NvbmZpZy9kYXRhYmFzZS5qcz82OTJhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwyL3Byb21pc2UnKTtcclxuY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XHJcblxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG4vLyBEYXRhYmFzZSBjb25uZWN0aW9uIHBvb2xcclxuY29uc3QgcG9vbCA9IG15c3FsLmNyZWF0ZVBvb2woe1xyXG4gIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0hPU1QgfHwgJ2xvY2FsaG9zdCcsXHJcbiAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiB8fCAncm9vdCcsXHJcbiAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LkRCX1BBU1NXT1JEIHx8ICcnLFxyXG4gIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQl9OQU1FIHx8ICdqaF9hcGFydG1lbnQnLFxyXG4gIHBvcnQ6IHByb2Nlc3MuZW52LkRCX1BPUlQgfHwgMzMwNixcclxuICB3YWl0Rm9yQ29ubmVjdGlvbnM6IHRydWUsXHJcbiAgY29ubmVjdGlvbkxpbWl0OiAxMCxcclxuICBxdWV1ZUxpbWl0OiAwXHJcbn0pO1xyXG5cclxuLy8gVGVzdCBkYXRhYmFzZSBjb25uZWN0aW9uXHJcbmFzeW5jIGZ1bmN0aW9uIHRlc3RDb25uZWN0aW9uKCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XHJcbiAgICBjb25zb2xlLmxvZygnRGF0YWJhc2UgY29ubmVjdGlvbiBzdWNjZXNzZnVsJyk7XHJcbiAgICBjb25uZWN0aW9uLnJlbGVhc2UoKTtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZDonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBwb29sLFxyXG4gIHRlc3RDb25uZWN0aW9uXHJcbn07ICJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJkb3RlbnYiLCJjb25maWciLCJwb29sIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiREJfSE9TVCIsInVzZXIiLCJEQl9VU0VSIiwicGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsImRhdGFiYXNlIiwiREJfTkFNRSIsInBvcnQiLCJEQl9QT1JUIiwid2FpdEZvckNvbm5lY3Rpb25zIiwiY29ubmVjdGlvbkxpbWl0IiwicXVldWVMaW1pdCIsInRlc3RDb25uZWN0aW9uIiwiY29ubmVjdGlvbiIsImdldENvbm5lY3Rpb24iLCJjb25zb2xlIiwibG9nIiwicmVsZWFzZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./config/database.js\n");

/***/ }),

/***/ "(rsc)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst jwt = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\nconst bcrypt = __webpack_require__(/*! bcrypt */ \"bcrypt\");\nconst JWT_SECRET = \"your-super-secret-jwt-key-change-this-in-production\" || 0;\n// Generate JWT token\nfunction generateToken(user) {\n    return jwt.sign({\n        id: user.id,\n        username: user.username,\n        role: user.role\n    }, JWT_SECRET, {\n        expiresIn: \"24h\"\n    });\n}\n// Verify JWT token\nfunction verifyToken(token) {\n    try {\n        return jwt.verify(token, JWT_SECRET);\n    } catch (error) {\n        return null;\n    }\n}\n// Hash password\nasync function hashPassword(password) {\n    try {\n        const saltRounds = 10;\n        return await bcrypt.hash(password, saltRounds);\n    } catch (error) {\n        throw new Error(\"Error hashing password\");\n    }\n}\n// Compare password\nasync function comparePassword(password, hashedPassword) {\n    try {\n        return await bcrypt.compare(password, hashedPassword);\n    } catch (error) {\n        throw new Error(\"Error comparing passwords\");\n    }\n}\n// Middleware to verify authentication\nfunction requireAuth(req) {\n    // For Next.js API routes, get the authorization header\n    const authHeader = req.headers.get ? req.headers.get(\"authorization\") : req.headers.authorization;\n    const token = authHeader?.replace(\"Bearer \", \"\");\n    if (!token) {\n        return {\n            error: \"No token provided\",\n            status: 401\n        };\n    }\n    const decoded = verifyToken(token);\n    if (!decoded) {\n        return {\n            error: \"Invalid token\",\n            status: 401\n        };\n    }\n    return {\n        user: decoded\n    };\n}\nmodule.exports = {\n    generateToken,\n    verifyToken,\n    hashPassword,\n    comparePassword,\n    requireAuth\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsTUFBTUMsbUJBQU9BLENBQUM7QUFDcEIsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUUsYUFBYUMscURBQXNCLElBQUk7QUFFN0MscUJBQXFCO0FBQ3JCLFNBQVNFLGNBQWNDLElBQUk7SUFDekIsT0FBT1AsSUFBSVEsSUFBSSxDQUNiO1FBQ0VDLElBQUlGLEtBQUtFLEVBQUU7UUFDWEMsVUFBVUgsS0FBS0csUUFBUTtRQUN2QkMsTUFBTUosS0FBS0ksSUFBSTtJQUNqQixHQUNBUixZQUNBO1FBQUVTLFdBQVc7SUFBTTtBQUV2QjtBQUVBLG1CQUFtQjtBQUNuQixTQUFTQyxZQUFZQyxLQUFLO0lBQ3hCLElBQUk7UUFDRixPQUFPZCxJQUFJZSxNQUFNLENBQUNELE9BQU9YO0lBQzNCLEVBQUUsT0FBT2EsT0FBTztRQUNkLE9BQU87SUFDVDtBQUNGO0FBRUEsZ0JBQWdCO0FBQ2hCLGVBQWVDLGFBQWFDLFFBQVE7SUFDbEMsSUFBSTtRQUNGLE1BQU1DLGFBQWE7UUFDbkIsT0FBTyxNQUFNakIsT0FBT2tCLElBQUksQ0FBQ0YsVUFBVUM7SUFDckMsRUFBRSxPQUFPSCxPQUFPO1FBQ2QsTUFBTSxJQUFJSyxNQUFNO0lBQ2xCO0FBQ0Y7QUFFQSxtQkFBbUI7QUFDbkIsZUFBZUMsZ0JBQWdCSixRQUFRLEVBQUVLLGNBQWM7SUFDckQsSUFBSTtRQUNGLE9BQU8sTUFBTXJCLE9BQU9zQixPQUFPLENBQUNOLFVBQVVLO0lBQ3hDLEVBQUUsT0FBT1AsT0FBTztRQUNkLE1BQU0sSUFBSUssTUFBTTtJQUNsQjtBQUNGO0FBRUEsc0NBQXNDO0FBQ3RDLFNBQVNJLFlBQVlDLEdBQUc7SUFDdEIsdURBQXVEO0lBQ3ZELE1BQU1DLGFBQWFELElBQUlFLE9BQU8sQ0FBQ0MsR0FBRyxHQUFHSCxJQUFJRSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUJILElBQUlFLE9BQU8sQ0FBQ0UsYUFBYTtJQUNqRyxNQUFNaEIsUUFBUWEsWUFBWUksUUFBUSxXQUFXO0lBRTdDLElBQUksQ0FBQ2pCLE9BQU87UUFDVixPQUFPO1lBQUVFLE9BQU87WUFBcUJnQixRQUFRO1FBQUk7SUFDbkQ7SUFFQSxNQUFNQyxVQUFVcEIsWUFBWUM7SUFDNUIsSUFBSSxDQUFDbUIsU0FBUztRQUNaLE9BQU87WUFBRWpCLE9BQU87WUFBaUJnQixRQUFRO1FBQUk7SUFDL0M7SUFFQSxPQUFPO1FBQUV6QixNQUFNMEI7SUFBUTtBQUN6QjtBQUVBQyxPQUFPQyxPQUFPLEdBQUc7SUFDZjdCO0lBQ0FPO0lBQ0FJO0lBQ0FLO0lBQ0FHO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qLWgtYXBhcnRtZW50LW5leHRqcy8uL2xpYi9hdXRoLmpzPzI4N2IiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XHJcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xyXG5cclxuY29uc3QgSldUX1NFQ1JFVCA9IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQgfHwgJ3lvdXItc2VjcmV0LWtleS1oZXJlJztcclxuXHJcbi8vIEdlbmVyYXRlIEpXVCB0b2tlblxyXG5mdW5jdGlvbiBnZW5lcmF0ZVRva2VuKHVzZXIpIHtcclxuICByZXR1cm4gand0LnNpZ24oXHJcbiAgICB7IFxyXG4gICAgICBpZDogdXNlci5pZCwgXHJcbiAgICAgIHVzZXJuYW1lOiB1c2VyLnVzZXJuYW1lLCBcclxuICAgICAgcm9sZTogdXNlci5yb2xlIFxyXG4gICAgfSxcclxuICAgIEpXVF9TRUNSRVQsXHJcbiAgICB7IGV4cGlyZXNJbjogJzI0aCcgfVxyXG4gICk7XHJcbn1cclxuXHJcbi8vIFZlcmlmeSBKV1QgdG9rZW5cclxuZnVuY3Rpb24gdmVyaWZ5VG9rZW4odG9rZW4pIHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIGp3dC52ZXJpZnkodG9rZW4sIEpXVF9TRUNSRVQpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbi8vIEhhc2ggcGFzc3dvcmRcclxuYXN5bmMgZnVuY3Rpb24gaGFzaFBhc3N3b3JkKHBhc3N3b3JkKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHNhbHRSb3VuZHMgPSAxMDtcclxuICAgIHJldHVybiBhd2FpdCBiY3J5cHQuaGFzaChwYXNzd29yZCwgc2FsdFJvdW5kcyk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgaGFzaGluZyBwYXNzd29yZCcpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gQ29tcGFyZSBwYXNzd29yZFxyXG5hc3luYyBmdW5jdGlvbiBjb21wYXJlUGFzc3dvcmQocGFzc3dvcmQsIGhhc2hlZFBhc3N3b3JkKSB7XHJcbiAgdHJ5IHtcclxuICAgIHJldHVybiBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgaGFzaGVkUGFzc3dvcmQpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGNvbXBhcmluZyBwYXNzd29yZHMnKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIE1pZGRsZXdhcmUgdG8gdmVyaWZ5IGF1dGhlbnRpY2F0aW9uXHJcbmZ1bmN0aW9uIHJlcXVpcmVBdXRoKHJlcSkge1xyXG4gIC8vIEZvciBOZXh0LmpzIEFQSSByb3V0ZXMsIGdldCB0aGUgYXV0aG9yaXphdGlvbiBoZWFkZXJcclxuICBjb25zdCBhdXRoSGVhZGVyID0gcmVxLmhlYWRlcnMuZ2V0ID8gcmVxLmhlYWRlcnMuZ2V0KCdhdXRob3JpemF0aW9uJykgOiByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xyXG4gIGNvbnN0IHRva2VuID0gYXV0aEhlYWRlcj8ucmVwbGFjZSgnQmVhcmVyICcsICcnKTtcclxuICBcclxuICBpZiAoIXRva2VuKSB7XHJcbiAgICByZXR1cm4geyBlcnJvcjogJ05vIHRva2VuIHByb3ZpZGVkJywgc3RhdHVzOiA0MDEgfTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGRlY29kZWQgPSB2ZXJpZnlUb2tlbih0b2tlbik7XHJcbiAgaWYgKCFkZWNvZGVkKSB7XHJcbiAgICByZXR1cm4geyBlcnJvcjogJ0ludmFsaWQgdG9rZW4nLCBzdGF0dXM6IDQwMSB9O1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHsgdXNlcjogZGVjb2RlZCB9O1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZW5lcmF0ZVRva2VuLFxyXG4gIHZlcmlmeVRva2VuLFxyXG4gIGhhc2hQYXNzd29yZCxcclxuICBjb21wYXJlUGFzc3dvcmQsXHJcbiAgcmVxdWlyZUF1dGhcclxufTsgIl0sIm5hbWVzIjpbImp3dCIsInJlcXVpcmUiLCJiY3J5cHQiLCJKV1RfU0VDUkVUIiwicHJvY2VzcyIsImVudiIsImdlbmVyYXRlVG9rZW4iLCJ1c2VyIiwic2lnbiIsImlkIiwidXNlcm5hbWUiLCJyb2xlIiwiZXhwaXJlc0luIiwidmVyaWZ5VG9rZW4iLCJ0b2tlbiIsInZlcmlmeSIsImVycm9yIiwiaGFzaFBhc3N3b3JkIiwicGFzc3dvcmQiLCJzYWx0Um91bmRzIiwiaGFzaCIsIkVycm9yIiwiY29tcGFyZVBhc3N3b3JkIiwiaGFzaGVkUGFzc3dvcmQiLCJjb21wYXJlIiwicmVxdWlyZUF1dGgiLCJyZXEiLCJhdXRoSGVhZGVyIiwiaGVhZGVycyIsImdldCIsImF1dGhvcml6YXRpb24iLCJyZXBsYWNlIiwic3RhdHVzIiwiZGVjb2RlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.js\n");

/***/ }),

/***/ "(rsc)/./lib/database.js":
/*!*************************!*\
  !*** ./lib/database.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mysql = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n// Database connection pool\nconst pool = mysql.createPool({\n    host: \"localhost\" || 0,\n    user: \"root\" || 0,\n    password:  false || \"\",\n    database: \"jh_apartment\" || 0,\n    port: \"3306\" || 0,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0\n});\n// Test database connection\nasync function testConnection() {\n    try {\n        const connection = await pool.getConnection();\n        console.log(\"Database connection successful\");\n        connection.release();\n        return true;\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return false;\n    }\n}\nmodule.exports = {\n    pool,\n    testConnection\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGF0YWJhc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXRCLDJCQUEyQjtBQUMzQixNQUFNQyxPQUFPRixNQUFNRyxVQUFVLENBQUM7SUFDNUJDLE1BQU1DLFdBQW1CLElBQUk7SUFDN0JHLE1BQU1ILE1BQW1CLElBQUk7SUFDN0JLLFVBQVVMLE1BQXVCLElBQUk7SUFDckNPLFVBQVVQLGNBQW1CLElBQUk7SUFDakNTLE1BQU1ULE1BQW1CLElBQUksQ0FBSTtJQUNqQ1csb0JBQW9CO0lBQ3BCQyxpQkFBaUI7SUFDakJDLFlBQVk7QUFDZDtBQUVBLDJCQUEyQjtBQUMzQixlQUFlQztJQUNiLElBQUk7UUFDRixNQUFNQyxhQUFhLE1BQU1sQixLQUFLbUIsYUFBYTtRQUMzQ0MsUUFBUUMsR0FBRyxDQUFDO1FBQ1pILFdBQVdJLE9BQU87UUFDbEIsT0FBTztJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkSCxRQUFRRyxLQUFLLENBQUMsK0JBQStCQTtRQUM3QyxPQUFPO0lBQ1Q7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUc7SUFDZnpCO0lBQ0FpQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vai1oLWFwYXJ0bWVudC1uZXh0anMvLi9saWIvZGF0YWJhc2UuanM/ZWVhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsMi9wcm9taXNlJyk7XHJcblxyXG4vLyBEYXRhYmFzZSBjb25uZWN0aW9uIHBvb2xcclxuY29uc3QgcG9vbCA9IG15c3FsLmNyZWF0ZVBvb2woe1xyXG4gIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0hPU1QgfHwgJ2xvY2FsaG9zdCcsXHJcbiAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiB8fCAncm9vdCcsXHJcbiAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LkRCX1BBU1NXT1JEIHx8ICcnLFxyXG4gIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQl9OQU1FIHx8ICdqaF9hcGFydG1lbnQnLFxyXG4gIHBvcnQ6IHByb2Nlc3MuZW52LkRCX1BPUlQgfHwgMzMwNixcclxuICB3YWl0Rm9yQ29ubmVjdGlvbnM6IHRydWUsXHJcbiAgY29ubmVjdGlvbkxpbWl0OiAxMCxcclxuICBxdWV1ZUxpbWl0OiAwXHJcbn0pO1xyXG5cclxuLy8gVGVzdCBkYXRhYmFzZSBjb25uZWN0aW9uXHJcbmFzeW5jIGZ1bmN0aW9uIHRlc3RDb25uZWN0aW9uKCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XHJcbiAgICBjb25zb2xlLmxvZygnRGF0YWJhc2UgY29ubmVjdGlvbiBzdWNjZXNzZnVsJyk7XHJcbiAgICBjb25uZWN0aW9uLnJlbGVhc2UoKTtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZDonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBwb29sLFxyXG4gIHRlc3RDb25uZWN0aW9uXHJcbn07ICJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJwb29sIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiREJfSE9TVCIsInVzZXIiLCJEQl9VU0VSIiwicGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsImRhdGFiYXNlIiwiREJfTkFNRSIsInBvcnQiLCJEQl9QT1JUIiwid2FpdEZvckNvbm5lY3Rpb25zIiwiY29ubmVjdGlvbkxpbWl0IiwicXVldWVMaW1pdCIsInRlc3RDb25uZWN0aW9uIiwiY29ubmVjdGlvbiIsImdldENvbm5lY3Rpb24iLCJjb25zb2xlIiwibG9nIiwicmVsZWFzZSIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.js\n");

/***/ }),

/***/ "(rsc)/./models/bill.js":
/*!************************!*\
  !*** ./models/bill.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { pool } = __webpack_require__(/*! ../config/database */ \"(rsc)/./config/database.js\");\nconst Setting = __webpack_require__(/*! ./setting */ \"(rsc)/./models/setting.js\");\nclass Bill {\n    // Get all bills with tenant and room details\n    static async findAll() {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        ORDER BY b.bill_date DESC\n      `);\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding all bills:\", error);\n            throw error;\n        }\n    }\n    // Get unpaid bills\n    static async findUnpaid() {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.status = 'unpaid' OR b.status = 'partial'\n        ORDER BY b.bill_date\n      `);\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding unpaid bills:\", error);\n            throw error;\n        }\n    }\n    // Get active bills (unpaid/partial)\n    static async findActive() {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.status IN ('unpaid', 'partial')\n        ORDER BY b.bill_date DESC\n      `);\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding active bills:\", error);\n            throw error;\n        }\n    }\n    // Get paid bills (archived)\n    static async findPaid() {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name,\n               p.payment_date as paid_date\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        LEFT JOIN (\n          SELECT bill_id, MAX(payment_date) as payment_date\n          FROM payments\n          GROUP BY bill_id\n        ) p ON b.id = p.bill_id\n        WHERE b.status = 'paid'\n        ORDER BY b.bill_date DESC\n      `);\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding paid bills:\", error);\n            throw error;\n        }\n    }\n    // Get bills by tenant ID\n    static async findByTenantId(tenantId) {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT b.*, r.room_number, br.name as branch_name,\n          (SELECT SUM(amount) FROM payments WHERE bill_id = b.id) as paid_amount\n        FROM bills b\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.tenant_id = ?\n        ORDER BY b.bill_date DESC\n      `, [\n                tenantId\n            ]);\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding bills by tenant ID:\", error);\n            throw error;\n        }\n    }\n    // Get bill by ID with payments\n    static async findById(id) {\n        try {\n            const [bills] = await pool.execute(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.id = ?\n      `, [\n                id\n            ]);\n            if (!bills.length) {\n                return null;\n            }\n            const bill = bills[0];\n            // Get payments for this bill\n            const [payments] = await pool.execute(\"SELECT * FROM payments WHERE bill_id = ? ORDER BY payment_date DESC\", [\n                id\n            ]);\n            bill.payments = payments;\n            bill.paid_amount = payments.reduce((sum, payment)=>sum + Number(payment.amount), 0);\n            return bill;\n        } catch (error) {\n            console.error(\"Error finding bill by ID:\", error);\n            throw error;\n        }\n    }\n    // Create a new comprehensive bill\n    static async create(billData) {\n        const { tenant_id, room_id, bill_date, rent_from, rent_to, rent_amount, electric_present_reading = 0, electric_previous_reading = 0, electric_consumption = 0, electric_amount = 0, electric_reading_date, electric_previous_date, water_amount, extra_fee_amount = 0, extra_fee_description = null, total_amount, status = \"unpaid\", notes, prepared_by } = billData;\n        try {\n            // Get current rates from settings\n            const rates = await Setting.getBillingRates();\n            const finalElectricRate = billData.electric_rate_per_kwh || rates.electric_rate_per_kwh;\n            const finalWaterAmount = water_amount || rates.water_fixed_amount;\n            // Convert undefined values to null for SQL compatibility\n            const sqlParams = [\n                tenant_id ?? null,\n                room_id ?? null,\n                bill_date ?? null,\n                rent_from ?? null,\n                rent_to ?? null,\n                rent_amount ?? null,\n                electric_present_reading ?? 0,\n                electric_previous_reading ?? 0,\n                electric_consumption ?? 0,\n                finalElectricRate ?? null,\n                electric_amount ?? 0,\n                electric_reading_date ?? null,\n                electric_previous_date ?? null,\n                finalWaterAmount ?? null,\n                extra_fee_amount ?? 0,\n                extra_fee_description ?? null,\n                total_amount ?? null,\n                status ?? \"unpaid\",\n                notes ?? null,\n                prepared_by ?? null\n            ];\n            const [result] = await pool.execute(`\n        INSERT INTO bills (\n          tenant_id, room_id, bill_date, rent_from, rent_to, rent_amount,\n          electric_present_reading, electric_previous_reading, electric_consumption, \n          electric_rate_per_kwh, electric_amount, electric_reading_date, electric_previous_date,\n          water_amount, extra_fee_amount, extra_fee_description, total_amount, status, notes, prepared_by\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `, sqlParams);\n            return {\n                id: result.insertId,\n                ...billData,\n                electric_rate_per_kwh: finalElectricRate,\n                water_amount: finalWaterAmount\n            };\n        } catch (error) {\n            console.error(\"Error creating new bill:\", error);\n            throw error;\n        }\n    }\n    // Update bill\n    static async update(id, billData) {\n        const { bill_date, rent_from, rent_to, rent_amount, electric_present_reading, electric_previous_reading, electric_consumption, electric_rate_per_kwh, electric_amount, electric_reading_date, electric_previous_date, water_amount, total_amount, status, notes, prepared_by } = billData;\n        try {\n            // Convert undefined values to null for SQL compatibility\n            const sqlParams = [\n                bill_date ?? null,\n                rent_from ?? null,\n                rent_to ?? null,\n                rent_amount ?? null,\n                electric_present_reading ?? null,\n                electric_previous_reading ?? null,\n                electric_consumption ?? null,\n                electric_rate_per_kwh ?? null,\n                electric_amount ?? null,\n                electric_reading_date ?? null,\n                electric_previous_date ?? null,\n                water_amount ?? null,\n                total_amount ?? null,\n                status ?? null,\n                notes ?? null,\n                prepared_by ?? null,\n                id\n            ];\n            await pool.execute(`\n        UPDATE bills SET \n          bill_date = ?, rent_from = ?, rent_to = ?, rent_amount = ?,\n          electric_present_reading = ?, electric_previous_reading = ?, electric_consumption = ?, \n          electric_rate_per_kwh = ?, electric_amount = ?, electric_reading_date = ?, electric_previous_date = ?,\n          water_amount = ?, total_amount = ?, status = ?, notes = ?, prepared_by = ?\n        WHERE id = ?\n      `, sqlParams);\n            return {\n                id,\n                ...billData\n            };\n        } catch (error) {\n            console.error(\"Error updating bill:\", error);\n            throw error;\n        }\n    }\n    // Delete bill\n    static async delete(id) {\n        try {\n            await pool.execute(\"DELETE FROM bills WHERE id = ?\", [\n                id\n            ]);\n            return true;\n        } catch (error) {\n            console.error(\"Error deleting bill:\", error);\n            throw error;\n        }\n    }\n    // Update bill status\n    static async updateStatus(id, status) {\n        try {\n            await pool.execute(\"UPDATE bills SET status = ? WHERE id = ?\", [\n                status,\n                id\n            ]);\n            return true;\n        } catch (error) {\n            console.error(\"Error updating bill status:\", error);\n            throw error;\n        }\n    }\n    // Calculate consumption and amounts based on readings and current rates\n    static async calculateUtilityAmounts(presentReading, previousReading) {\n        try {\n            const rates = await Setting.getBillingRates();\n            const consumption = Math.max(0, presentReading - previousReading);\n            const electricAmount = consumption * rates.electric_rate_per_kwh;\n            return {\n                consumption,\n                electricAmount,\n                waterAmount: rates.water_fixed_amount,\n                electricRate: rates.electric_rate_per_kwh\n            };\n        } catch (error) {\n            console.error(\"Error calculating utility amounts:\", error);\n            throw error;\n        }\n    }\n    // Get billing stats\n    static async getStats() {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT\n          COUNT(*) as total_bills,\n          SUM(total_amount) as total_amount,\n          SUM(CASE WHEN status = 'paid' THEN total_amount ELSE 0 END) as paid_amount,\n          SUM(CASE WHEN (status = 'unpaid' OR status = 'partial') THEN total_amount ELSE 0 END) as unpaid_amount,\n          COUNT(CASE WHEN status = 'unpaid' OR status = 'partial' THEN 1 END) as unpaid_bills,\n          SUM(rent_amount) as total_rent,\n          SUM(electric_amount) as total_electric,\n          SUM(water_amount) as total_water\n        FROM bills\n      `);\n            return rows[0];\n        } catch (error) {\n            console.error(\"Error getting billing stats:\", error);\n            throw error;\n        }\n    }\n    // AUTOMATIC BILLING METHODS - DISABLED\n    // Note: Automatic billing has been disabled. Bills must be created manually.\n    /*\n  // Get bills that need next cycle generation (current period ended)\n  static async getBillsNeedingNextCycle() {\n    // DISABLED - Automatic billing cycles removed\n    return [];\n  }\n\n  // Generate next billing cycle\n  static async generateNextCycle(tenantId, roomId, lastBillEndDate, previousElectricReading, monthlyRent) {\n    // DISABLED - Automatic billing cycles removed\n    throw new Error('Automatic billing cycles have been disabled. Please create bills manually.');\n  }\n\n  // Process all automatic billing cycles\n  static async processAutomaticCycles() {\n    // DISABLED - Automatic billing cycles removed\n    return [];\n        }\n  */ // Get bills needing electricity reading update (3 days before cycle ends)\n    static async getBillsNeedingElectricUpdate() {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT \n          b.*,\n          t.name as tenant_name,\n          t.email as tenant_email,\n          r.room_number,\n          r.monthly_rent,\n          br.name as branch_name,\n          br.address as branch_address\n        FROM bills b\n        INNER JOIN tenants t ON b.tenant_id = t.id\n        INNER JOIN rooms r ON b.room_id = r.id\n        INNER JOIN branches br ON r.branch_id = br.id\n        WHERE b.status = 'unpaid'\n        AND b.electric_consumption = 0\n        AND DATEDIFF(b.rent_to, CURDATE()) <= 3\n        AND DATEDIFF(b.rent_to, CURDATE()) >= 0\n        ORDER BY b.rent_to ASC\n      `);\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding bills needing electric update:\", error);\n            throw error;\n        }\n    }\n    // Update electricity reading and auto-calculate amounts\n    static async updateElectricReading(billId, presentReading, readingDate) {\n        try {\n            // Get current bill\n            const bill = await this.findById(billId);\n            if (!bill) {\n                throw new Error(\"Bill not found\");\n            }\n            const previousReading = parseFloat(bill.electric_previous_reading) || 0;\n            const currentReading = parseFloat(presentReading) || 0;\n            // Calculate consumption\n            const consumption = Math.max(0, currentReading - previousReading);\n            // Get current electric rate\n            const Setting = __webpack_require__(/*! ./setting */ \"(rsc)/./models/setting.js\");\n            const rates = await Setting.getBillingRates();\n            const electricAmount = consumption * rates.electric_rate_per_kwh;\n            // Calculate new total\n            const newTotal = parseFloat(bill.rent_amount) + electricAmount + parseFloat(bill.water_amount);\n            // Update bill\n            const [result] = await pool.execute(`\n        UPDATE bills SET \n          electric_present_reading = ?,\n          electric_consumption = ?,\n          electric_amount = ?,\n          electric_reading_date = ?,\n          total_amount = ?,\n          notes = CONCAT(COALESCE(notes, ''), ' | Electric reading updated: ', ?, ' kWh on ', ?)\n        WHERE id = ?\n      `, [\n                currentReading,\n                consumption,\n                electricAmount,\n                readingDate,\n                newTotal,\n                currentReading,\n                readingDate,\n                billId\n            ]);\n            return {\n                success: true,\n                previousReading,\n                currentReading,\n                consumption,\n                electricAmount,\n                newTotal,\n                message: `Electric reading updated: ${consumption} kWh consumed, ₱${electricAmount.toFixed(2)} charged`\n            };\n        } catch (error) {\n            console.error(\"Error updating electric reading:\", error);\n            throw error;\n        }\n    }\n    // Mark bill as ready to send (finalized)\n    static async markAsReadyToSend(billId) {\n        try {\n            const [result] = await pool.execute(`\n        UPDATE bills SET \n          notes = CONCAT(COALESCE(notes, ''), ' | Bill finalized and ready to send'),\n          updated_at = CURRENT_TIMESTAMP\n        WHERE id = ?\n      `, [\n                billId\n            ]);\n            return result.affectedRows > 0;\n        } catch (error) {\n            console.error(\"Error marking bill as ready to send:\", error);\n            throw error;\n        }\n    }\n    // Get bills needing billing reminders (3 days before due date and overdue)\n    static async getBillsNeedingReminders() {\n        try {\n            const [rows] = await pool.execute(`\n        SELECT \n          b.*,\n          t.name as tenant_name,\n          t.email as tenant_email,\n          r.room_number,\n          r.monthly_rent,\n          br.name as branch_name,\n          br.address as branch_address,\n          COALESCE(SUM(p.amount), 0) as total_paid,\n          (b.total_amount - COALESCE(SUM(p.amount), 0)) as remaining_balance,\n          DATEDIFF(b.rent_to, CURDATE()) as days_until_due\n        FROM bills b\n        INNER JOIN tenants t ON b.tenant_id = t.id\n        INNER JOIN rooms r ON b.room_id = r.id\n        INNER JOIN branches br ON r.branch_id = br.id\n        LEFT JOIN payments p ON b.id = p.bill_id\n        WHERE b.status IN ('unpaid', 'partial')\n        AND DATEDIFF(b.rent_to, CURDATE()) <= 3\n        GROUP BY b.id\n        ORDER BY b.rent_to ASC, br.name, r.room_number\n      `);\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding bills needing reminders:\", error);\n            throw error;\n        }\n    }\n}\nmodule.exports = Bill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/bill.js\n");

/***/ }),

/***/ "(rsc)/./models/setting.js":
/*!***************************!*\
  !*** ./models/setting.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { pool } = __webpack_require__(/*! ../config/database */ \"(rsc)/./config/database.js\");\nclass Setting {\n    // Get all settings\n    static async findAll() {\n        try {\n            const [rows] = await pool.execute(\"SELECT * FROM settings ORDER BY setting_key\");\n            return rows;\n        } catch (error) {\n            console.error(\"Error finding all settings:\", error);\n            throw error;\n        }\n    }\n    // Get setting by key\n    static async findByKey(key) {\n        try {\n            const [rows] = await pool.execute(\"SELECT * FROM settings WHERE setting_key = ?\", [\n                key\n            ]);\n            return rows[0] || null;\n        } catch (error) {\n            console.error(\"Error finding setting by key:\", error);\n            throw error;\n        }\n    }\n    // Get setting value by key\n    static async getValue(key) {\n        try {\n            const setting = await this.findByKey(key);\n            return setting ? parseFloat(setting.setting_value) : null;\n        } catch (error) {\n            console.error(\"Error getting setting value:\", error);\n            throw error;\n        }\n    }\n    // Update setting value (create if doesn't exist)\n    static async updateValue(key, value, description = null) {\n        try {\n            // Use INSERT ... ON DUPLICATE KEY UPDATE for upsert functionality\n            const [result] = await pool.execute(`\r\n        INSERT INTO settings (setting_key, setting_value, description) \r\n        VALUES (?, ?, ?)\r\n        ON DUPLICATE KEY UPDATE \r\n        setting_value = VALUES(setting_value),\r\n        description = COALESCE(VALUES(description), description)\r\n      `, [\n                key,\n                value,\n                description\n            ]);\n            return true; // Always return true since upsert always succeeds\n        } catch (error) {\n            console.error(\"Error updating setting:\", error);\n            throw error;\n        }\n    }\n    // Create new setting\n    static async create(key, value, description = null) {\n        try {\n            const [result] = await pool.execute(\"INSERT INTO settings (setting_key, setting_value, description) VALUES (?, ?, ?)\", [\n                key,\n                value,\n                description\n            ]);\n            return {\n                id: result.insertId,\n                setting_key: key,\n                setting_value: value,\n                description\n            };\n        } catch (error) {\n            console.error(\"Error creating setting:\", error);\n            throw error;\n        }\n    }\n    // Get current rates for billing\n    static async getBillingRates() {\n        try {\n            const electricRate = await this.getValue(\"electric_rate_per_kwh\") || 12.00;\n            const waterAmount = await this.getValue(\"water_fixed_amount\") || 200.00;\n            const roomRate = await this.getValue(\"default_room_rate\") || 3500.00;\n            return {\n                electric_rate_per_kwh: electricRate,\n                water_fixed_amount: waterAmount,\n                default_room_rate: roomRate\n            };\n        } catch (error) {\n            console.error(\"Error getting billing rates:\", error);\n            throw error;\n        }\n    }\n    // Update multiple billing rates at once\n    static async updateBillingRates(rates) {\n        try {\n            const updates = [];\n            if (rates.electric_rate_per_kwh !== undefined) {\n                updates.push(this.updateValue(\"electric_rate_per_kwh\", rates.electric_rate_per_kwh));\n            }\n            if (rates.water_fixed_amount !== undefined) {\n                updates.push(this.updateValue(\"water_fixed_amount\", rates.water_fixed_amount));\n            }\n            if (rates.default_room_rate !== undefined) {\n                updates.push(this.updateValue(\"default_room_rate\", rates.default_room_rate));\n            }\n            await Promise.all(updates);\n            return true;\n        } catch (error) {\n            console.error(\"Error updating billing rates:\", error);\n            throw error;\n        }\n    }\n}\nmodule.exports = Setting;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/setting.js\n");

/***/ }),

/***/ "(rsc)/./services/emailService.js":
/*!**********************************!*\
  !*** ./services/emailService.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"nodemailer\");\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nodemailer__WEBPACK_IMPORTED_MODULE_0__);\n\n// Create email transporter\nconst createTransporter = ()=>{\n    return nodemailer__WEBPACK_IMPORTED_MODULE_0___default().createTransport({\n        service: \"gmail\",\n        auth: {\n            user: \"official.jhapartment@gmail.com\" || 0,\n            pass: \"gcme okaj qiyf ubki\" || 0 // Replace with your Gmail App Password\n        }\n    });\n};\n// Format currency for display\nconst formatCurrency = (amount)=>{\n    return new Intl.NumberFormat(\"en-PH\", {\n        style: \"currency\",\n        currency: \"PHP\"\n    }).format(amount);\n};\n// Format date for display\nconst formatDate = (date)=>{\n    if (!date) return \"N/A\";\n    try {\n        const dateObj = new Date(date);\n        if (isNaN(dateObj.getTime())) return \"N/A\";\n        return new Intl.DateTimeFormat(\"en-PH\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        }).format(dateObj);\n    } catch (error) {\n        return \"N/A\";\n    }\n};\n// Generate HTML bill template\nconst generateBillHTML = (bill)=>{\n    const electricReading = bill.electric_present_reading && bill.electric_previous_reading ? `${bill.electric_previous_reading} → ${bill.electric_present_reading}` : \"N/A\";\n    const electricConsumption = bill.electric_consumption || 0;\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n        .bill-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }\n        .header h1 { margin: 0; font-size: 28px; }\n        .header p { margin: 5px 0 0 0; opacity: 0.9; }\n        .content { padding: 30px; }\n        .bill-info { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 25px; }\n        .bill-info h3 { margin: 0 0 15px 0; color: #333; }\n        .info-row { display: flex; justify-content: space-between; margin-bottom: 10px; }\n        .info-label { font-weight: bold; color: #666; }\n        .info-value { color: #333; }\n        .charges-section { margin-bottom: 25px; }\n        .charges-section h3 { border-bottom: 2px solid #667eea; padding-bottom: 10px; margin-bottom: 20px; color: #333; }\n        .charge-item { display: flex; justify-content: space-between; padding: 15px; margin-bottom: 10px; border-radius: 6px; }\n        .charge-rent { background: #e3f2fd; border-left: 4px solid #2196f3; }\n        .charge-electric { background: #fff3e0; border-left: 4px solid #ff9800; }\n        .charge-water { background: #e8f5e8; border-left: 4px solid #4caf50; }\n        .total-section { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px; text-align: center; }\n        .total-amount { font-size: 32px; font-weight: bold; margin: 10px 0; }\n        .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        .payment-note { background: #f0f8ff; border: 1px solid #b3d9ff; padding: 15px; border-radius: 6px; margin: 20px 0; }\n      </style>\n    </head>\n    <body>\n      <div class=\"bill-container\">\n        <!-- Header -->\n        <div class=\"header\">\n          <h1>${bill.branch_name || \"JH APARTMENT\"}</h1>\n          <p>${bill.branch_address || \"Patin-ay, Prosperidad, Agusan del Sur\"}</p>\n        </div>\n\n        <!-- Content -->\n        <div class=\"content\">\n          <!-- Bill Information -->\n          <div class=\"bill-info\">\n            <h3>Bill Information</h3>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Tenant Name:</span>\n              <span class=\"info-value\">${bill.tenant_name}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Room Number:</span>\n              <span class=\"info-value\">${bill.room_number}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Bill Period:</span>\n              <span class=\"info-value\">${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Bill Date:</span>\n              <span class=\"info-value\">${formatDate(bill.bill_date)}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Due Date:</span>\n              <span class=\"info-value\">${formatDate(bill.rent_to)}</span>\n            </div>\n          </div>\n\n          <!-- Charges Breakdown -->\n          <div class=\"charges-section\">\n            <h3>Charges Breakdown</h3>\n            \n            <!-- Rent -->\n            <div class=\"charge-item charge-rent\">\n              <div>\n                <strong>Monthly Rent</strong>\n                <br><small>Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.rent_amount)}</strong>\n              </div>\n            </div>\n\n            <!-- Electric -->\n            <div class=\"charge-item charge-electric\">\n              <div>\n                <strong>Electricity</strong>\n                <br><small>Reading: ${electricReading} (${electricConsumption} kWh)</small>\n                <br><small>Rate: ₱${bill.electric_rate_per_kwh}/kWh</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.electric_amount || 0)}</strong>\n              </div>\n            </div>\n\n            <!-- Water -->\n            <div class=\"charge-item charge-water\">\n              <div>\n                <strong>Water</strong>\n                <br><small>Fixed monthly charge</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.water_amount)}</strong>\n              </div>\n            </div>\n\n            ${bill.extra_fee_amount > 0 ? `\n            <!-- Extra Fees -->\n            <div class=\"charge-item\" style=\"background: #f3e5f5; border-left: 4px solid #9c27b0;\">\n              <div>\n                <strong>Extra Fees</strong>\n                <br><small>${bill.extra_fee_description || \"Additional charges\"}</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.extra_fee_amount)}</strong>\n              </div>\n            </div>\n            ` : \"\"}\n          </div>\n\n          <!-- Total -->\n          <div class=\"total-section\">\n            <div>Total Amount Due</div>\n            <div class=\"total-amount\">${formatCurrency(bill.total_amount)}</div>\n            <div>Status: ${bill.status.toUpperCase()}</div>\n          </div>\n\n          <!-- Payment Note -->\n          <div class=\"payment-note\">\n            <strong>Payment Instructions:</strong><br>\n            Please pay your bill on or before the due date to avoid any late fees. \n            Contact the management office for payment methods and assistance.\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"footer\">\n          <p>This is an automatically generated bill. For questions or concerns, please contact the management office.</p>\n          <p><strong>Generated on:</strong> ${formatDate(new Date())}</p>\n        </div>\n      </div>\n    </body>\n    </html>\n  `;\n};\n// Send bill to tenant via email\nconst sendBillToTenant = async (bill, recipientEmail, customMessage = \"\")=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Monthly Bill - Room ${bill.room_number} - ${formatDate(bill.bill_date)}`;\n        const htmlContent = generateBillHTML(bill);\n        let textMessage = `\nDear ${bill.tenant_name},\n\nYour monthly bill for Room ${bill.room_number} is ready.\n\nBill Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}\nTotal Amount: ${formatCurrency(bill.total_amount)}\nDue Date: ${formatDate(bill.rent_to)}\n\nBreakdown:\n- Rent: ${formatCurrency(bill.rent_amount)}\n- Electricity: ${formatCurrency(bill.electric_amount || 0)}\n- Water: ${formatCurrency(bill.water_amount)}${bill.extra_fee_amount > 0 ? `\n- Extra Fees: ${formatCurrency(bill.extra_fee_amount)} (${bill.extra_fee_description || \"Additional charges\"})` : \"\"}\n\nPlease pay on or before the due date.\n\nThank you,\n${bill.branch_name || \"JH Apartment\"} Management\n    `;\n        if (customMessage) {\n            textMessage = `${customMessage}\\n\\n${textMessage}`;\n        }\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textMessage,\n            html: htmlContent,\n            attachments: [] // Could add PDF attachment in the future\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Test email configuration\nconst testEmailConfig = async ()=>{\n    try {\n        const transporter = createTransporter();\n        await transporter.verify();\n        return {\n            success: true,\n            message: \"Email configuration is valid\"\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send receipt to tenant via email\nconst sendReceiptToTenant = async (bill, payments, recipientEmail, pdfBuffer)=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Payment Receipt - Room ${bill.room_number} - ${formatDate(new Date())}`;\n        let textMessage = `\nDear ${bill.tenant_name},\n\nThank you for your payment! Please find your official receipt attached.\n\nReceipt Details:\n- Bill Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}\n- Total Amount: ${formatCurrency(bill.total_amount)}\n- Amount Paid: ${formatCurrency(payments.reduce((sum, p)=>sum + parseFloat(p.amount), 0))}\n- Payment Date: ${formatDate(payments[payments.length - 1].payment_date)}\n- Status: FULLY PAID\n\nThis receipt serves as official proof of payment.\n\nThank you for choosing ${bill.branch_name || \"J&H Apartment\"}!\n\nBest regards,\n${bill.branch_name || \"J&H Apartment\"} Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textMessage,\n            attachments: [\n                {\n                    filename: `receipt-${bill.id}-${Date.now()}.pdf`,\n                    content: pdfBuffer,\n                    contentType: \"application/pdf\"\n                }\n            ]\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            message: \"Receipt sent successfully via email\",\n            messageId: result.messageId\n        };\n    } catch (error) {\n        console.error(\"Receipt email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send welcome email to new tenant\nconst sendWelcomeEmail = async (tenant, roomInfo)=>{\n    try {\n        // Emails are now enabled - attempting to send welcome email\n        const transporter = createTransporter();\n        const subject = `Welcome to J&H Apartment! - Room ${roomInfo.room_number}`;\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }\n          .header h1 { margin: 0; font-size: 28px; }\n          .content { padding: 30px; }\n          .welcome-section { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .info-box { background: #e3f2fd; border-left: 4px solid #2196f3; padding: 15px; margin: 15px 0; }\n          .deposit-info { background: #fff3e0; border-left: 4px solid #ff9800; padding: 15px; margin: 15px 0; }\n          .contract-info { background: #e8f5e8; border-left: 4px solid #4caf50; padding: 15px; margin: 15px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>🏠 Welcome to J&H Apartment!</h1>\n            <p>Your new home awaits you</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"welcome-section\">\n              <h2>Dear ${tenant.name},</h2>\n              <p>We are thrilled to welcome you to J&H Apartment! Thank you for choosing us as your new home. We're committed to providing you with a comfortable and pleasant living experience.</p>\n            </div>\n            \n            <div class=\"info-box\">\n              <h3>📋 Your Tenancy Details</h3>\n              <p><strong>Room Number:</strong> ${roomInfo.room_number}</p>\n              <p><strong>Monthly Rent:</strong> ${formatCurrency(roomInfo.monthly_rent)}</p>\n              <p><strong>Contract Start:</strong> ${formatDate(tenant.contract_start_date)}</p>\n              <p><strong>Contract End:</strong> ${formatDate(tenant.contract_end_date)}</p>\n              <p><strong>Contract Duration:</strong> ${tenant.contract_duration_months} months</p>\n            </div>\n            \n            <div class=\"deposit-info\">\n              <h3>💰 Deposit Information</h3>\n              <p><strong>Advance Payment:</strong> ${formatCurrency(tenant.advance_payment)}</p>\n              <p><strong>Security Deposit:</strong> ${formatCurrency(tenant.security_deposit)}</p>\n              <p><strong>Total Required:</strong> ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}</p>\n              <p><em>A separate deposit receipt will be sent to you once payment is confirmed.</em></p>\n            </div>\n            \n            <div class=\"contract-info\">\n              <h3>📋 Important Information</h3>\n              <ul>\n                <li>Your rent is due monthly in advance</li>\n                <li>Water and electricity bills will be calculated based on usage</li>\n                <li>We'll notify you 1 month before your contract expires</li>\n                <li>Please keep your deposit receipts for future reference</li>\n                <li>Contact management for any maintenance requests</li>\n              </ul>\n            </div>\n            \n            <div class=\"welcome-section\">\n              <h3>📞 Contact Information</h3>\n              <p><strong>Management Office:</strong> Available during business hours</p>\n              <p><strong>Email:</strong> official.jhapartment@gmail.com</p>\n              <p><strong>Address:</strong> Patin-ay, Prosperidad, Agusan Del Sur</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <p style=\"font-size: 18px; color: #667eea;\"><strong>Welcome to your new home! 🏡</strong></p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This email was sent automatically by J&H Apartment Management System</p>\n            <p>If you have any questions, please contact our management office</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${tenant.name},\n\nWelcome to J&H Apartment! \n\nYour Tenancy Details:\n- Room Number: ${roomInfo.room_number}\n- Monthly Rent: ${formatCurrency(roomInfo.monthly_rent)}\n- Contract Period: ${formatDate(tenant.contract_start_date)} to ${formatDate(tenant.contract_end_date)}\n- Duration: ${tenant.contract_duration_months} months\n\nDeposit Information:\n- Advance Payment: ${formatCurrency(tenant.advance_payment)}\n- Security Deposit: ${formatCurrency(tenant.security_deposit)}\n- Total Required: ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}\n\nImportant Notes:\n- Monthly rent is due in advance\n- We'll notify you 1 month before contract expiry\n- Keep deposit receipts for reference\n- Contact management for maintenance requests\n\nWelcome to your new home!\n\nBest regards,\nJ&H Apartment Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: tenant.email,\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Welcome email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Welcome email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send deposit receipt email\nconst sendDepositReceiptEmail = async (tenant, roomInfo, depositReceiptBuffer)=>{\n    try {\n        // Emails are now enabled - attempting to send deposit receipt email\n        const transporter = createTransporter();\n        const subject = `Deposit Receipt - Room ${roomInfo.room_number} - J&H Apartment`;\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .receipt-info { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .amount-box { background: #e8f5e8; border: 2px solid #28a745; padding: 20px; border-radius: 8px; text-align: center; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>💰 Deposit Receipt</h1>\n            <p>Official Payment Confirmation</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"receipt-info\">\n              <h3>Dear ${tenant.name},</h3>\n              <p>Thank you for your payment! We have received your advance payment and security deposit for Room ${roomInfo.room_number}.</p>\n            </div>\n            \n            <div class=\"amount-box\">\n              <h3>Payment Summary</h3>\n              <p><strong>Advance Payment:</strong> ${formatCurrency(tenant.advance_payment)}</p>\n              <p><strong>Security Deposit:</strong> ${formatCurrency(tenant.security_deposit)}</p>\n              <hr style=\"margin: 15px 0;\">\n              <p style=\"font-size: 18px;\"><strong>Total Paid: ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}</strong></p>\n            </div>\n            \n            <div class=\"receipt-info\">\n              <h3>📋 Receipt Details</h3>\n              <p><strong>Receipt Date:</strong> ${formatDate(new Date())}</p>\n              <p><strong>Tenant:</strong> ${tenant.name}</p>\n              <p><strong>Room:</strong> ${roomInfo.room_number}</p>\n              <p><strong>Contract Period:</strong> ${formatDate(tenant.contract_start_date)} to ${formatDate(tenant.contract_end_date)}</p>\n            </div>\n            \n            <div style=\"background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 6px; margin: 20px 0;\">\n              <h4>📄 Official Receipt Attached</h4>\n              <p>Please find your official deposit receipt attached to this email. Keep this receipt for your records as proof of payment.</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <p style=\"color: #28a745; font-weight: bold;\">✅ Payment Confirmed - Welcome to J&H Apartment!</p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This receipt is automatically generated and serves as official proof of payment</p>\n            <p>For any questions, please contact our management office</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${tenant.name},\n\nDEPOSIT RECEIPT - J&H APARTMENT\n\nThank you for your payment! We have received your deposits for Room ${roomInfo.room_number}.\n\nPayment Summary:\n- Advance Payment: ${formatCurrency(tenant.advance_payment)}\n- Security Deposit: ${formatCurrency(tenant.security_deposit)}\n- Total Paid: ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}\n\nReceipt Details:\n- Date: ${formatDate(new Date())}\n- Tenant: ${tenant.name}\n- Room: ${roomInfo.room_number}\n- Contract: ${formatDate(tenant.contract_start_date)} to ${formatDate(tenant.contract_end_date)}\n\nYour official receipt is attached to this email. Please keep it for your records.\n\nWelcome to J&H Apartment!\n\nBest regards,\nJ&H Apartment Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: tenant.email,\n            subject: subject,\n            text: textContent,\n            html: htmlContent,\n            attachments: [\n                {\n                    filename: `deposit-receipt-${tenant.id}-${Date.now()}.pdf`,\n                    content: depositReceiptBuffer,\n                    contentType: \"application/pdf\"\n                }\n            ]\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Deposit receipt email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Deposit receipt email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send contract expiry notification\nconst sendContractExpiryNotification = async (tenant, roomInfo)=>{\n    try {\n        // Emails are now enabled - attempting to send contract expiry notification\n        const transporter = createTransporter();\n        const subject = `Contract Expiry Notice - Room ${roomInfo.room_number} - Action Required`;\n        const daysUntilExpiry = Math.ceil((new Date(tenant.contract_end_date) - new Date()) / (1000 * 60 * 60 * 24));\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .notice-box { background: #fff3cd; border: 2px solid #ffc107; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .info-section { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .action-box { background: #e3f2fd; border-left: 4px solid #2196f3; padding: 20px; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>⚠️ Contract Expiry Notice</h1>\n            <p>Important: Action Required</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"notice-box\">\n              <h3>Dear ${tenant.name},</h3>\n              <p style=\"font-size: 16px;\"><strong>Your tenancy contract will expire in ${daysUntilExpiry} days.</strong></p>\n              <p>Contract End Date: <strong>${formatDate(tenant.contract_end_date)}</strong></p>\n            </div>\n            \n            <div class=\"info-section\">\n              <h3>📋 Current Contract Details</h3>\n              <p><strong>Room Number:</strong> ${roomInfo.room_number}</p>\n              <p><strong>Contract Start:</strong> ${formatDate(tenant.contract_start_date)}</p>\n              <p><strong>Contract End:</strong> ${formatDate(tenant.contract_end_date)}</p>\n              <p><strong>Monthly Rent:</strong> ${formatCurrency(roomInfo.monthly_rent)}</p>\n            </div>\n            \n            <div class=\"action-box\">\n              <h3>🔄 Renewal Options</h3>\n              <p>If you wish to continue staying with us, please contact our management office to discuss renewal terms:</p>\n              <ul>\n                <li>Standard 6-month contract renewal</li>\n                <li>Custom contract duration options available</li>\n                <li>Current rent rates may apply</li>\n                <li>New contract to be signed before expiry date</li>\n              </ul>\n            </div>\n            \n            <div style=\"background: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 6px; margin: 20px 0;\">\n              <h4>⏰ Important Deadlines</h4>\n              <p><strong>Please notify us of your intentions by:</strong> ${formatDate(new Date(Date.now() + 7 * 24 * 60 * 60 * 1000))}</p>\n              <p>This will allow us sufficient time to process your renewal or arrange for a smooth transition.</p>\n            </div>\n            \n            <div class=\"info-section\">\n              <h3>📞 Contact Management</h3>\n              <p><strong>Email:</strong> official.jhapartment@gmail.com</p>\n              <p><strong>Visit:</strong> Management Office during business hours</p>\n              <p><strong>Address:</strong> Patin-ay, Prosperidad, Agusan Del Sur</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <p style=\"color: #ff6b6b; font-weight: bold;\">⚠️ Please respond within 7 days to avoid any complications</p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated reminder sent 30 days before contract expiry</p>\n            <p>Thank you for being a valued tenant at J&H Apartment</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${tenant.name},\n\nCONTRACT EXPIRY NOTICE - J&H APARTMENT\n\nYour tenancy contract will expire in ${daysUntilExpiry} days.\n\nContract Details:\n- Room: ${roomInfo.room_number}\n- Contract End: ${formatDate(tenant.contract_end_date)}\n- Monthly Rent: ${formatCurrency(roomInfo.monthly_rent)}\n\nRenewal Options:\n- Standard 6-month renewal available\n- Custom duration options\n- Contact management office to discuss terms\n\nImportant:\nPlease notify us of your intentions by ${formatDate(new Date(Date.now() + 7 * 24 * 60 * 60 * 1000))}\n\nContact Information:\nEmail: official.jhapartment@gmail.com\nVisit: Management Office during business hours\n\nPlease respond within 7 days to avoid complications.\n\nThank you for being a valued tenant.\n\nBest regards,\nJ&H Apartment Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: tenant.email,\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Contract expiry notification sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Contract expiry email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send departure notification email\nconst sendDepartureEmail = async (recipientEmail, departureInfo)=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Departure Confirmation - Room ${departureInfo.room_number} - J&H Apartment`;\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .info-section { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .summary-box { background: #e3f2fd; border-left: 4px solid #2196f3; padding: 20px; margin: 20px 0; }\n          .refund-box { background: #e8f5e8; border-left: 4px solid #4caf50; padding: 20px; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n          .status-badge { display: inline-block; padding: 5px 15px; border-radius: 20px; font-size: 12px; font-weight: bold; }\n          .completed { background: #d4edda; color: #155724; }\n          .early { background: #fff3cd; color: #856404; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>🏠 Departure Confirmation</h1>\n            <p>J&H Apartment - Thank You for Staying With Us</p>\n          </div>\n          \n          <div class=\"content\">\n            <h3>Dear ${departureInfo.tenant_name},</h3>\n            <p>We confirm that your tenancy at J&H Apartment has been processed and your records have been updated.</p>\n            \n            <div class=\"info-section\">\n              <h3>📋 Tenancy Summary</h3>\n              <p><strong>Room Number:</strong> ${departureInfo.room_number}</p>\n              <p><strong>Branch:</strong> ${departureInfo.branch_name}</p>\n              <p><strong>Tenancy Period:</strong> ${formatDate(departureInfo.rent_start)} - ${formatDate(departureInfo.rent_end)}</p>\n              <p><strong>Contract Status:</strong> \n                <span class=\"status-badge ${departureInfo.contract_completed ? \"completed\" : \"early\"}\">\n                  ${departureInfo.contract_completed ? \"Contract Completed\" : \"Early Departure\"}\n                </span>\n              </p>\n              <p><strong>Departure Reason:</strong> ${departureInfo.reason_for_leaving?.replace(\"_\", \" \") || \"Not specified\"}</p>\n            </div>\n            \n            <div class=\"summary-box\">\n              <h3>💰 Financial Summary</h3>\n              <p><strong>Total Bills Paid:</strong> ${formatCurrency(departureInfo.total_bills_paid || 0)}</p>\n              ${departureInfo.total_bills_unpaid > 0 ? `\n                <p><strong>Outstanding Amount:</strong> <span style=\"color: #dc3545;\">${formatCurrency(departureInfo.total_bills_unpaid)}</span></p>\n                <p><small style=\"color: #dc3545;\">Please settle any outstanding amounts as soon as possible.</small></p>\n              ` : `\n                <p style=\"color: #28a745;\"><strong>✅ All bills have been settled</strong></p>\n              `}\n            </div>\n            \n            ${departureInfo.security_deposit_refund > 0 ? `\n            <div class=\"refund-box\">\n              <h3>💵 Security Deposit Refund</h3>\n              <p><strong>Refund Amount:</strong> ${formatCurrency(departureInfo.security_deposit_refund)}</p>\n              <p>Your security deposit refund will be processed according to our standard procedures. Please contact the management office for refund collection details.</p>\n            </div>\n            ` : \"\"}\n            \n            <div class=\"info-section\">\n              <h3>📞 Contact Information</h3>\n              <p>If you have any questions or need assistance, please contact us:</p>\n              <p><strong>Email:</strong> official.jhapartment@gmail.com</p>\n              <p><strong>Address:</strong> Patin-ay, Prosperidad, Agusan Del Sur</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0; padding: 20px; background: #f0f8ff; border-radius: 8px;\">\n              <h3>🙏 Thank You!</h3>\n              <p>Thank you for choosing J&H Apartment as your home. We appreciate your tenancy and wish you all the best in your future endeavors.</p>\n              <p><em>You're always welcome back!</em></p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated confirmation email</p>\n            <p>J&H Apartment Management Team</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${departureInfo.tenant_name},\n\nDEPARTURE CONFIRMATION - J&H APARTMENT\n\nWe confirm that your tenancy has been processed and your records have been updated.\n\nTenancy Summary:\n- Room: ${departureInfo.room_number}\n- Branch: ${departureInfo.branch_name}\n- Period: ${formatDate(departureInfo.rent_start)} - ${formatDate(departureInfo.rent_end)}\n- Status: ${departureInfo.contract_completed ? \"Contract Completed\" : \"Early Departure\"}\n- Reason: ${departureInfo.reason_for_leaving?.replace(\"_\", \" \") || \"Not specified\"}\n\nFinancial Summary:\n- Total Bills Paid: ${formatCurrency(departureInfo.total_bills_paid || 0)}\n${departureInfo.total_bills_unpaid > 0 ? `- Outstanding Amount: ${formatCurrency(departureInfo.total_bills_unpaid)}` : \"- All bills settled ✅\"}\n\n${departureInfo.security_deposit_refund > 0 ? `\nSecurity Deposit Refund: ${formatCurrency(departureInfo.security_deposit_refund)}\nPlease contact the management office for refund collection details.\n` : \"\"}\n\nContact Information:\nEmail: official.jhapartment@gmail.com\nAddress: Patin-ay, Prosperidad, Agusan Del Sur\n\nThank you for choosing J&H Apartment as your home. We appreciate your tenancy and wish you all the best!\n\nYou're always welcome back!\n\nBest regards,\nJ&H Apartment Management Team\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Departure email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Departure email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send monthly business report\nconst sendMonthlyReport = async (recipientEmail, reportData)=>{\n    try {\n        const transporter = createTransporter();\n        const monthName = reportData.report_period.month_name;\n        const totalRevenue = reportData.financial_summary.total_revenue.toLocaleString();\n        const occupancyRate = reportData.occupancy_metrics.occupancy_rate;\n        const activeTenants = reportData.tenant_statistics.active_tenants;\n        const revenueGrowth = reportData.financial_summary.revenue_growth;\n        // Create branch performance table\n        const branchTable = reportData.branch_performance.map((branch)=>`\n      <tr>\n        <td style=\"padding: 8px; border: 1px solid #ddd;\">${branch.branch_name}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${branch.occupied_rooms}/${branch.total_rooms}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${branch.occupancy_rate}%</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: right;\">₱${branch.revenue.toLocaleString()}</td>\n      </tr>\n    `).join(\"\");\n        // Create payment methods table\n        const paymentTable = reportData.payment_analysis.by_method.map((method)=>`\n      <tr>\n        <td style=\"padding: 8px; border: 1px solid #ddd;\">${method.payment_method}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${method.transaction_count}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: right;\">₱${method.total_amount.toLocaleString()}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${method.percentage}%</td>\n      </tr>\n    `).join(\"\");\n        // Create top performers table\n        const topPerformersTable = reportData.top_performers.map((tenant)=>`\n      <tr>\n        <td style=\"padding: 8px; border: 1px solid #ddd;\">${tenant.tenant_name}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${tenant.room_number}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: right;\">₱${tenant.total_paid.toLocaleString()}</td>\n      </tr>\n    `).join(\"\");\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Monthly Business Report - ${monthName}</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 800px; margin: 0 auto; padding: 20px; }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px; margin-bottom: 30px; }\n          .metric-card { background: #f8f9fa; border-left: 4px solid #007bff; padding: 20px; margin: 15px 0; border-radius: 5px; }\n          .metric-value { font-size: 2em; font-weight: bold; color: #007bff; }\n          .metric-label { color: #666; font-size: 0.9em; }\n          .growth-positive { color: #28a745; }\n          .growth-negative { color: #dc3545; }\n          .section { margin: 30px 0; }\n          .section-title { font-size: 1.5em; color: #333; border-bottom: 2px solid #007bff; padding-bottom: 10px; margin-bottom: 20px; }\n          table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n          th { background: #007bff; color: white; padding: 12px; text-align: left; }\n          .summary-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin: 20px 0; }\n          .alert { background: #fff3cd; border: 1px solid #ffeaa7; color: #856404; padding: 15px; border-radius: 5px; margin: 15px 0; }\n          .footer { text-align: center; margin-top: 40px; padding: 20px; background: #f8f9fa; border-radius: 5px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>📊 J&H Apartment Monthly Report</h1>\n            <h2>${monthName}</h2>\n            <p>Generated on ${new Date(reportData.report_period.generated_at).toLocaleDateString()}</p>\n          </div>\n\n          <!-- Executive Summary -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">📈 Executive Summary</h2>\n            <div class=\"summary-grid\">\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">₱${totalRevenue}</div>\n                <div class=\"metric-label\">Total Revenue</div>\n                <div class=\"${revenueGrowth >= 0 ? \"growth-positive\" : \"growth-negative\"}\">\n                  ${revenueGrowth >= 0 ? \"↗\" : \"↘\"} ${Math.abs(revenueGrowth)}% vs last month\n                </div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${occupancyRate}%</div>\n                <div class=\"metric-label\">Occupancy Rate</div>\n                <div class=\"metric-label\">${reportData.occupancy_metrics.occupied_rooms}/${reportData.occupancy_metrics.total_rooms} rooms occupied</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${activeTenants}</div>\n                <div class=\"metric-label\">Active Tenants</div>\n                <div class=\"metric-label\">Net change: ${reportData.tenant_statistics.net_tenant_change >= 0 ? \"+\" : \"\"}${reportData.tenant_statistics.net_tenant_change}</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.financial_summary.collection_rate}%</div>\n                <div class=\"metric-label\">Collection Rate</div>\n                <div class=\"metric-label\">₱${reportData.financial_summary.total_billed.toLocaleString()} billed</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Financial Performance -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">💰 Financial Performance</h2>\n            <div class=\"summary-grid\">\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.financial_summary.total_transactions}</div>\n                <div class=\"metric-label\">Total Transactions</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">₱${reportData.outstanding_summary.total_outstanding.toLocaleString()}</div>\n                <div class=\"metric-label\">Outstanding Amount</div>\n                <div class=\"metric-label\">${reportData.outstanding_summary.unpaid_bills_count + reportData.outstanding_summary.partial_bills_count} bills pending</div>\n              </div>\n            </div>\n\n            <h3>Payment Methods Breakdown</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Payment Method</th>\n                  <th>Transactions</th>\n                  <th>Amount</th>\n                  <th>Percentage</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${paymentTable}\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Branch Performance -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">🏢 Branch Performance</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Branch</th>\n                  <th>Occupancy</th>\n                  <th>Rate</th>\n                  <th>Revenue</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${branchTable}\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Tenant Statistics -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">👥 Tenant Statistics</h2>\n            <div class=\"summary-grid\">\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.tenant_statistics.new_tenants}</div>\n                <div class=\"metric-label\">New Tenants</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.tenant_statistics.departed_tenants}</div>\n                <div class=\"metric-label\">Departed Tenants</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.tenant_statistics.expiring_contracts}</div>\n                <div class=\"metric-label\">Expiring Contracts</div>\n                <div class=\"metric-label\">Next 30 days</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Top Performers -->\n          ${reportData.top_performers.length > 0 ? `\n          <div class=\"section\">\n            <h2 class=\"section-title\">🌟 Top Paying Tenants</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Tenant Name</th>\n                  <th>Room</th>\n                  <th>Amount Paid</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${topPerformersTable}\n              </tbody>\n            </table>\n          </div>\n          ` : \"\"}\n\n          <!-- Alerts & Recommendations -->\n          ${reportData.outstanding_summary.total_outstanding > 0 ? `\n          <div class=\"alert\">\n            <strong>⚠️ Action Required:</strong> There are ₱${reportData.outstanding_summary.total_outstanding.toLocaleString()} in outstanding payments that need attention.\n          </div>\n          ` : \"\"}\n\n          ${reportData.tenant_statistics.expiring_contracts > 0 ? `\n          <div class=\"alert\">\n            <strong>📅 Contract Renewals:</strong> ${reportData.tenant_statistics.expiring_contracts} contracts are expiring in the next 30 days.\n          </div>\n          ` : \"\"}\n\n          ${occupancyRate < 80 ? `\n          <div class=\"alert\">\n            <strong>🏠 Occupancy Alert:</strong> Current occupancy rate is ${occupancyRate}%. Consider marketing strategies to increase occupancy.\n          </div>\n          ` : \"\"}\n\n          <div class=\"footer\">\n            <p><strong>J&H Apartment Management System</strong></p>\n            <p>This report was automatically generated on ${new Date().toLocaleDateString()}</p>\n            <p>For questions or support, please contact the management team.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nJ&H APARTMENT MONTHLY REPORT - ${monthName}\nGenerated: ${new Date(reportData.report_period.generated_at).toLocaleDateString()}\n\nEXECUTIVE SUMMARY\n=================\nTotal Revenue: ₱${totalRevenue} (${revenueGrowth >= 0 ? \"+\" : \"\"}${revenueGrowth}% vs last month)\nOccupancy Rate: ${occupancyRate}% (${reportData.occupancy_metrics.occupied_rooms}/${reportData.occupancy_metrics.total_rooms} rooms)\nActive Tenants: ${activeTenants} (Net change: ${reportData.tenant_statistics.net_tenant_change >= 0 ? \"+\" : \"\"}${reportData.tenant_statistics.net_tenant_change})\nCollection Rate: ${reportData.financial_summary.collection_rate}%\n\nFINANCIAL PERFORMANCE\n=====================\nTotal Transactions: ${reportData.financial_summary.total_transactions}\nTotal Billed: ₱${reportData.financial_summary.total_billed.toLocaleString()}\nOutstanding Amount: ₱${reportData.outstanding_summary.total_outstanding.toLocaleString()}\n\nTENANT STATISTICS\n=================\nNew Tenants: ${reportData.tenant_statistics.new_tenants}\nDeparted Tenants: ${reportData.tenant_statistics.departed_tenants}\nExpiring Contracts (30 days): ${reportData.tenant_statistics.expiring_contracts}\n\nBRANCH PERFORMANCE\n==================\n${reportData.branch_performance.map((branch)=>`${branch.branch_name}: ${branch.occupancy_rate}% occupancy, ₱${branch.revenue.toLocaleString()} revenue`).join(\"\\n\")}\n\nThis report was automatically generated by J&H Apartment Management System.\n    `;\n        const mailOptions = {\n            from: process.env.EMAIL_FROM || \"official.jhapartment@gmail.com\",\n            to: recipientEmail,\n            subject: `📊 Monthly Business Report - ${monthName} | J&H Apartment`,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        console.log(\"Monthly report email sent successfully:\", result.messageId);\n        return {\n            success: true,\n            message: \"Monthly report email sent successfully\",\n            messageId: result.messageId\n        };\n    } catch (error) {\n        console.error(\"Error sending monthly report email:\", error);\n        throw error;\n    }\n};\n// Send billing reminder to management office\nconst sendBillingReminderToManagement = async (bills)=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Billing Reminder - ${bills.length} Bill${bills.length > 1 ? \"s\" : \"\"} Due Soon`;\n        // Group bills by due date\n        const billsByDueDate = bills.reduce((acc, bill)=>{\n            const dueDate = formatDate(bill.rent_to);\n            if (!acc[dueDate]) {\n                acc[dueDate] = [];\n            }\n            acc[dueDate].push(bill);\n            return acc;\n        }, {});\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 800px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .alert-box { background: #fff3cd; border: 2px solid #ffc107; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .bills-section { margin: 20px 0; }\n          .due-date-group { margin-bottom: 30px; }\n          .due-date-header { background: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 15px; }\n          .bill-item { background: #ffffff; border: 1px solid #dee2e6; padding: 15px; margin-bottom: 10px; border-radius: 6px; display: flex; justify-content: space-between; align-items: center; }\n          .bill-info { flex: 1; }\n          .bill-amount { font-weight: bold; color: #dc3545; }\n          .overdue { border-left: 4px solid #dc3545; }\n          .due-today { border-left: 4px solid #fd7e14; }\n          .due-soon { border-left: 4px solid #ffc107; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n          .summary-stats { display: flex; justify-content: space-around; background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .stat-item { text-align: center; }\n          .stat-number { font-size: 24px; font-weight: bold; color: #dc3545; }\n          .stat-label { font-size: 12px; color: #666; text-transform: uppercase; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>🔔 Billing Reminder</h1>\n            <p>Bills requiring attention</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"alert-box\">\n              <h3>⚠️ Action Required</h3>\n              <p>The following bills are due within the next 3 days and require immediate attention:</p>\n            </div>\n            \n            <div class=\"summary-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${bills.length}</div>\n                <div class=\"stat-label\">Total Bills</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${formatCurrency(bills.reduce((sum, bill)=>sum + parseFloat(bill.total_amount || 0), 0))}</div>\n                <div class=\"stat-label\">Total Amount</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${bills.filter((bill)=>{\n            const daysUntilDue = Math.ceil((new Date(bill.rent_to) - new Date()) / (1000 * 60 * 60 * 24));\n            return daysUntilDue <= 0;\n        }).length}</div>\n                <div class=\"stat-label\">Overdue</div>\n              </div>\n            </div>\n            \n            <div class=\"bills-section\">\n              ${Object.entries(billsByDueDate).map(([dueDate, dateBills])=>{\n            const daysUntilDue = Math.ceil((new Date(dateBills[0].rent_to) - new Date()) / (1000 * 60 * 60 * 24));\n            let dueDateClass = \"due-soon\";\n            let dueDateLabel = `Due in ${daysUntilDue} day${daysUntilDue !== 1 ? \"s\" : \"\"}`;\n            if (daysUntilDue <= 0) {\n                dueDateClass = \"overdue\";\n                dueDateLabel = `Overdue by ${Math.abs(daysUntilDue)} day${Math.abs(daysUntilDue) !== 1 ? \"s\" : \"\"}`;\n            } else if (daysUntilDue === 0) {\n                dueDateClass = \"due-today\";\n                dueDateLabel = \"Due Today\";\n            }\n            return `\n                  <div class=\"due-date-group\">\n                    <div class=\"due-date-header ${dueDateClass}\">\n                      <h3>📅 ${dueDate} - ${dueDateLabel}</h3>\n                      <p>${dateBills.length} bill${dateBills.length > 1 ? \"s\" : \"\"} • Total: ${formatCurrency(dateBills.reduce((sum, bill)=>sum + parseFloat(bill.total_amount || 0), 0))}</p>\n                    </div>\n                    ${dateBills.map((bill)=>`\n                      <div class=\"bill-item ${dueDateClass}\">\n                        <div class=\"bill-info\">\n                          <strong>${bill.tenant_name}</strong> - Room ${bill.room_number}\n                          <br>\n                          <small>${bill.branch_name} • Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</small>\n                          ${bill.status === \"partial\" ? `<br><small style=\"color: #ffc107;\">⚠️ Partially paid</small>` : \"\"}\n                        </div>\n                        <div class=\"bill-amount\">\n                          ${bill.status === \"partial\" ? `${formatCurrency(bill.remaining_balance || bill.total_amount)}<br><small>of ${formatCurrency(bill.total_amount)}</small>` : formatCurrency(bill.total_amount)}\n                        </div>\n                      </div>\n                    `).join(\"\")}\n                  </div>\n                `;\n        }).join(\"\")}\n            </div>\n            \n            <div style=\"background: #e3f2fd; border-left: 4px solid #2196f3; padding: 20px; margin: 20px 0;\">\n              <h3>📋 Recommended Actions</h3>\n              <ul>\n                <li>Contact tenants with overdue bills immediately</li>\n                <li>Send payment reminders to tenants with bills due today</li>\n                <li>Prepare collection notices for persistent overdue accounts</li>\n                <li>Update payment records as payments are received</li>\n              </ul>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated billing reminder sent daily at 9:00 AM</p>\n            <p>Generated on: ${formatDate(new Date())} at ${new Date().toLocaleTimeString()}</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nBILLING REMINDER - J&H APARTMENT MANAGEMENT\n\n${bills.length} Bill${bills.length > 1 ? \"s\" : \"\"} Due Soon\n\nSummary:\n- Total Bills: ${bills.length}\n- Total Amount: ${formatCurrency(bills.reduce((sum, bill)=>sum + parseFloat(bill.total_amount || 0), 0))}\n- Overdue Bills: ${bills.filter((bill)=>{\n            const daysUntilDue = Math.ceil((new Date(bill.rent_to) - new Date()) / (1000 * 60 * 60 * 24));\n            return daysUntilDue <= 0;\n        }).length}\n\nBills by Due Date:\n${Object.entries(billsByDueDate).map(([dueDate, dateBills])=>{\n            const daysUntilDue = Math.ceil((new Date(dateBills[0].rent_to) - new Date()) / (1000 * 60 * 60 * 24));\n            let dueDateLabel = `Due in ${daysUntilDue} day${daysUntilDue !== 1 ? \"s\" : \"\"}`;\n            if (daysUntilDue <= 0) {\n                dueDateLabel = `Overdue by ${Math.abs(daysUntilDue)} day${Math.abs(daysUntilDue) !== 1 ? \"s\" : \"\"}`;\n            } else if (daysUntilDue === 0) {\n                dueDateLabel = \"Due Today\";\n            }\n            return `\n${dueDate} - ${dueDateLabel}\n${dateBills.map((bill)=>`  • ${bill.tenant_name} - Room ${bill.room_number} (${bill.branch_name})\n    Amount: ${bill.status === \"partial\" ? `${formatCurrency(bill.remaining_balance || bill.total_amount)} of ${formatCurrency(bill.total_amount)}` : formatCurrency(bill.total_amount)}${bill.status === \"partial\" ? \" (Partially Paid)\" : \"\"}`).join(\"\\n\")}`;\n        }).join(\"\\n\")}\n\nRecommended Actions:\n- Contact tenants with overdue bills immediately\n- Send payment reminders to tenants with bills due today\n- Prepare collection notices for persistent overdue accounts\n- Update payment records as payments are received\n\nGenerated on: ${formatDate(new Date())} at ${new Date().toLocaleTimeString()}\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: \"official.jhapartment@gmail.com\",\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Billing reminder sent to management successfully\",\n            billsCount: bills.length\n        };\n    } catch (error) {\n        console.error(\"Billing reminder email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    sendBillToTenant,\n    sendReceiptToTenant,\n    testEmailConfig,\n    generateBillHTML,\n    sendWelcomeEmail,\n    sendDepositReceiptEmail,\n    sendContractExpiryNotification,\n    sendDepartureEmail,\n    sendMonthlyReport,\n    sendBillingReminderToManagement\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./services/emailService.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/semver","vendor-chunks/next","vendor-chunks/jsonwebtoken","vendor-chunks/jws","vendor-chunks/dotenv","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/safe-buffer","vendor-chunks/ms","vendor-chunks/lodash.once","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isplainobject","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isinteger","vendor-chunks/lodash.isboolean","vendor-chunks/lodash.includes","vendor-chunks/jwa","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5CJ-H-Apartment&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();