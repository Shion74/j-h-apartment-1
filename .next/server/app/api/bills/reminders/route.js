/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/bills/reminders/route";
exports.ids = ["app/api/bills/reminders/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive":
/*!************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/main/ sync ***!
  \************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("bcrypt");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "nodemailer":
/*!*****************************!*\
  !*** external "nodemailer" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("nodemailer");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = import("pg");;

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_joshu_mnu8z3u_Downloads_j_h_apartment_1_app_api_bills_reminders_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/bills/reminders/route.js */ \"(rsc)/./app/api/bills/reminders/route.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([C_Users_joshu_mnu8z3u_Downloads_j_h_apartment_1_app_api_bills_reminders_route_js__WEBPACK_IMPORTED_MODULE_3__]);\nC_Users_joshu_mnu8z3u_Downloads_j_h_apartment_1_app_api_bills_reminders_route_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/bills/reminders/route\",\n        pathname: \"/api/bills/reminders\",\n        filename: \"route\",\n        bundlePath: \"app/api/bills/reminders/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\joshu_mnu8z3u\\\\Downloads\\\\j-h-apartment-1\\\\app\\\\api\\\\bills\\\\reminders\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_joshu_mnu8z3u_Downloads_j_h_apartment_1_app_api_bills_reminders_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/bills/reminders/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZiaWxscyUyRnJlbWluZGVycyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYmlsbHMlMkZyZW1pbmRlcnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZiaWxscyUyRnJlbWluZGVycyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNqb3NodV9tbnU4ejN1JTVDRG93bmxvYWRzJTVDai1oLWFwYXJ0bWVudC0xJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNqb3NodV9tbnU4ejN1JTVDRG93bmxvYWRzJTVDai1oLWFwYXJ0bWVudC0xJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwQztBQUN2SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2otaC1hcGFydG1lbnQtbmV4dGpzLz8xMjg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGpvc2h1X21udTh6M3VcXFxcRG93bmxvYWRzXFxcXGotaC1hcGFydG1lbnQtMVxcXFxhcHBcXFxcYXBpXFxcXGJpbGxzXFxcXHJlbWluZGVyc1xcXFxyb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYmlsbHMvcmVtaW5kZXJzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYmlsbHMvcmVtaW5kZXJzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9iaWxscy9yZW1pbmRlcnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxqb3NodV9tbnU4ejN1XFxcXERvd25sb2Fkc1xcXFxqLWgtYXBhcnRtZW50LTFcXFxcYXBwXFxcXGFwaVxcXFxiaWxsc1xcXFxyZW1pbmRlcnNcXFxccm91dGUuanNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2JpbGxzL3JlbWluZGVycy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/bills/reminders/route.js":
/*!******************************************!*\
  !*** ./app/api/bills/reminders/route.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/database */ \"(rsc)/./lib/database.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../lib/auth */ \"(rsc)/./lib/auth.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_auth__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _services_emailService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../services/emailService */ \"(rsc)/./services/emailService.js\");\n/* harmony import */ var _models_bill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../models/bill */ \"(rsc)/./models/bill.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_1__, _models_bill__WEBPACK_IMPORTED_MODULE_4__]);\n([_lib_database__WEBPACK_IMPORTED_MODULE_1__, _models_bill__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nasync function POST(request) {\n    try {\n        // Check authentication\n        const authResult = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireAuth)(request);\n        if (authResult.error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: authResult.error\n            }, {\n                status: authResult.status\n            });\n        }\n        console.log(\"\\uD83D\\uDD14 Processing billing reminders...\");\n        // Get tenants that need bill creation reminders\n        const tenantsNeedingReminders = await _models_bill__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getBillsNeedingReminders();\n        if (tenantsNeedingReminders.length === 0) {\n            console.log(\"✅ No tenants need bill creation reminders today\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"No tenants need bill creation reminders today\",\n                tenants_processed: 0,\n                reminders_sent: 0\n            });\n        }\n        console.log(`📋 Found ${tenantsNeedingReminders.length} tenants needing bill creation reminders`);\n        // Filter tenants that haven't had a reminder sent today\n        const today = new Date().toISOString().split(\"T\")[0];\n        const tenantsToRemind = [];\n        for (const tenant of tenantsNeedingReminders){\n            // Check if bill creation reminder was already sent today for this tenant\n            const existingReminderResult = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.query(`\r\n        SELECT id FROM billing_reminders \r\n        WHERE tenant_id = $1 AND reminder_date = $2 AND reminder_type = 'bill_creation'\r\n      `, [\n                tenant.tenant_id,\n                today\n            ]);\n            const existingReminder = existingReminderResult.rows;\n            if (existingReminder.length === 0) {\n                tenantsToRemind.push(tenant);\n            }\n        }\n        if (tenantsToRemind.length === 0) {\n            console.log(\"✅ All bill creation reminders for today have already been sent\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"All bill creation reminders for today have already been sent\",\n                tenants_processed: tenantsNeedingReminders.length,\n                reminders_sent: 0\n            });\n        }\n        console.log(`📧 Sending bill creation reminder for ${tenantsToRemind.length} tenants`);\n        // Send email reminder to management\n        const emailResult = await _services_emailService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].sendBillingReminderToManagement(tenantsToRemind);\n        let remindersSent = 0;\n        let errors = [];\n        if (emailResult.success) {\n            // Record reminders in database\n            for (const tenant of tenantsToRemind){\n                try {\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.query(`\r\n            INSERT INTO billing_reminders \r\n            (tenant_id, reminder_date, days_before_due, email_sent, email_sent_at, reminder_type) \r\n            VALUES ($1, $2, $3, TRUE, NOW(), 'bill_creation') RETURNING id\r\n          `, [\n                        tenant.tenant_id,\n                        today,\n                        tenant.days_until_due\n                    ]);\n                    // Also log in email_notifications table\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.query(`\r\n            INSERT INTO email_notifications \r\n            (tenant_id, email_type, email_subject, recipient_email, status, sent_at) \r\n            VALUES ($1, 'bill_creation_reminder', $2, 'official.jhapartment@gmail.com', 'sent', NOW()) RETURNING id\r\n          `, [\n                        tenant.tenant_id,\n                        `Bill Creation Reminder - ${tenant.tenant_name} - Room ${tenant.room_number}`\n                    ]);\n                    remindersSent++;\n                } catch (error) {\n                    console.error(`❌ Failed to record reminder for tenant ${tenant.tenant_id}:`, error);\n                    errors.push({\n                        tenant_id: tenant.tenant_id,\n                        tenant_name: tenant.tenant_name,\n                        error: error.message\n                    });\n                }\n            }\n            console.log(`✅ Successfully sent bill creation reminder email for ${remindersSent} tenants`);\n        } else {\n            console.error(\"❌ Failed to send bill creation reminder email:\", emailResult.error);\n            // Record failed attempts\n            for (const tenant of tenantsToRemind){\n                try {\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.query(`\r\n            INSERT INTO billing_reminders \r\n            (tenant_id, reminder_date, days_before_due, email_sent, email_sent_at, reminder_type) \r\n            VALUES ($1, $2, $3, FALSE, NULL, 'bill_creation') RETURNING id\r\n          `, [\n                        tenant.tenant_id,\n                        today,\n                        tenant.days_until_due\n                    ]);\n                    await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.query(`\r\n            INSERT INTO email_notifications \r\n            (tenant_id, email_type, email_subject, recipient_email, status, error_message) \r\n            VALUES ($1, 'bill_creation_reminder', $2, 'official.jhapartment@gmail.com', 'failed', $3) RETURNING id\r\n          `, [\n                        tenant.tenant_id,\n                        `Bill Creation Reminder - ${tenant.tenant_name} - Room ${tenant.room_number}`,\n                        emailResult.error\n                    ]);\n                } catch (recordError) {\n                    console.error(`❌ Failed to record failed reminder for tenant ${tenant.tenant_id}:`, recordError);\n                }\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: emailResult.success ? `Bill creation reminder sent successfully for ${remindersSent} tenants` : `Failed to send bill creation reminder: ${emailResult.error}`,\n            tenants_processed: tenantsNeedingReminders.length,\n            tenants_to_remind: tenantsToRemind.length,\n            reminders_sent: remindersSent,\n            email_result: emailResult,\n            errors: errors.length > 0 ? errors : undefined\n        });\n    } catch (error) {\n        console.error(\"❌ Billing reminders error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"Internal server error\",\n            error: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n// GET endpoint to check what bills need reminders (for testing/preview)\nasync function GET(request) {\n    try {\n        // Check authentication\n        const authResult = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.requireAuth)(request);\n        if (authResult.error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: authResult.error\n            }, {\n                status: authResult.status\n            });\n        }\n        // Get tenants that need bill creation reminders\n        const tenantsNeedingReminders = await _models_bill__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getBillsNeedingReminders();\n        // Check which ones haven't had reminders sent today\n        const today = new Date().toISOString().split(\"T\")[0];\n        const tenantsWithReminderStatus = [];\n        for (const tenant of tenantsNeedingReminders){\n            const existingReminderResult = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.pool.query(`\r\n        SELECT id, email_sent, email_sent_at FROM billing_reminders \r\n        WHERE tenant_id = $1 AND reminder_date = $2 AND reminder_type = 'bill_creation'\r\n      `, [\n                tenant.tenant_id,\n                today\n            ]);\n            const existingReminder = existingReminderResult.rows;\n            tenantsWithReminderStatus.push({\n                ...tenant,\n                reminder_sent_today: existingReminder.length > 0,\n                reminder_details: existingReminder[0] || null\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            tenants_needing_reminders: tenantsNeedingReminders.length,\n            tenants_without_reminders_today: tenantsWithReminderStatus.filter((t)=>!t.reminder_sent_today).length,\n            tenants: tenantsWithReminderStatus\n        });\n    } catch (error) {\n        console.error(\"❌ Get billing reminders error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"Internal server error\",\n            error: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/bills/reminders/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst jwt = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\nconst bcrypt = __webpack_require__(/*! bcrypt */ \"bcrypt\");\nconst JWT_SECRET = \"your-jwt-secret-here\" || 0;\n// Generate JWT token\nfunction generateToken(user) {\n    return jwt.sign({\n        id: user.id,\n        username: user.username,\n        role: user.role\n    }, JWT_SECRET, {\n        expiresIn: \"24h\"\n    });\n}\n// Verify JWT token\nfunction verifyToken(token) {\n    try {\n        return jwt.verify(token, JWT_SECRET);\n    } catch (error) {\n        return null;\n    }\n}\n// Hash password\nasync function hashPassword(password) {\n    try {\n        const saltRounds = 10;\n        return await bcrypt.hash(password, saltRounds);\n    } catch (error) {\n        throw new Error(\"Error hashing password\");\n    }\n}\n// Compare password\nasync function comparePassword(password, hashedPassword) {\n    try {\n        return await bcrypt.compare(password, hashedPassword);\n    } catch (error) {\n        throw new Error(\"Error comparing passwords\");\n    }\n}\n// Middleware to verify authentication\nfunction requireAuth(req) {\n    // For Next.js API routes, get the authorization header\n    const authHeader = req.headers.get ? req.headers.get(\"authorization\") : req.headers.authorization;\n    const token = authHeader?.replace(\"Bearer \", \"\");\n    if (!token) {\n        return {\n            error: \"No token provided\",\n            status: 401\n        };\n    }\n    const decoded = verifyToken(token);\n    if (!decoded) {\n        return {\n            error: \"Invalid token\",\n            status: 401\n        };\n    }\n    return {\n        user: decoded\n    };\n}\nmodule.exports = {\n    generateToken,\n    verifyToken,\n    hashPassword,\n    comparePassword,\n    requireAuth\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsTUFBTUMsbUJBQU9BLENBQUM7QUFDcEIsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUUsYUFBYUMsc0JBQXNCLElBQUk7QUFFN0MscUJBQXFCO0FBQ3JCLFNBQVNFLGNBQWNDLElBQUk7SUFDekIsT0FBT1AsSUFBSVEsSUFBSSxDQUNiO1FBQ0VDLElBQUlGLEtBQUtFLEVBQUU7UUFDWEMsVUFBVUgsS0FBS0csUUFBUTtRQUN2QkMsTUFBTUosS0FBS0ksSUFBSTtJQUNqQixHQUNBUixZQUNBO1FBQUVTLFdBQVc7SUFBTTtBQUV2QjtBQUVBLG1CQUFtQjtBQUNuQixTQUFTQyxZQUFZQyxLQUFLO0lBQ3hCLElBQUk7UUFDRixPQUFPZCxJQUFJZSxNQUFNLENBQUNELE9BQU9YO0lBQzNCLEVBQUUsT0FBT2EsT0FBTztRQUNkLE9BQU87SUFDVDtBQUNGO0FBRUEsZ0JBQWdCO0FBQ2hCLGVBQWVDLGFBQWFDLFFBQVE7SUFDbEMsSUFBSTtRQUNGLE1BQU1DLGFBQWE7UUFDbkIsT0FBTyxNQUFNakIsT0FBT2tCLElBQUksQ0FBQ0YsVUFBVUM7SUFDckMsRUFBRSxPQUFPSCxPQUFPO1FBQ2QsTUFBTSxJQUFJSyxNQUFNO0lBQ2xCO0FBQ0Y7QUFFQSxtQkFBbUI7QUFDbkIsZUFBZUMsZ0JBQWdCSixRQUFRLEVBQUVLLGNBQWM7SUFDckQsSUFBSTtRQUNGLE9BQU8sTUFBTXJCLE9BQU9zQixPQUFPLENBQUNOLFVBQVVLO0lBQ3hDLEVBQUUsT0FBT1AsT0FBTztRQUNkLE1BQU0sSUFBSUssTUFBTTtJQUNsQjtBQUNGO0FBRUEsc0NBQXNDO0FBQ3RDLFNBQVNJLFlBQVlDLEdBQUc7SUFDdEIsdURBQXVEO0lBQ3ZELE1BQU1DLGFBQWFELElBQUlFLE9BQU8sQ0FBQ0MsR0FBRyxHQUFHSCxJQUFJRSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUJILElBQUlFLE9BQU8sQ0FBQ0UsYUFBYTtJQUNqRyxNQUFNaEIsUUFBUWEsWUFBWUksUUFBUSxXQUFXO0lBRTdDLElBQUksQ0FBQ2pCLE9BQU87UUFDVixPQUFPO1lBQUVFLE9BQU87WUFBcUJnQixRQUFRO1FBQUk7SUFDbkQ7SUFFQSxNQUFNQyxVQUFVcEIsWUFBWUM7SUFDNUIsSUFBSSxDQUFDbUIsU0FBUztRQUNaLE9BQU87WUFBRWpCLE9BQU87WUFBaUJnQixRQUFRO1FBQUk7SUFDL0M7SUFFQSxPQUFPO1FBQUV6QixNQUFNMEI7SUFBUTtBQUN6QjtBQUVBQyxPQUFPQyxPQUFPLEdBQUc7SUFDZjdCO0lBQ0FPO0lBQ0FJO0lBQ0FLO0lBQ0FHO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qLWgtYXBhcnRtZW50LW5leHRqcy8uL2xpYi9hdXRoLmpzPzI4N2IiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XHJcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xyXG5cclxuY29uc3QgSldUX1NFQ1JFVCA9IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQgfHwgJ3lvdXItc2VjcmV0LWtleS1oZXJlJztcclxuXHJcbi8vIEdlbmVyYXRlIEpXVCB0b2tlblxyXG5mdW5jdGlvbiBnZW5lcmF0ZVRva2VuKHVzZXIpIHtcclxuICByZXR1cm4gand0LnNpZ24oXHJcbiAgICB7IFxyXG4gICAgICBpZDogdXNlci5pZCwgXHJcbiAgICAgIHVzZXJuYW1lOiB1c2VyLnVzZXJuYW1lLCBcclxuICAgICAgcm9sZTogdXNlci5yb2xlIFxyXG4gICAgfSxcclxuICAgIEpXVF9TRUNSRVQsXHJcbiAgICB7IGV4cGlyZXNJbjogJzI0aCcgfVxyXG4gICk7XHJcbn1cclxuXHJcbi8vIFZlcmlmeSBKV1QgdG9rZW5cclxuZnVuY3Rpb24gdmVyaWZ5VG9rZW4odG9rZW4pIHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIGp3dC52ZXJpZnkodG9rZW4sIEpXVF9TRUNSRVQpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbi8vIEhhc2ggcGFzc3dvcmRcclxuYXN5bmMgZnVuY3Rpb24gaGFzaFBhc3N3b3JkKHBhc3N3b3JkKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHNhbHRSb3VuZHMgPSAxMDtcclxuICAgIHJldHVybiBhd2FpdCBiY3J5cHQuaGFzaChwYXNzd29yZCwgc2FsdFJvdW5kcyk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgaGFzaGluZyBwYXNzd29yZCcpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gQ29tcGFyZSBwYXNzd29yZFxyXG5hc3luYyBmdW5jdGlvbiBjb21wYXJlUGFzc3dvcmQocGFzc3dvcmQsIGhhc2hlZFBhc3N3b3JkKSB7XHJcbiAgdHJ5IHtcclxuICAgIHJldHVybiBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgaGFzaGVkUGFzc3dvcmQpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGNvbXBhcmluZyBwYXNzd29yZHMnKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIE1pZGRsZXdhcmUgdG8gdmVyaWZ5IGF1dGhlbnRpY2F0aW9uXHJcbmZ1bmN0aW9uIHJlcXVpcmVBdXRoKHJlcSkge1xyXG4gIC8vIEZvciBOZXh0LmpzIEFQSSByb3V0ZXMsIGdldCB0aGUgYXV0aG9yaXphdGlvbiBoZWFkZXJcclxuICBjb25zdCBhdXRoSGVhZGVyID0gcmVxLmhlYWRlcnMuZ2V0ID8gcmVxLmhlYWRlcnMuZ2V0KCdhdXRob3JpemF0aW9uJykgOiByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xyXG4gIGNvbnN0IHRva2VuID0gYXV0aEhlYWRlcj8ucmVwbGFjZSgnQmVhcmVyICcsICcnKTtcclxuICBcclxuICBpZiAoIXRva2VuKSB7XHJcbiAgICByZXR1cm4geyBlcnJvcjogJ05vIHRva2VuIHByb3ZpZGVkJywgc3RhdHVzOiA0MDEgfTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGRlY29kZWQgPSB2ZXJpZnlUb2tlbih0b2tlbik7XHJcbiAgaWYgKCFkZWNvZGVkKSB7XHJcbiAgICByZXR1cm4geyBlcnJvcjogJ0ludmFsaWQgdG9rZW4nLCBzdGF0dXM6IDQwMSB9O1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHsgdXNlcjogZGVjb2RlZCB9O1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZW5lcmF0ZVRva2VuLFxyXG4gIHZlcmlmeVRva2VuLFxyXG4gIGhhc2hQYXNzd29yZCxcclxuICBjb21wYXJlUGFzc3dvcmQsXHJcbiAgcmVxdWlyZUF1dGhcclxufTsgIl0sIm5hbWVzIjpbImp3dCIsInJlcXVpcmUiLCJiY3J5cHQiLCJKV1RfU0VDUkVUIiwicHJvY2VzcyIsImVudiIsImdlbmVyYXRlVG9rZW4iLCJ1c2VyIiwic2lnbiIsImlkIiwidXNlcm5hbWUiLCJyb2xlIiwiZXhwaXJlc0luIiwidmVyaWZ5VG9rZW4iLCJ0b2tlbiIsInZlcmlmeSIsImVycm9yIiwiaGFzaFBhc3N3b3JkIiwicGFzc3dvcmQiLCJzYWx0Um91bmRzIiwiaGFzaCIsIkVycm9yIiwiY29tcGFyZVBhc3N3b3JkIiwiaGFzaGVkUGFzc3dvcmQiLCJjb21wYXJlIiwicmVxdWlyZUF1dGgiLCJyZXEiLCJhdXRoSGVhZGVyIiwiaGVhZGVycyIsImdldCIsImF1dGhvcml6YXRpb24iLCJyZXBsYWNlIiwic3RhdHVzIiwiZGVjb2RlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.js\n");

/***/ }),

/***/ "(rsc)/./lib/database.js":
/*!*************************!*\
  !*** ./lib/database.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pool: () => (/* binding */ pool),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Supabase client\nconst supabaseUrl = \"https://qalxoheykkdfqsakvcad.supabase.co\";\nconst supabaseKey = process.env.SUPABASE_KEY || \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFhbHhvaGV5a2tkZnFzYWt2Y2FkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk5MjI4ODAsImV4cCI6MjA2NTQ5ODg4MH0.i-Mc45-v-j14QLidCt73idarVbvEMzVVWwtDM1ROCWA\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseKey);\n// PostgreSQL connection pool\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool({\n    host: \"aws-0-ap-southeast-1.pooler.supabase.com\",\n    port: 6543,\n    database: \"postgres\",\n    user: \"postgres.qalxoheykkdfqsakvcad\",\n    password: process.env.SUPABASE_DB_PASSWORD || \"E$rNc9z?Wtpgq&%\",\n    ssl: {\n        rejectUnauthorized: false\n    }\n});\n// Test database connection\nasync function testConnection() {\n    try {\n        const client = await pool.connect();\n        console.log(\"PostgreSQL database connection successful\");\n        client.release();\n        return true;\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return false;\n    }\n}\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGF0YWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBeUI7QUFDMkI7QUFFcEQsa0JBQWtCO0FBQ2xCLE1BQU1FLGNBQWM7QUFDcEIsTUFBTUMsY0FBY0MsUUFBUUMsR0FBRyxDQUFDQyxZQUFZLElBQUk7QUFDaEQsTUFBTUMsV0FBV04sbUVBQVlBLENBQUNDLGFBQWFDO0FBRTNDLDZCQUE2QjtBQUM3QixNQUFNSyxPQUFPLElBQUlSLG9DQUFJQSxDQUFDO0lBQ3BCUyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxNQUFNO0lBQ05DLFVBQVVULFFBQVFDLEdBQUcsQ0FBQ1Msb0JBQW9CLElBQUk7SUFDOUNDLEtBQUs7UUFBRUMsb0JBQW9CO0lBQU07QUFDbkM7QUFFQSwyQkFBMkI7QUFDM0IsZUFBZUM7SUFDYixJQUFJO1FBQ0YsTUFBTUMsU0FBUyxNQUFNVixLQUFLVyxPQUFPO1FBQ2pDQyxRQUFRQyxHQUFHLENBQUM7UUFDWkgsT0FBT0ksT0FBTztRQUNkLE9BQU87SUFDVCxFQUFFLE9BQU9DLE9BQU87UUFDZEgsUUFBUUcsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsT0FBTztJQUNUO0FBQ0Y7QUFFMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qLWgtYXBhcnRtZW50LW5leHRqcy8uL2xpYi9kYXRhYmFzZS5qcz9lZWE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvb2wgfSBmcm9tICdwZydcclxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xyXG5cclxuLy8gU3VwYWJhc2UgY2xpZW50XHJcbmNvbnN0IHN1cGFiYXNlVXJsID0gJ2h0dHBzOi8vcWFseG9oZXlra2RmcXNha3ZjYWQuc3VwYWJhc2UuY28nXHJcbmNvbnN0IHN1cGFiYXNlS2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfS0VZIHx8ICdleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMzTWlPaUp6ZFhCaFltRnpaU0lzSW5KbFppSTZJbkZoYkhodmFHVjVhMnRrWm5GellXdDJZMkZrSWl3aWNtOXNaU0k2SW1GdWIyNGlMQ0pwWVhRaU9qRTNORGs1TWpJNE9EQXNJbVY0Y0NJNk1qQTJOVFE1T0RnNE1IMC5pLU1jNDUtdi1qMTRRTGlkQ3Q3M2lkYXJWYnZFTXpWVld3dERNMVJPQ1dBJ1xyXG5jb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXkpXHJcblxyXG4vLyBQb3N0Z3JlU1FMIGNvbm5lY3Rpb24gcG9vbFxyXG5jb25zdCBwb29sID0gbmV3IFBvb2woe1xyXG4gIGhvc3Q6ICdhd3MtMC1hcC1zb3V0aGVhc3QtMS5wb29sZXIuc3VwYWJhc2UuY29tJyxcclxuICBwb3J0OiA2NTQzLFxyXG4gIGRhdGFiYXNlOiAncG9zdGdyZXMnLFxyXG4gIHVzZXI6ICdwb3N0Z3Jlcy5xYWx4b2hleWtrZGZxc2FrdmNhZCcsXHJcbiAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlNVUEFCQVNFX0RCX1BBU1NXT1JEIHx8ICdFJHJOYzl6P1d0cGdxJiUnLFxyXG4gIHNzbDogeyByZWplY3RVbmF1dGhvcml6ZWQ6IGZhbHNlIH1cclxufSlcclxuXHJcbi8vIFRlc3QgZGF0YWJhc2UgY29ubmVjdGlvblxyXG5hc3luYyBmdW5jdGlvbiB0ZXN0Q29ubmVjdGlvbigpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgcG9vbC5jb25uZWN0KCk7XHJcbiAgICBjb25zb2xlLmxvZygnUG9zdGdyZVNRTCBkYXRhYmFzZSBjb25uZWN0aW9uIHN1Y2Nlc3NmdWwnKTtcclxuICAgIGNsaWVudC5yZWxlYXNlKCk7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgcG9vbCwgc3VwYWJhc2UsIHRlc3RDb25uZWN0aW9uIH07ICJdLCJuYW1lcyI6WyJQb29sIiwiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJzdXBhYmFzZUtleSIsInByb2Nlc3MiLCJlbnYiLCJTVVBBQkFTRV9LRVkiLCJzdXBhYmFzZSIsInBvb2wiLCJob3N0IiwicG9ydCIsImRhdGFiYXNlIiwidXNlciIsInBhc3N3b3JkIiwiU1VQQUJBU0VfREJfUEFTU1dPUkQiLCJzc2wiLCJyZWplY3RVbmF1dGhvcml6ZWQiLCJ0ZXN0Q29ubmVjdGlvbiIsImNsaWVudCIsImNvbm5lY3QiLCJjb25zb2xlIiwibG9nIiwicmVsZWFzZSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.js\n");

/***/ }),

/***/ "(rsc)/./models/bill.js":
/*!************************!*\
  !*** ./models/bill.js ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/database.js */ \"(rsc)/./lib/database.js\");\n/* harmony import */ var _setting_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setting.js */ \"(rsc)/./models/setting.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database_js__WEBPACK_IMPORTED_MODULE_0__, _setting_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_lib_database_js__WEBPACK_IMPORTED_MODULE_0__, _setting_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass Bill {\n    // Get all bills with tenant and room details\n    static async findAll() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        ORDER BY b.bill_date DESC\n      `);\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding all bills:\", error);\n            throw error;\n        }\n    }\n    // Get unpaid bills\n    static async findUnpaid() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.status = 'unpaid' OR b.status = 'partial'\n        ORDER BY b.bill_date\n      `);\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding unpaid bills:\", error);\n            throw error;\n        }\n    }\n    // Get active bills (unpaid/partial)\n    static async findActive() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.status IN ('unpaid', 'partial')\n        ORDER BY b.bill_date DESC\n      `);\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding active bills:\", error);\n            throw error;\n        }\n    }\n    // Get paid bills (archived)\n    static async findPaid() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name,\n               p.payment_date as paid_date\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        LEFT JOIN (\n          SELECT bill_id, MAX(payment_date) as payment_date\n          FROM payments\n          GROUP BY bill_id\n        ) p ON b.id = p.bill_id\n        WHERE b.status = 'paid'\n        ORDER BY b.bill_date DESC\n      `);\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding paid bills:\", error);\n            throw error;\n        }\n    }\n    // Get bills by tenant ID\n    static async findByTenantId(tenantId) {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT b.*, r.room_number, br.name as branch_name,\n          (SELECT SUM(amount) FROM payments WHERE bill_id = b.id) as paid_amount\n        FROM bills b\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.tenant_id = $1\n        ORDER BY b.bill_date DESC\n      `, [\n                tenantId\n            ]);\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding bills by tenant ID:\", error);\n            throw error;\n        }\n    }\n    // Get bill by ID with payments\n    static async findById(id) {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT b.*, t.name as tenant_name, r.room_number, br.name as branch_name\n        FROM bills b\n        JOIN tenants t ON b.tenant_id = t.id\n        JOIN rooms r ON b.room_id = r.id\n        JOIN branches br ON r.branch_id = br.id\n        WHERE b.id = $1\n      `, [\n                id\n            ]);\n            if (!result.rows.length) {\n                return null;\n            }\n            const bill = result.rows[0];\n            // Get payments for this bill\n            const paymentsResult = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(\"SELECT * FROM payments WHERE bill_id = $1 ORDER BY payment_date DESC\", [\n                id\n            ]);\n            bill.payments = paymentsResult.rows;\n            bill.paid_amount = paymentsResult.rows.reduce((sum, payment)=>sum + Number(payment.amount), 0);\n            return bill;\n        } catch (error) {\n            console.error(\"Error finding bill by ID:\", error);\n            throw error;\n        }\n    }\n    // Create a new comprehensive bill\n    static async create(billData) {\n        const { tenant_id, room_id, bill_date, rent_from, rent_to, rent_amount, electric_present_reading = 0, electric_previous_reading = 0, electric_consumption = 0, electric_amount = 0, electric_reading_date, electric_previous_date, water_amount, extra_fee_amount = 0, extra_fee_description = null, total_amount, status = \"unpaid\", notes, prepared_by } = billData;\n        try {\n            // Get current rates from settings\n            const rates = await _setting_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getBillingRates();\n            const finalElectricRate = billData.electric_rate_per_kwh || rates.electric_rate_per_kwh;\n            const finalWaterAmount = water_amount || rates.water_fixed_amount;\n            // Convert undefined values to null for SQL compatibility\n            const sqlParams = [\n                tenant_id ?? null,\n                room_id ?? null,\n                bill_date ?? null,\n                rent_from ?? null,\n                rent_to ?? null,\n                rent_amount ?? null,\n                electric_present_reading ?? 0,\n                electric_previous_reading ?? 0,\n                electric_consumption ?? 0,\n                finalElectricRate ?? null,\n                electric_amount ?? 0,\n                electric_reading_date ?? null,\n                electric_previous_date ?? null,\n                finalWaterAmount ?? null,\n                extra_fee_amount ?? 0,\n                extra_fee_description ?? null,\n                total_amount ?? null,\n                status ?? \"unpaid\",\n                notes ?? null,\n                prepared_by ?? null\n            ];\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        INSERT INTO bills (\n          tenant_id, room_id, bill_date, rent_from, rent_to, rent_amount,\n          electric_present_reading, electric_previous_reading, electric_consumption, \n          electric_rate_per_kwh, electric_amount, electric_reading_date, electric_previous_date,\n          water_amount, extra_fee_amount, extra_fee_description, total_amount, status, notes, prepared_by\n        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20)\n        RETURNING id\n      `, sqlParams);\n            return {\n                id: result.rows[0].id,\n                ...billData,\n                electric_rate_per_kwh: finalElectricRate,\n                water_amount: finalWaterAmount\n            };\n        } catch (error) {\n            console.error(\"Error creating new bill:\", error);\n            throw error;\n        }\n    }\n    // Update bill\n    static async update(id, billData) {\n        const { bill_date, rent_from, rent_to, rent_amount, electric_present_reading, electric_previous_reading, electric_consumption, electric_rate_per_kwh, electric_amount, electric_reading_date, electric_previous_date, water_amount, total_amount, status, notes, prepared_by } = billData;\n        try {\n            // Convert undefined values to null for SQL compatibility\n            const sqlParams = [\n                bill_date ?? null,\n                rent_from ?? null,\n                rent_to ?? null,\n                rent_amount ?? null,\n                electric_present_reading ?? null,\n                electric_previous_reading ?? null,\n                electric_consumption ?? null,\n                electric_rate_per_kwh ?? null,\n                electric_amount ?? null,\n                electric_reading_date ?? null,\n                electric_previous_date ?? null,\n                water_amount ?? null,\n                total_amount ?? null,\n                status ?? null,\n                notes ?? null,\n                prepared_by ?? null,\n                id\n            ];\n            await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        UPDATE bills SET \n          bill_date = $1, rent_from = $2, rent_to = $3, rent_amount = $4,\n          electric_present_reading = $5, electric_previous_reading = $6, electric_consumption = $7, \n          electric_rate_per_kwh = $8, electric_amount = $9, electric_reading_date = $10, electric_previous_date = $11,\n          water_amount = $12, total_amount = $13, status = $14, notes = $15, prepared_by = $16\n        WHERE id = $17\n      `, sqlParams);\n            return {\n                id,\n                ...billData\n            };\n        } catch (error) {\n            console.error(\"Error updating bill:\", error);\n            throw error;\n        }\n    }\n    // Delete bill\n    static async delete(id) {\n        try {\n            await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(\"DELETE FROM bills WHERE id = $1\", [\n                id\n            ]);\n            return true;\n        } catch (error) {\n            console.error(\"Error deleting bill:\", error);\n            throw error;\n        }\n    }\n    // Update bill status\n    static async updateStatus(id, status) {\n        try {\n            await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(\"UPDATE bills SET status = $1 WHERE id = $2\", [\n                status,\n                id\n            ]);\n            return true;\n        } catch (error) {\n            console.error(\"Error updating bill status:\", error);\n            throw error;\n        }\n    }\n    // Calculate consumption and amounts based on readings and current rates\n    static async calculateUtilityAmounts(presentReading, previousReading) {\n        try {\n            const rates = await _setting_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getBillingRates();\n            const consumption = Math.max(0, presentReading - previousReading);\n            const electricAmount = consumption * rates.electric_rate_per_kwh;\n            return {\n                consumption,\n                electricAmount,\n                waterAmount: rates.water_fixed_amount,\n                electricRate: rates.electric_rate_per_kwh\n            };\n        } catch (error) {\n            console.error(\"Error calculating utility amounts:\", error);\n            throw error;\n        }\n    }\n    // Get bill statistics\n    static async getStats() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT\n          COUNT(*) as total_bills,\n          SUM(total_amount) as total_amount,\n          SUM(CASE WHEN status = 'paid' THEN total_amount ELSE 0 END) as paid_amount,\n          SUM(CASE WHEN status = 'unpaid' THEN total_amount ELSE 0 END) as unpaid_amount,\n          SUM(CASE WHEN status = 'partial' THEN total_amount ELSE 0 END) as partial_amount,\n          AVG(total_amount) as average_bill_amount,\n          COUNT(CASE WHEN status = 'paid' THEN 1 END) as paid_bills,\n          COUNT(CASE WHEN status = 'unpaid' THEN 1 END) as unpaid_bills,\n          COUNT(CASE WHEN status = 'partial' THEN 1 END) as partial_bills\n        FROM bills\n      `);\n            return result.rows[0];\n        } catch (error) {\n            console.error(\"Error getting bill statistics:\", error);\n            throw error;\n        }\n    }\n    // AUTOMATIC BILLING METHODS - DISABLED\n    // Note: Automatic billing has been disabled. Bills must be created manually.\n    /*\n  // Get bills that need next cycle generation (current period ended)\n  static async getBillsNeedingNextCycle() {\n    // DISABLED - Automatic billing cycles removed\n    return [];\n  }\n\n  // Generate next billing cycle\n  static async generateNextCycle(tenantId, roomId, lastBillEndDate, previousElectricReading, monthlyRent) {\n    // DISABLED - Automatic billing cycles removed\n    throw new Error('Automatic billing cycles have been disabled. Please create bills manually.');\n  }\n\n  // Process all automatic billing cycles\n  static async processAutomaticCycles() {\n    // DISABLED - Automatic billing cycles removed\n    return [];\n        }\n  */ // Get bills needing electricity reading update (3 days before cycle ends)\n    static async getBillsNeedingElectricUpdate() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT \n          b.*,\n          t.name as tenant_name,\n          t.email as tenant_email,\n          r.room_number,\n          r.monthly_rent,\n          br.name as branch_name,\n          br.address as branch_address\n        FROM bills b\n        INNER JOIN tenants t ON b.tenant_id = t.id\n        INNER JOIN rooms r ON b.room_id = r.id\n        INNER JOIN branches br ON r.branch_id = br.id\n        WHERE b.status = 'unpaid'\n        AND b.electric_consumption = 0\n        AND EXTRACT(DAY FROM (b.rent_to - CURRENT_DATE)) <= 3\n        AND EXTRACT(DAY FROM (b.rent_to - CURRENT_DATE)) >= 0\n        ORDER BY b.rent_to ASC\n      `);\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding bills needing electric update:\", error);\n            throw error;\n        }\n    }\n    // Update electricity reading and auto-calculate amounts\n    static async updateElectricReading(billId, presentReading, readingDate) {\n        try {\n            // Get current bill\n            const bill = await this.findById(billId);\n            if (!bill) {\n                throw new Error(\"Bill not found\");\n            }\n            const previousReading = parseFloat(bill.electric_previous_reading) || 0;\n            const currentReading = parseFloat(presentReading) || 0;\n            // Calculate consumption\n            const consumption = Math.max(0, currentReading - previousReading);\n            // Get current electric rate\n            const rates = await _setting_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getBillingRates();\n            const electricAmount = consumption * rates.electric_rate_per_kwh;\n            // Calculate new total\n            const newTotal = parseFloat(bill.rent_amount) + electricAmount + parseFloat(bill.water_amount);\n            // Update bill\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        UPDATE bills SET \n          electric_present_reading = $1,\n          electric_consumption = $2,\n          electric_amount = $3,\n          electric_reading_date = $4,\n          total_amount = $5,\n          notes = COALESCE(notes, '') || ' | Electric reading updated: ' || $6 || ' kWh on ' || $7\n        WHERE id = $8\n      `, [\n                currentReading,\n                consumption,\n                electricAmount,\n                readingDate,\n                newTotal,\n                currentReading,\n                readingDate,\n                billId\n            ]);\n            return {\n                success: true,\n                previousReading,\n                currentReading,\n                consumption,\n                electricAmount,\n                newTotal,\n                message: `Electric reading updated: ${consumption} kWh consumed, ₱${electricAmount.toFixed(2)} charged`\n            };\n        } catch (error) {\n            console.error(\"Error updating electric reading:\", error);\n            throw error;\n        }\n    }\n    // Mark bill as ready to send (finalized)\n    static async markAsReadyToSend(billId) {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        UPDATE bills SET \n          notes = COALESCE(notes, '') || ' | Bill finalized and ready to send',\n          updated_at = CURRENT_TIMESTAMP\n        WHERE id = $1\n      `, [\n                billId\n            ]);\n            return result.rowCount > 0;\n        } catch (error) {\n            console.error(\"Error marking bill as ready to send:\", error);\n            throw error;\n        }\n    }\n    // Get tenants needing bill creation reminders (3 days before billing cycle ends)\n    static async getBillsNeedingReminders() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\n        SELECT \n          t.id as tenant_id,\n          t.name as tenant_name,\n          t.email as tenant_email,\n          t.rent_start,\n          r.id as room_id,\n          r.room_number,\n          r.monthly_rent,\n          br.name as branch_name,\n          br.address as branch_address,\n          -- Calculate next billing period end date\n          CASE \n            WHEN t.rent_start IS NOT NULL THEN\n              CASE \n                -- For first bill: one month from rent_start, same day of month\n                WHEN NOT EXISTS (SELECT 1 FROM bills WHERE tenant_id = t.id) THEN\n                  (t.rent_start + INTERVAL '1 month') - INTERVAL '1 day'\n                -- For subsequent bills: one month from last bill end date\n                ELSE \n                  ((SELECT rent_to FROM bills WHERE tenant_id = t.id ORDER BY bill_date DESC LIMIT 1) + INTERVAL '1 day' + INTERVAL '1 month') - INTERVAL '1 day'\n              END\n            ELSE DATE_TRUNC('month', CURRENT_DATE) + INTERVAL '1 month' - INTERVAL '1 day'\n          END as next_bill_due_date,\n          -- Calculate days until billing cycle ends\n          CASE \n            WHEN t.rent_start IS NOT NULL THEN\n              CASE \n                WHEN NOT EXISTS (SELECT 1 FROM bills WHERE tenant_id = t.id) THEN\n                  EXTRACT(DAY FROM ((t.rent_start + INTERVAL '1 month') - INTERVAL '1 day') - CURRENT_DATE)\n                ELSE \n                  EXTRACT(DAY FROM (((SELECT rent_to FROM bills WHERE tenant_id = t.id ORDER BY bill_date DESC LIMIT 1) + INTERVAL '1 day' + INTERVAL '1 month') - INTERVAL '1 day') - CURRENT_DATE)\n              END\n            ELSE NULL\n          END as days_until_due,\n          -- Check if tenant already has an unpaid bill\n          CASE \n            WHEN EXISTS (\n              SELECT 1 FROM bills b2 \n              WHERE b2.tenant_id = t.id \n              AND b2.status IN ('unpaid', 'partial')\n            ) THEN 'already_has_unpaid_bill'\n            ELSE 'needs_billing'\n          END as billing_status,\n          -- Get last electric reading\n          COALESCE(\n            (SELECT electric_present_reading \n             FROM bills \n             WHERE tenant_id = t.id \n             ORDER BY bill_date DESC \n             LIMIT 1), \n            t.initial_electric_reading,\n            0\n          ) as last_electric_reading\n        FROM tenants t\n        INNER JOIN rooms r ON t.room_id = r.id\n        INNER JOIN branches br ON r.branch_id = br.id\n        WHERE t.contract_status = 'active'\n        AND t.rent_start IS NOT NULL\n        -- Only tenants who don't already have unpaid bills\n        AND NOT EXISTS (\n          SELECT 1 FROM bills b2 \n          WHERE b2.tenant_id = t.id \n          AND b2.status IN ('unpaid', 'partial')\n        )\n        -- Only tenants whose billing cycle is ending in 3 days or less (but not overdue)\n        AND CASE \n          WHEN NOT EXISTS (SELECT 1 FROM bills WHERE tenant_id = t.id) THEN\n            EXTRACT(DAY FROM ((t.rent_start + INTERVAL '1 month') - INTERVAL '1 day') - CURRENT_DATE) <= 3\n            AND EXTRACT(DAY FROM ((t.rent_start + INTERVAL '1 month') - INTERVAL '1 day') - CURRENT_DATE) >= 0\n          ELSE \n            EXTRACT(DAY FROM (((SELECT rent_to FROM bills WHERE tenant_id = t.id ORDER BY bill_date DESC LIMIT 1) + INTERVAL '1 day' + INTERVAL '1 month') - INTERVAL '1 day') - CURRENT_DATE) <= 3\n            AND EXTRACT(DAY FROM (((SELECT rent_to FROM bills WHERE tenant_id = t.id ORDER BY bill_date DESC LIMIT 1) + INTERVAL '1 day' + INTERVAL '1 month') - INTERVAL '1 day') - CURRENT_DATE) >= 0\n        END\n        ORDER BY br.name, r.room_number\n      `);\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding tenants needing bill creation reminders:\", error);\n            throw error;\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Bill);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/bill.js\n");

/***/ }),

/***/ "(rsc)/./models/setting.js":
/*!***************************!*\
  !*** ./models/setting.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/database.js */ \"(rsc)/./lib/database.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database_js__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_database_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Setting {\n    // Get all settings\n    static async findAll() {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(\"SELECT * FROM settings ORDER BY setting_key\");\n            return result.rows;\n        } catch (error) {\n            console.error(\"Error finding all settings:\", error);\n            throw error;\n        }\n    }\n    // Get setting by key\n    static async findByKey(key) {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(\"SELECT * FROM settings WHERE setting_key = $1\", [\n                key\n            ]);\n            return result.rows[0] || null;\n        } catch (error) {\n            console.error(\"Error finding setting by key:\", error);\n            throw error;\n        }\n    }\n    // Get setting value by key\n    static async getValue(key) {\n        try {\n            const setting = await this.findByKey(key);\n            return setting ? parseFloat(setting.setting_value) : null;\n        } catch (error) {\n            console.error(\"Error getting setting value:\", error);\n            throw error;\n        }\n    }\n    // Update setting value (create if doesn't exist)\n    static async updateValue(key, value, description = null) {\n        try {\n            console.log(\"Setting.updateValue called:\", {\n                key,\n                value,\n                description\n            });\n            // Use INSERT ... ON CONFLICT for upsert functionality (PostgreSQL)\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(`\r\n        INSERT INTO settings (setting_key, setting_value, description) \r\n        VALUES ($1, $2, $3)\r\n        ON CONFLICT (setting_key) DO UPDATE SET \r\n        setting_value = EXCLUDED.setting_value,\r\n        description = COALESCE(EXCLUDED.description, settings.description)\r\n      `, [\n                key,\n                value.toString(),\n                description\n            ]);\n            console.log(\"Database update result:\", result);\n            return true; // Always return true since upsert always succeeds\n        } catch (error) {\n            console.error(\"Error updating setting:\", error);\n            throw error;\n        }\n    }\n    // Create new setting\n    static async create(key, value, description = null) {\n        try {\n            const result = await _lib_database_js__WEBPACK_IMPORTED_MODULE_0__.pool.query(\"INSERT INTO settings (setting_key, setting_value, description) VALUES ($1, $2, $3) RETURNING id\", [\n                key,\n                value,\n                description\n            ]);\n            return {\n                id: result.rows[0].id,\n                setting_key: key,\n                setting_value: value,\n                description\n            };\n        } catch (error) {\n            console.error(\"Error creating setting:\", error);\n            throw error;\n        }\n    }\n    // Get current rates for billing\n    static async getBillingRates() {\n        try {\n            const electricRate = await this.getValue(\"electric_rate_per_kwh\") || 11.00;\n            const waterAmount = await this.getValue(\"water_fixed_amount\") || 200.00;\n            const roomRate = await this.getValue(\"default_room_rate\") || 3500.00;\n            return {\n                electric_rate_per_kwh: electricRate,\n                water_fixed_amount: waterAmount,\n                default_room_rate: roomRate\n            };\n        } catch (error) {\n            console.error(\"Error getting billing rates:\", error);\n            throw error;\n        }\n    }\n    // Update multiple billing rates at once\n    static async updateBillingRates(rates) {\n        try {\n            const updates = [];\n            if (rates.electric_rate_per_kwh !== undefined) {\n                updates.push(this.updateValue(\"electric_rate_per_kwh\", rates.electric_rate_per_kwh));\n            }\n            if (rates.water_fixed_amount !== undefined) {\n                updates.push(this.updateValue(\"water_fixed_amount\", rates.water_fixed_amount));\n            }\n            if (rates.default_room_rate !== undefined) {\n                updates.push(this.updateValue(\"default_room_rate\", rates.default_room_rate));\n            }\n            await Promise.all(updates);\n            return true;\n        } catch (error) {\n            console.error(\"Error updating billing rates:\", error);\n            throw error;\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Setting);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/setting.js\n");

/***/ }),

/***/ "(rsc)/./services/emailService.js":
/*!**********************************!*\
  !*** ./services/emailService.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"nodemailer\");\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nodemailer__WEBPACK_IMPORTED_MODULE_0__);\n\n// Create email transporter\nconst createTransporter = ()=>{\n    return nodemailer__WEBPACK_IMPORTED_MODULE_0___default().createTransport({\n        service: \"gmail\",\n        auth: {\n            user: \"official.jhapartment@gmail.com\" || 0,\n            pass: \"gcme okaj qiyf ubki\" || 0 // Replace with your Gmail App Password\n        }\n    });\n};\n// Format currency for display\nconst formatCurrency = (amount)=>{\n    return new Intl.NumberFormat(\"en-PH\", {\n        style: \"currency\",\n        currency: \"PHP\"\n    }).format(amount);\n};\n// Format date for display\nconst formatDate = (date)=>{\n    if (!date) return \"N/A\";\n    try {\n        const dateObj = new Date(date);\n        if (isNaN(dateObj.getTime())) return \"N/A\";\n        return new Intl.DateTimeFormat(\"en-PH\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        }).format(dateObj);\n    } catch (error) {\n        return \"N/A\";\n    }\n};\n// Generate HTML bill template\nconst generateBillHTML = (bill)=>{\n    const electricReading = bill.electric_present_reading && bill.electric_previous_reading ? `${bill.electric_previous_reading} → ${bill.electric_present_reading}` : \"N/A\";\n    const electricConsumption = bill.electric_consumption || 0;\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n        .bill-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }\n        .header h1 { margin: 0; font-size: 28px; }\n        .header p { margin: 5px 0 0 0; opacity: 0.9; }\n        .content { padding: 30px; }\n        .bill-info { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 25px; }\n        .bill-info h3 { margin: 0 0 15px 0; color: #333; }\n        .info-row { display: flex; justify-content: space-between; margin-bottom: 10px; }\n        .info-label { font-weight: bold; color: #666; }\n        .info-value { color: #333; }\n        .charges-section { margin-bottom: 25px; }\n        .charges-section h3 { border-bottom: 2px solid #667eea; padding-bottom: 10px; margin-bottom: 20px; color: #333; }\n        .charge-item { display: flex; justify-content: space-between; padding: 15px; margin-bottom: 10px; border-radius: 6px; }\n        .charge-rent { background: #e3f2fd; border-left: 4px solid #2196f3; }\n        .charge-electric { background: #fff3e0; border-left: 4px solid #ff9800; }\n        .charge-water { background: #e8f5e8; border-left: 4px solid #4caf50; }\n        .total-section { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px; text-align: center; }\n        .total-amount { font-size: 32px; font-weight: bold; margin: 10px 0; }\n        .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        .payment-note { background: #f0f8ff; border: 1px solid #b3d9ff; padding: 15px; border-radius: 6px; margin: 20px 0; }\n      </style>\n    </head>\n    <body>\n      <div class=\"bill-container\">\n        <!-- Header -->\n        <div class=\"header\">\n          <h1>${bill.branch_name || \"JH APARTMENT\"}</h1>\n          <p>${bill.branch_address || \"Patin-ay, Prosperidad, Agusan del Sur\"}</p>\n        </div>\n\n        <!-- Content -->\n        <div class=\"content\">\n          <!-- Bill Information -->\n          <div class=\"bill-info\">\n            <h3>Bill Information</h3>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Tenant Name:</span>\n              <span class=\"info-value\">${bill.tenant_name}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Room Number:</span>\n              <span class=\"info-value\">${bill.room_number}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Bill Period:</span>\n              <span class=\"info-value\">${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Bill Date:</span>\n              <span class=\"info-value\">${formatDate(bill.bill_date)}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Due Date:</span>\n              <span class=\"info-value\">${formatDate(bill.rent_to)}</span>\n            </div>\n          </div>\n\n          <!-- Charges Breakdown -->\n          <div class=\"charges-section\">\n            <h3>Charges Breakdown</h3>\n            \n            <!-- Rent -->\n            <div class=\"charge-item charge-rent\">\n              <div>\n                <strong>Monthly Rent</strong>\n                <br><small>Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.rent_amount)}</strong>\n              </div>\n            </div>\n\n            <!-- Electric -->\n            <div class=\"charge-item charge-electric\">\n              <div>\n                <strong>Electricity</strong>\n                <br><small>Reading: ${electricReading} (${electricConsumption} kWh)</small>\n                <br><small>Rate: ₱${bill.electric_rate_per_kwh}/kWh</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.electric_amount || 0)}</strong>\n              </div>\n            </div>\n\n            <!-- Water -->\n            <div class=\"charge-item charge-water\">\n              <div>\n                <strong>Water</strong>\n                <br><small>Fixed monthly charge</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.water_amount)}</strong>\n              </div>\n            </div>\n\n            ${bill.extra_fee_amount > 0 ? `\n            <!-- Extra Fees -->\n            <div class=\"charge-item\" style=\"background: #f3e5f5; border-left: 4px solid #9c27b0;\">\n              <div>\n                <strong>Extra Fees</strong>\n                <br><small>${bill.extra_fee_description || \"Additional charges\"}</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.extra_fee_amount)}</strong>\n              </div>\n            </div>\n            ` : \"\"}\n          </div>\n\n          <!-- Total -->\n          <div class=\"total-section\">\n            <div>Total Amount Due</div>\n            <div class=\"total-amount\">${formatCurrency(bill.total_amount)}</div>\n            <div>Status: ${bill.status.toUpperCase()}</div>\n          </div>\n\n          <!-- Payment Note -->\n          <div class=\"payment-note\">\n            <strong>Payment Instructions:</strong><br>\n            Please pay your bill on or before the due date to avoid any late fees. \n            Contact the management office for payment methods and assistance.\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"footer\">\n          <p>This is an automatically generated bill. For questions or concerns, please contact the management office.</p>\n          <p><strong>Generated on:</strong> ${formatDate(new Date())}</p>\n        </div>\n      </div>\n    </body>\n    </html>\n  `;\n};\n// Send bill to tenant via email\nconst sendBillToTenant = async (bill, recipientEmail, customMessage = \"\")=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Monthly Bill - Room ${bill.room_number} - ${formatDate(bill.bill_date)}`;\n        const htmlContent = generateBillHTML(bill);\n        let textMessage = `\nDear ${bill.tenant_name},\n\nYour monthly bill for Room ${bill.room_number} is ready.\n\nBill Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}\nTotal Amount: ${formatCurrency(bill.total_amount)}\nDue Date: ${formatDate(bill.rent_to)}\n\nBreakdown:\n- Rent: ${formatCurrency(bill.rent_amount)}\n- Electricity: ${formatCurrency(bill.electric_amount || 0)}\n- Water: ${formatCurrency(bill.water_amount)}${bill.extra_fee_amount > 0 ? `\n- Extra Fees: ${formatCurrency(bill.extra_fee_amount)} (${bill.extra_fee_description || \"Additional charges\"})` : \"\"}\n\nPlease pay on or before the due date.\n\nThank you,\n${bill.branch_name || \"JH Apartment\"} Management\n    `;\n        if (customMessage) {\n            textMessage = `${customMessage}\\n\\n${textMessage}`;\n        }\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textMessage,\n            html: htmlContent,\n            attachments: [] // Could add PDF attachment in the future\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Test email configuration\nconst testEmailConfig = async ()=>{\n    try {\n        const transporter = createTransporter();\n        await transporter.verify();\n        return {\n            success: true,\n            message: \"Email configuration is valid\"\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send receipt to tenant via email\nconst sendReceiptToTenant = async (bill, payments, recipientEmail, pdfBuffer, penaltyPercentage = 1.00)=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Payment Receipt - Room ${bill.room_number} - ${formatDate(new Date())}`;\n        // Check if penalty fee was applied\n        const hasPenaltyFee = bill.penalty_applied || bill.penalty_fee_amount > 0;\n        const penaltyFeeAmount = parseFloat(bill.penalty_fee_amount || 0);\n        let textMessage = `\nDear ${bill.tenant_name},\n\nThank you for your payment! Please find your official receipt attached.\n\nReceipt Details:\n- Bill Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}\n- Total Amount: ${formatCurrency(bill.total_amount)}\n- Amount Paid: ${formatCurrency(payments.reduce((sum, p)=>sum + parseFloat(p.amount), 0))}\n- Payment Date: ${formatDate(payments[payments.length - 1].actual_payment_date || payments[payments.length - 1].payment_date)}\n- Status: FULLY PAID\n${hasPenaltyFee ? `- Late Payment Fee: ${formatCurrency(penaltyFeeAmount)} (${penaltyPercentage}% penalty applied)` : \"\"}\n\nThis receipt serves as official proof of payment.\n\nThank you for choosing ${bill.branch_name || \"J&H Apartment\"}!\n\nBest regards,\n${bill.branch_name || \"J&H Apartment\"} Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textMessage,\n            attachments: [\n                {\n                    filename: `receipt-${bill.id}-${Date.now()}.pdf`,\n                    content: pdfBuffer,\n                    contentType: \"application/pdf\"\n                }\n            ]\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            message: \"Receipt sent successfully via email\",\n            messageId: result.messageId\n        };\n    } catch (error) {\n        console.error(\"Receipt email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send welcome email to new tenant\nconst sendWelcomeEmail = async (tenant, roomInfo)=>{\n    try {\n        // Emails are now enabled - attempting to send welcome email\n        const transporter = createTransporter();\n        const subject = `Welcome to J&H Apartment! - Room ${roomInfo.room_number}`;\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }\n          .header h1 { margin: 0; font-size: 28px; }\n          .content { padding: 30px; }\n          .welcome-section { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .info-box { background: #e3f2fd; border-left: 4px solid #2196f3; padding: 15px; margin: 15px 0; }\n          .deposit-info { background: #fff3e0; border-left: 4px solid #ff9800; padding: 15px; margin: 15px 0; }\n          .contract-info { background: #e8f5e8; border-left: 4px solid #4caf50; padding: 15px; margin: 15px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>🏠 Welcome to J&H Apartment!</h1>\n            <p>Your new home awaits you</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"welcome-section\">\n              <h2>Dear ${tenant.name},</h2>\n              <p>We are thrilled to welcome you to J&H Apartment! Thank you for choosing us as your new home. We're committed to providing you with a comfortable and pleasant living experience.</p>\n            </div>\n            \n            <div class=\"info-box\">\n              <h3>📋 Your Tenancy Details</h3>\n              <p><strong>Room Number:</strong> ${roomInfo.room_number}</p>\n              <p><strong>Monthly Rent:</strong> ${formatCurrency(roomInfo.monthly_rent)}</p>\n              <p><strong>Contract Start:</strong> ${formatDate(tenant.contract_start_date)}</p>\n              <p><strong>Contract End:</strong> ${formatDate(tenant.contract_end_date)}</p>\n              <p><strong>Contract Duration:</strong> ${tenant.contract_duration_months} months</p>\n            </div>\n            \n            <div class=\"deposit-info\">\n              <h3>💰 Deposit Information</h3>\n              <p><strong>Advance Payment:</strong> ${formatCurrency(tenant.advance_payment)}</p>\n              <p><strong>Security Deposit:</strong> ${formatCurrency(tenant.security_deposit)}</p>\n              <p><strong>Total Required:</strong> ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}</p>\n              <p><em>A separate deposit receipt will be sent to you once payment is confirmed.</em></p>\n            </div>\n            \n            <div class=\"contract-info\">\n              <h3>📋 Important Information</h3>\n              <ul>\n                <li>Your rent is due monthly in advance</li>\n                <li>Water and electricity bills will be calculated based on usage</li>\n                <li>We'll notify you 1 month before your contract expires</li>\n                <li>Please keep your deposit receipts for future reference</li>\n                <li>Contact management for any maintenance requests</li>\n              </ul>\n            </div>\n            \n            <div class=\"welcome-section\">\n              <h3>📞 Contact Information</h3>\n              <p><strong>Management Office:</strong> Available during business hours</p>\n              <p><strong>Email:</strong> official.jhapartment@gmail.com</p>\n              <p><strong>Address:</strong> Patin-ay, Prosperidad, Agusan Del Sur</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <p style=\"font-size: 18px; color: #667eea;\"><strong>Welcome to your new home! 🏡</strong></p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This email was sent automatically by J&H Apartment Management System</p>\n            <p>If you have any questions, please contact our management office</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${tenant.name},\n\nWelcome to J&H Apartment! \n\nYour Tenancy Details:\n- Room Number: ${roomInfo.room_number}\n- Monthly Rent: ${formatCurrency(roomInfo.monthly_rent)}\n- Contract Period: ${formatDate(tenant.contract_start_date)} to ${formatDate(tenant.contract_end_date)}\n- Duration: ${tenant.contract_duration_months} months\n\nDeposit Information:\n- Advance Payment: ${formatCurrency(tenant.advance_payment)}\n- Security Deposit: ${formatCurrency(tenant.security_deposit)}\n- Total Required: ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}\n\nImportant Notes:\n- Monthly rent is due in advance\n- We'll notify you 1 month before contract expiry\n- Keep deposit receipts for reference\n- Contact management for maintenance requests\n\nWelcome to your new home!\n\nBest regards,\nJ&H Apartment Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: tenant.email,\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Welcome email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Welcome email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send deposit receipt email\nconst sendDepositReceiptEmail = async (tenant, roomInfo, depositReceiptBuffer)=>{\n    try {\n        // Emails are now enabled - attempting to send deposit receipt email\n        const transporter = createTransporter();\n        const subject = `Deposit Receipt - Room ${roomInfo.room_number} - J&H Apartment`;\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .receipt-info { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .amount-box { background: #e8f5e8; border: 2px solid #28a745; padding: 20px; border-radius: 8px; text-align: center; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>💰 Deposit Receipt</h1>\n            <p>Official Payment Confirmation</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"receipt-info\">\n              <h3>Dear ${tenant.name},</h3>\n              <p>Thank you for your payment! We have received your advance payment and security deposit for Room ${roomInfo.room_number}.</p>\n            </div>\n            \n            <div class=\"amount-box\">\n              <h3>Payment Summary</h3>\n              <p><strong>Advance Payment:</strong> ${formatCurrency(tenant.advance_payment)}</p>\n              <p><strong>Security Deposit:</strong> ${formatCurrency(tenant.security_deposit)}</p>\n              <hr style=\"margin: 15px 0;\">\n              <p style=\"font-size: 18px;\"><strong>Total Paid: ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}</strong></p>\n            </div>\n            \n            <div class=\"receipt-info\">\n              <h3>📋 Receipt Details</h3>\n              <p><strong>Receipt Date:</strong> ${formatDate(new Date())}</p>\n              <p><strong>Tenant:</strong> ${tenant.name}</p>\n              <p><strong>Room:</strong> ${roomInfo.room_number}</p>\n              <p><strong>Contract Period:</strong> ${formatDate(tenant.contract_start_date)} to ${formatDate(tenant.contract_end_date)}</p>\n            </div>\n            \n            <div style=\"background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 6px; margin: 20px 0;\">\n              <h4>📄 Official Receipt Attached</h4>\n              <p>Please find your official deposit receipt attached to this email. Keep this receipt for your records as proof of payment.</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <p style=\"color: #28a745; font-weight: bold;\">✅ Payment Confirmed - Welcome to J&H Apartment!</p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This receipt is automatically generated and serves as official proof of payment</p>\n            <p>For any questions, please contact our management office</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${tenant.name},\n\nDEPOSIT RECEIPT - J&H APARTMENT\n\nThank you for your payment! We have received your deposits for Room ${roomInfo.room_number}.\n\nPayment Summary:\n- Advance Payment: ${formatCurrency(tenant.advance_payment)}\n- Security Deposit: ${formatCurrency(tenant.security_deposit)}\n- Total Paid: ${formatCurrency(parseFloat(tenant.advance_payment) + parseFloat(tenant.security_deposit))}\n\nReceipt Details:\n- Date: ${formatDate(new Date())}\n- Tenant: ${tenant.name}\n- Room: ${roomInfo.room_number}\n- Contract: ${formatDate(tenant.contract_start_date)} to ${formatDate(tenant.contract_end_date)}\n\nYour official receipt is attached to this email. Please keep it for your records.\n\nWelcome to J&H Apartment!\n\nBest regards,\nJ&H Apartment Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: tenant.email,\n            subject: subject,\n            text: textContent,\n            html: htmlContent,\n            attachments: [\n                {\n                    filename: `deposit-receipt-${tenant.id}-${Date.now()}.pdf`,\n                    content: depositReceiptBuffer,\n                    contentType: \"application/pdf\"\n                }\n            ]\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Deposit receipt email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Deposit receipt email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send contract expiry notification\nconst sendContractExpiryNotification = async (tenant, roomInfo)=>{\n    try {\n        // Emails are now enabled - attempting to send contract expiry notification\n        const transporter = createTransporter();\n        const subject = `Contract Expiry Notice - Room ${roomInfo.room_number} - Action Required`;\n        const daysUntilExpiry = Math.ceil((new Date(tenant.contract_end_date) - new Date()) / (1000 * 60 * 60 * 24));\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .notice-box { background: #fff3cd; border: 2px solid #ffc107; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .info-section { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .action-box { background: #e3f2fd; border-left: 4px solid #2196f3; padding: 20px; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>⚠️ Contract Expiry Notice</h1>\n            <p>Important: Action Required</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"notice-box\">\n              <h3>Dear ${tenant.name},</h3>\n              <p style=\"font-size: 16px;\"><strong>Your tenancy contract will expire in ${daysUntilExpiry} days.</strong></p>\n              <p>Contract End Date: <strong>${formatDate(tenant.contract_end_date)}</strong></p>\n            </div>\n            \n            <div class=\"info-section\">\n              <h3>📋 Current Contract Details</h3>\n              <p><strong>Room Number:</strong> ${roomInfo.room_number}</p>\n              <p><strong>Contract Start:</strong> ${formatDate(tenant.contract_start_date)}</p>\n              <p><strong>Contract End:</strong> ${formatDate(tenant.contract_end_date)}</p>\n              <p><strong>Monthly Rent:</strong> ${formatCurrency(roomInfo.monthly_rent)}</p>\n            </div>\n            \n            <div class=\"action-box\">\n              <h3>🔄 Renewal Options</h3>\n              <p>If you wish to continue staying with us, please contact our management office to discuss renewal terms:</p>\n              <ul>\n                <li>Standard 6-month contract renewal</li>\n                <li>Custom contract duration options available</li>\n                <li>Current rent rates may apply</li>\n                <li>New contract to be signed before expiry date</li>\n              </ul>\n            </div>\n            \n            <div style=\"background: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 6px; margin: 20px 0;\">\n              <h4>⏰ Important Deadlines</h4>\n              <p><strong>Please notify us of your intentions by:</strong> ${formatDate(new Date(Date.now() + 7 * 24 * 60 * 60 * 1000))}</p>\n              <p>This will allow us sufficient time to process your renewal or arrange for a smooth transition.</p>\n            </div>\n            \n            <div class=\"info-section\">\n              <h3>📞 Contact Management</h3>\n              <p><strong>Email:</strong> official.jhapartment@gmail.com</p>\n              <p><strong>Visit:</strong> Management Office during business hours</p>\n              <p><strong>Address:</strong> Patin-ay, Prosperidad, Agusan Del Sur</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <p style=\"color: #ff6b6b; font-weight: bold;\">⚠️ Please respond within 7 days to avoid any complications</p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated reminder sent 30 days before contract expiry</p>\n            <p>Thank you for being a valued tenant at J&H Apartment</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${tenant.name},\n\nCONTRACT EXPIRY NOTICE - J&H APARTMENT\n\nYour tenancy contract will expire in ${daysUntilExpiry} days.\n\nContract Details:\n- Room: ${roomInfo.room_number}\n- Contract End: ${formatDate(tenant.contract_end_date)}\n- Monthly Rent: ${formatCurrency(roomInfo.monthly_rent)}\n\nRenewal Options:\n- Standard 6-month renewal available\n- Custom duration options\n- Contact management office to discuss terms\n\nImportant:\nPlease notify us of your intentions by ${formatDate(new Date(Date.now() + 7 * 24 * 60 * 60 * 1000))}\n\nContact Information:\nEmail: official.jhapartment@gmail.com\nVisit: Management Office during business hours\n\nPlease respond within 7 days to avoid complications.\n\nThank you for being a valued tenant.\n\nBest regards,\nJ&H Apartment Management\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: tenant.email,\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Contract expiry notification sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Contract expiry email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send departure notification email\nconst sendDepartureEmail = async (recipientEmail, departureInfo)=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Departure Confirmation - Room ${departureInfo.room_number} - J&H Apartment`;\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .info-section { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .summary-box { background: #e3f2fd; border-left: 4px solid #2196f3; padding: 20px; margin: 20px 0; }\n          .refund-box { background: #e8f5e8; border-left: 4px solid #4caf50; padding: 20px; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n          .status-badge { display: inline-block; padding: 5px 15px; border-radius: 20px; font-size: 12px; font-weight: bold; }\n          .completed { background: #d4edda; color: #155724; }\n          .early { background: #fff3cd; color: #856404; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>🏠 Departure Confirmation</h1>\n            <p>J&H Apartment - Thank You for Staying With Us</p>\n          </div>\n          \n          <div class=\"content\">\n            <h3>Dear ${departureInfo.tenant_name},</h3>\n            <p>We confirm that your tenancy at J&H Apartment has been processed and your records have been updated.</p>\n            \n            <div class=\"info-section\">\n              <h3>📋 Tenancy Summary</h3>\n              <p><strong>Room Number:</strong> ${departureInfo.room_number}</p>\n              <p><strong>Branch:</strong> ${departureInfo.branch_name}</p>\n              <p><strong>Tenancy Period:</strong> ${formatDate(departureInfo.rent_start)} - ${formatDate(departureInfo.rent_end)}</p>\n              <p><strong>Contract Status:</strong> \n                <span class=\"status-badge ${departureInfo.contract_completed ? \"completed\" : \"early\"}\">\n                  ${departureInfo.contract_completed ? \"Contract Completed\" : \"Early Departure\"}\n                </span>\n              </p>\n              <p><strong>Departure Reason:</strong> ${departureInfo.reason_for_leaving?.replace(\"_\", \" \") || \"Not specified\"}</p>\n            </div>\n            \n            <div class=\"summary-box\">\n              <h3>💰 Financial Summary</h3>\n              <p><strong>Total Bills Paid:</strong> ${formatCurrency(departureInfo.total_bills_paid || 0)}</p>\n              ${departureInfo.total_bills_unpaid > 0 ? `\n                <p><strong>Outstanding Amount:</strong> <span style=\"color: #dc3545;\">${formatCurrency(departureInfo.total_bills_unpaid)}</span></p>\n                <p><small style=\"color: #dc3545;\">Please settle any outstanding amounts as soon as possible.</small></p>\n              ` : `\n                <p style=\"color: #28a745;\"><strong>✅ All bills have been settled</strong></p>\n              `}\n            </div>\n            \n            ${departureInfo.security_deposit_refund > 0 ? `\n            <div class=\"refund-box\">\n              <h3>💵 Security Deposit Refund</h3>\n              <p><strong>Refund Amount:</strong> ${formatCurrency(departureInfo.security_deposit_refund)}</p>\n              <p>Your security deposit refund will be processed according to our standard procedures. Please contact the management office for refund collection details.</p>\n            </div>\n            ` : \"\"}\n            \n            <div class=\"info-section\">\n              <h3>📞 Contact Information</h3>\n              <p>If you have any questions or need assistance, please contact us:</p>\n              <p><strong>Email:</strong> official.jhapartment@gmail.com</p>\n              <p><strong>Address:</strong> Patin-ay, Prosperidad, Agusan Del Sur</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0; padding: 20px; background: #f0f8ff; border-radius: 8px;\">\n              <h3>🙏 Thank You!</h3>\n              <p>Thank you for choosing J&H Apartment as your home. We appreciate your tenancy and wish you all the best in your future endeavors.</p>\n              <p><em>You're always welcome back!</em></p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated confirmation email</p>\n            <p>J&H Apartment Management Team</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${departureInfo.tenant_name},\n\nDEPARTURE CONFIRMATION - J&H APARTMENT\n\nWe confirm that your tenancy has been processed and your records have been updated.\n\nTenancy Summary:\n- Room: ${departureInfo.room_number}\n- Branch: ${departureInfo.branch_name}\n- Period: ${formatDate(departureInfo.rent_start)} - ${formatDate(departureInfo.rent_end)}\n- Status: ${departureInfo.contract_completed ? \"Contract Completed\" : \"Early Departure\"}\n- Reason: ${departureInfo.reason_for_leaving?.replace(\"_\", \" \") || \"Not specified\"}\n\nFinancial Summary:\n- Total Bills Paid: ${formatCurrency(departureInfo.total_bills_paid || 0)}\n${departureInfo.total_bills_unpaid > 0 ? `- Outstanding Amount: ${formatCurrency(departureInfo.total_bills_unpaid)}` : \"- All bills settled ✅\"}\n\n${departureInfo.security_deposit_refund > 0 ? `\nSecurity Deposit Refund: ${formatCurrency(departureInfo.security_deposit_refund)}\nPlease contact the management office for refund collection details.\n` : \"\"}\n\nContact Information:\nEmail: official.jhapartment@gmail.com\nAddress: Patin-ay, Prosperidad, Agusan Del Sur\n\nThank you for choosing J&H Apartment as your home. We appreciate your tenancy and wish you all the best!\n\nYou're always welcome back!\n\nBest regards,\nJ&H Apartment Management Team\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Departure email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Departure email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Send monthly business report\nconst sendMonthlyReport = async (recipientEmail, reportData)=>{\n    try {\n        const transporter = createTransporter();\n        const monthName = reportData.report_period.month_name;\n        const totalRevenue = reportData.financial_summary.total_revenue.toLocaleString();\n        const occupancyRate = reportData.occupancy_metrics.occupancy_rate;\n        const activeTenants = reportData.tenant_statistics.active_tenants;\n        const revenueGrowth = reportData.financial_summary.revenue_growth;\n        // Create branch performance table\n        const branchTable = reportData.branch_performance.map((branch)=>`\n      <tr>\n        <td style=\"padding: 8px; border: 1px solid #ddd;\">${branch.branch_name}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${branch.occupied_rooms}/${branch.total_rooms}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${branch.occupancy_rate}%</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: right;\">₱${branch.revenue.toLocaleString()}</td>\n      </tr>\n    `).join(\"\");\n        // Create payment methods table\n        const paymentTable = reportData.payment_analysis.by_method.map((method)=>`\n      <tr>\n        <td style=\"padding: 8px; border: 1px solid #ddd;\">${method.payment_method}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${method.transaction_count}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: right;\">₱${method.total_amount.toLocaleString()}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${method.percentage}%</td>\n      </tr>\n    `).join(\"\");\n        // Create top performers table\n        const topPerformersTable = reportData.top_performers.map((tenant)=>`\n      <tr>\n        <td style=\"padding: 8px; border: 1px solid #ddd;\">${tenant.tenant_name}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">${tenant.room_number}</td>\n        <td style=\"padding: 8px; border: 1px solid #ddd; text-align: right;\">₱${tenant.total_paid.toLocaleString()}</td>\n      </tr>\n    `).join(\"\");\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Monthly Business Report - ${monthName}</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 800px; margin: 0 auto; padding: 20px; }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px; margin-bottom: 30px; }\n          .metric-card { background: #f8f9fa; border-left: 4px solid #007bff; padding: 20px; margin: 15px 0; border-radius: 5px; }\n          .metric-value { font-size: 2em; font-weight: bold; color: #007bff; }\n          .metric-label { color: #666; font-size: 0.9em; }\n          .growth-positive { color: #28a745; }\n          .growth-negative { color: #dc3545; }\n          .section { margin: 30px 0; }\n          .section-title { font-size: 1.5em; color: #333; border-bottom: 2px solid #007bff; padding-bottom: 10px; margin-bottom: 20px; }\n          table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n          th { background: #007bff; color: white; padding: 12px; text-align: left; }\n          .summary-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin: 20px 0; }\n          .alert { background: #fff3cd; border: 1px solid #ffeaa7; color: #856404; padding: 15px; border-radius: 5px; margin: 15px 0; }\n          .footer { text-align: center; margin-top: 40px; padding: 20px; background: #f8f9fa; border-radius: 5px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>📊 J&H Apartment Monthly Report</h1>\n            <h2>${monthName}</h2>\n            <p>Generated on ${new Date(reportData.report_period.generated_at).toLocaleDateString()}</p>\n          </div>\n\n          <!-- Executive Summary -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">📈 Executive Summary</h2>\n            <div class=\"summary-grid\">\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">₱${totalRevenue}</div>\n                <div class=\"metric-label\">Total Revenue</div>\n                <div class=\"${revenueGrowth >= 0 ? \"growth-positive\" : \"growth-negative\"}\">\n                  ${revenueGrowth >= 0 ? \"↗\" : \"↘\"} ${Math.abs(revenueGrowth)}% vs last month\n                </div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${occupancyRate}%</div>\n                <div class=\"metric-label\">Occupancy Rate</div>\n                <div class=\"metric-label\">${reportData.occupancy_metrics.occupied_rooms}/${reportData.occupancy_metrics.total_rooms} rooms occupied</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${activeTenants}</div>\n                <div class=\"metric-label\">Active Tenants</div>\n                <div class=\"metric-label\">Net change: ${reportData.tenant_statistics.net_tenant_change >= 0 ? \"+\" : \"\"}${reportData.tenant_statistics.net_tenant_change}</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.financial_summary.collection_rate}%</div>\n                <div class=\"metric-label\">Collection Rate</div>\n                <div class=\"metric-label\">₱${reportData.financial_summary.total_billed.toLocaleString()} billed</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Financial Performance -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">💰 Financial Performance</h2>\n            <div class=\"summary-grid\">\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.financial_summary.total_transactions}</div>\n                <div class=\"metric-label\">Total Transactions</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">₱${reportData.outstanding_summary.total_outstanding.toLocaleString()}</div>\n                <div class=\"metric-label\">Outstanding Amount</div>\n                <div class=\"metric-label\">${reportData.outstanding_summary.unpaid_bills_count + reportData.outstanding_summary.partial_bills_count} bills pending</div>\n              </div>\n            </div>\n\n            <h3>Payment Methods Breakdown</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Payment Method</th>\n                  <th>Transactions</th>\n                  <th>Amount</th>\n                  <th>Percentage</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${paymentTable}\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Branch Performance -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">🏢 Branch Performance</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Branch</th>\n                  <th>Occupancy</th>\n                  <th>Rate</th>\n                  <th>Revenue</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${branchTable}\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Tenant Statistics -->\n          <div class=\"section\">\n            <h2 class=\"section-title\">👥 Tenant Statistics</h2>\n            <div class=\"summary-grid\">\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.tenant_statistics.new_tenants}</div>\n                <div class=\"metric-label\">New Tenants</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.tenant_statistics.departed_tenants}</div>\n                <div class=\"metric-label\">Departed Tenants</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\">${reportData.tenant_statistics.expiring_contracts}</div>\n                <div class=\"metric-label\">Expiring Contracts</div>\n                <div class=\"metric-label\">Next 30 days</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Top Performers -->\n          ${reportData.top_performers.length > 0 ? `\n          <div class=\"section\">\n            <h2 class=\"section-title\">🌟 Top Paying Tenants</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Tenant Name</th>\n                  <th>Room</th>\n                  <th>Amount Paid</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${topPerformersTable}\n              </tbody>\n            </table>\n          </div>\n          ` : \"\"}\n\n          <!-- Alerts & Recommendations -->\n          ${reportData.outstanding_summary.total_outstanding > 0 ? `\n          <div class=\"alert\">\n            <strong>⚠️ Action Required:</strong> There are ₱${reportData.outstanding_summary.total_outstanding.toLocaleString()} in outstanding payments that need attention.\n          </div>\n          ` : \"\"}\n\n          ${reportData.tenant_statistics.expiring_contracts > 0 ? `\n          <div class=\"alert\">\n            <strong>📅 Contract Renewals:</strong> ${reportData.tenant_statistics.expiring_contracts} contracts are expiring in the next 30 days.\n          </div>\n          ` : \"\"}\n\n          ${occupancyRate < 80 ? `\n          <div class=\"alert\">\n            <strong>🏠 Occupancy Alert:</strong> Current occupancy rate is ${occupancyRate}%. Consider marketing strategies to increase occupancy.\n          </div>\n          ` : \"\"}\n\n          <div class=\"footer\">\n            <p><strong>J&H Apartment Management System</strong></p>\n            <p>This report was automatically generated on ${new Date().toLocaleDateString()}</p>\n            <p>For questions or support, please contact the management team.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nJ&H APARTMENT MONTHLY REPORT - ${monthName}\nGenerated: ${new Date(reportData.report_period.generated_at).toLocaleDateString()}\n\nEXECUTIVE SUMMARY\n=================\nTotal Revenue: ₱${totalRevenue} (${revenueGrowth >= 0 ? \"+\" : \"\"}${revenueGrowth}% vs last month)\nOccupancy Rate: ${occupancyRate}% (${reportData.occupancy_metrics.occupied_rooms}/${reportData.occupancy_metrics.total_rooms} rooms)\nActive Tenants: ${activeTenants} (Net change: ${reportData.tenant_statistics.net_tenant_change >= 0 ? \"+\" : \"\"}${reportData.tenant_statistics.net_tenant_change})\nCollection Rate: ${reportData.financial_summary.collection_rate}%\n\nFINANCIAL PERFORMANCE\n=====================\nTotal Transactions: ${reportData.financial_summary.total_transactions}\nTotal Billed: ₱${reportData.financial_summary.total_billed.toLocaleString()}\nOutstanding Amount: ₱${reportData.outstanding_summary.total_outstanding.toLocaleString()}\n\nTENANT STATISTICS\n=================\nNew Tenants: ${reportData.tenant_statistics.new_tenants}\nDeparted Tenants: ${reportData.tenant_statistics.departed_tenants}\nExpiring Contracts (30 days): ${reportData.tenant_statistics.expiring_contracts}\n\nBRANCH PERFORMANCE\n==================\n${reportData.branch_performance.map((branch)=>`${branch.branch_name}: ${branch.occupancy_rate}% occupancy, ₱${branch.revenue.toLocaleString()} revenue`).join(\"\\n\")}\n\nThis report was automatically generated by J&H Apartment Management System.\n    `;\n        const mailOptions = {\n            from: process.env.EMAIL_FROM || \"official.jhapartment@gmail.com\",\n            to: recipientEmail,\n            subject: `📊 Monthly Business Report - ${monthName} | J&H Apartment`,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        console.log(\"Monthly report email sent successfully:\", result.messageId);\n        return {\n            success: true,\n            message: \"Monthly report email sent successfully\",\n            messageId: result.messageId\n        };\n    } catch (error) {\n        console.error(\"Error sending monthly report email:\", error);\n        throw error;\n    }\n};\n// Send billing reminder to management office\nconst sendBillingReminderToManagement = async (tenants)=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `Bill Creation Reminder - ${tenants.length} Tenant${tenants.length > 1 ? \"s\" : \"\"} Need${tenants.length === 1 ? \"s\" : \"\"} Billing`;\n        // Group tenants by due date\n        const tenantsByDueDate = tenants.reduce((acc, tenant)=>{\n            const dueDate = formatDate(tenant.next_bill_due_date);\n            if (!acc[dueDate]) {\n                acc[dueDate] = [];\n            }\n            acc[dueDate].push(tenant);\n            return acc;\n        }, {});\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 800px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .alert-box { background: #fff3cd; border: 2px solid #ffc107; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .bills-section { margin: 20px 0; }\n          .due-date-group { margin-bottom: 30px; }\n          .due-date-header { background: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 15px; }\n          .bill-item { background: #ffffff; border: 1px solid #dee2e6; padding: 15px; margin-bottom: 10px; border-radius: 6px; display: flex; justify-content: space-between; align-items: center; }\n          .bill-info { flex: 1; }\n          .bill-amount { font-weight: bold; color: #dc3545; }\n          .overdue { border-left: 4px solid #dc3545; }\n          .due-today { border-left: 4px solid #fd7e14; }\n          .due-soon { border-left: 4px solid #ffc107; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n          .summary-stats { display: flex; justify-content: space-around; background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }\n          .stat-item { text-align: center; }\n          .stat-number { font-size: 24px; font-weight: bold; color: #dc3545; }\n          .stat-label { font-size: 12px; color: #666; text-transform: uppercase; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>📝 Bill Creation Reminder</h1>\n            <p>Tenants requiring bill generation</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"alert-box\">\n              <h3>⚠️ Action Required</h3>\n              <p>The following tenants' billing cycles are ending within the next 3 days and need bills created:</p>\n            </div>\n            \n            <div class=\"summary-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${tenants.length}</div>\n                <div class=\"stat-label\">Tenants Need Billing</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${formatCurrency(tenants.reduce((sum, tenant)=>sum + parseFloat(tenant.monthly_rent || 0), 0))}</div>\n                <div class=\"stat-label\">Estimated Rent Amount</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${tenants.filter((tenant)=>tenant.days_until_due <= 0).length}</div>\n                <div class=\"stat-label\">Overdue for Billing</div>\n              </div>\n            </div>\n            \n            <div class=\"bills-section\">\n              ${Object.entries(tenantsByDueDate).map(([dueDate, dateTenants])=>{\n            const daysUntilDue = dateTenants[0].days_until_due;\n            let dueDateClass = \"due-soon\";\n            let dueDateLabel = `Bill due in ${daysUntilDue} day${daysUntilDue !== 1 ? \"s\" : \"\"}`;\n            if (daysUntilDue <= 0) {\n                dueDateClass = \"overdue\";\n                dueDateLabel = `Overdue for billing by ${Math.abs(daysUntilDue)} day${Math.abs(daysUntilDue) !== 1 ? \"s\" : \"\"}`;\n            } else if (daysUntilDue === 0) {\n                dueDateClass = \"due-today\";\n                dueDateLabel = \"Billing cycle ends today\";\n            }\n            return `\n                  <div class=\"due-date-group\">\n                    <div class=\"due-date-header ${dueDateClass}\">\n                      <h3>📅 ${dueDate} - ${dueDateLabel}</h3>\n                      <p>${dateTenants.length} tenant${dateTenants.length > 1 ? \"s\" : \"\"} • Estimated Rent: ${formatCurrency(dateTenants.reduce((sum, tenant)=>sum + parseFloat(tenant.monthly_rent || 0), 0))}</p>\n                    </div>\n                    ${dateTenants.map((tenant)=>`\n                      <div class=\"bill-item ${dueDateClass}\">\n                        <div class=\"bill-info\">\n                          <strong>${tenant.tenant_name}</strong> - Room ${tenant.room_number}\n                          <br>\n                          <small>${tenant.branch_name} • Last Reading: ${tenant.last_electric_reading} kWh</small>\n                          <br><small style=\"color: #2196f3;\">📝 Need to create bill for billing period ending ${formatDate(tenant.next_bill_due_date)}</small>\n                        </div>\n                        <div class=\"bill-amount\">\n                          ${formatCurrency(tenant.monthly_rent)}<br><small>+ utilities</small>\n                        </div>\n                      </div>\n                    `).join(\"\")}\n                  </div>\n                `;\n        }).join(\"\")}\n            </div>\n            \n            <div style=\"background: #e3f2fd; border-left: 4px solid #2196f3; padding: 20px; margin: 20px 0;\">\n              <h3>📋 Recommended Actions</h3>\n              <ul>\n                <li>Create bills for tenants whose billing cycle ends today</li>\n                <li>Take electricity readings for overdue tenants and generate their bills immediately</li>\n                <li>Prepare bills for tenants whose cycle ends in 1-3 days</li>\n                <li>Check the \"Generate Bill\" button in the Billing page for each tenant</li>\n                <li>Send created bills to tenants via email</li>\n              </ul>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated bill creation reminder sent daily at 9:00 AM</p>\n            <p>Generated on: ${formatDate(new Date())} at ${new Date().toLocaleTimeString()}</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nBILL CREATION REMINDER - J&H APARTMENT MANAGEMENT\n\n${tenants.length} Tenant${tenants.length > 1 ? \"s\" : \"\"} Need${tenants.length === 1 ? \"s\" : \"\"} Bill Creation\n\nSummary:\n- Tenants Needing Bills: ${tenants.length}\n- Estimated Rent Amount: ${formatCurrency(tenants.reduce((sum, tenant)=>sum + parseFloat(tenant.monthly_rent || 0), 0))}\n- Overdue for Billing: ${tenants.filter((tenant)=>tenant.days_until_due <= 0).length}\n\nTenants by Billing Due Date:\n${Object.entries(tenantsByDueDate).map(([dueDate, dateTenants])=>{\n            const daysUntilDue = dateTenants[0].days_until_due;\n            let dueDateLabel = `Bill due in ${daysUntilDue} day${daysUntilDue !== 1 ? \"s\" : \"\"}`;\n            if (daysUntilDue <= 0) {\n                dueDateLabel = `Overdue for billing by ${Math.abs(daysUntilDue)} day${Math.abs(daysUntilDue) !== 1 ? \"s\" : \"\"}`;\n            } else if (daysUntilDue === 0) {\n                dueDateLabel = \"Billing cycle ends today\";\n            }\n            return `\n${dueDate} - ${dueDateLabel}\n${dateTenants.map((tenant)=>`  • ${tenant.tenant_name} - Room ${tenant.room_number} (${tenant.branch_name})\n    Rent: ${formatCurrency(tenant.monthly_rent)} + utilities\n    Last Electric Reading: ${tenant.last_electric_reading} kWh\n    Action: Create bill for billing period ending ${formatDate(tenant.next_bill_due_date)}`).join(\"\\n\")}`;\n        }).join(\"\\n\")}\n\nRecommended Actions:\n- Create bills for tenants whose billing cycle ends today\n- Take electricity readings for overdue tenants and generate their bills immediately\n- Prepare bills for tenants whose cycle ends in 1-3 days\n- Check the \"Generate Bill\" button in the Billing page for each tenant\n- Send created bills to tenants via email\n\nGenerated on: ${formatDate(new Date())} at ${new Date().toLocaleTimeString()}\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: \"official.jhapartment@gmail.com\",\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Bill creation reminder sent to management successfully\",\n            tenantsCount: tenants.length\n        };\n    } catch (error) {\n        console.error(\"Billing reminder email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Generate HTML for final bill template with deposit information\nconst generateFinalBillHTML = (bill)=>{\n    const electricReading = bill.electric_present_reading && bill.electric_previous_reading ? `${bill.electric_previous_reading} → ${bill.electric_present_reading}` : \"N/A\";\n    const electricConsumption = bill.electric_consumption || 0;\n    // Get deposit information if available\n    const depositApplied = parseFloat(bill.deposit_applied || 0);\n    const originalBillAmount = parseFloat(bill.original_bill_amount || bill.total_amount);\n    const hasDepositApplied = depositApplied > 0;\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n        .bill-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .header { background: linear-gradient(135deg, #e53935 0%, #8e24aa 100%); color: white; padding: 30px; text-align: center; }\n        .header h1 { margin: 0; font-size: 28px; }\n        .header p { margin: 5px 0 0 0; opacity: 0.9; }\n        .final-bill-badge { background: #ff5252; color: white; padding: 5px 10px; border-radius: 4px; font-size: 14px; margin-top: 10px; display: inline-block; }\n        .content { padding: 30px; }\n        .bill-info { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 25px; }\n        .bill-info h3 { margin: 0 0 15px 0; color: #333; }\n        .info-row { display: flex; justify-content: space-between; margin-bottom: 10px; }\n        .info-label { font-weight: bold; color: #666; }\n        .info-value { color: #333; }\n        .charges-section { margin-bottom: 25px; }\n        .charges-section h3 { border-bottom: 2px solid #e53935; padding-bottom: 10px; margin-bottom: 20px; color: #333; }\n        .charge-item { display: flex; justify-content: space-between; padding: 15px; margin-bottom: 10px; border-radius: 6px; }\n        .charge-rent { background: #e3f2fd; border-left: 4px solid #2196f3; }\n        .charge-electric { background: #fff3e0; border-left: 4px solid #ff9800; }\n        .charge-water { background: #e8f5e8; border-left: 4px solid #4caf50; }\n        .deposit-section { background: #e8eaf6; padding: 20px; border-radius: 8px; margin-bottom: 25px; border-left: 4px solid #3f51b5; }\n        .deposit-row { display: flex; justify-content: space-between; margin-bottom: 10px; }\n        .total-section { background: linear-gradient(135deg, #e53935 0%, #8e24aa 100%); color: white; padding: 20px; border-radius: 8px; text-align: center; }\n        .total-amount { font-size: 32px; font-weight: bold; margin: 10px 0; }\n        .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        .payment-note { background: #ffebee; border: 1px solid #ffcdd2; padding: 15px; border-radius: 6px; margin: 20px 0; }\n      </style>\n    </head>\n    <body>\n      <div class=\"bill-container\">\n        <!-- Header -->\n        <div class=\"header\">\n          <h1>${bill.branch_name || \"JH APARTMENT\"}</h1>\n          <p>${bill.branch_address || \"Patin-ay, Prosperidad, Agusan del Sur\"}</p>\n          <div class=\"final-bill-badge\">FINAL BILL</div>\n        </div>\n\n        <!-- Content -->\n        <div class=\"content\">\n          <!-- Bill Information -->\n          <div class=\"bill-info\">\n            <h3>Final Bill Information</h3>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Tenant Name:</span>\n              <span class=\"info-value\">${bill.tenant_name}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Room Number:</span>\n              <span class=\"info-value\">${bill.room_number}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Final Bill Period:</span>\n              <span class=\"info-value\">${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Bill Date:</span>\n              <span class=\"info-value\">${formatDate(bill.bill_date)}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">Due Date:</span>\n              <span class=\"info-value\">${formatDate(bill.rent_to)}</span>\n            </div>\n          </div>\n\n          <!-- Charges Breakdown -->\n          <div class=\"charges-section\">\n            <h3>Charges Breakdown</h3>\n            \n            <!-- Rent -->\n            <div class=\"charge-item charge-rent\">\n              <div>\n                <strong>Prorated Rent</strong>\n                <br><small>Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.rent_amount)}</strong>\n              </div>\n            </div>\n\n            <!-- Electric -->\n            <div class=\"charge-item charge-electric\">\n              <div>\n                <strong>Electricity</strong>\n                <br><small>Reading: ${electricReading} (${electricConsumption} kWh)</small>\n                <br><small>Rate: ₱${bill.electric_rate_per_kwh}/kWh</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.electric_amount || 0)}</strong>\n              </div>\n            </div>\n\n            <!-- Water -->\n            <div class=\"charge-item charge-water\">\n              <div>\n                <strong>Water</strong>\n                <br><small>Fixed charge</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.water_amount)}</strong>\n              </div>\n            </div>\n\n            ${bill.extra_fee_amount > 0 ? `\n            <!-- Extra Fees -->\n            <div class=\"charge-item\" style=\"background: #f3e5f5; border-left: 4px solid #9c27b0;\">\n              <div>\n                <strong>Extra Fees</strong>\n                <br><small>${bill.extra_fee_description || \"Additional charges\"}</small>\n              </div>\n              <div style=\"text-align: right;\">\n                <strong>${formatCurrency(bill.extra_fee_amount)}</strong>\n              </div>\n            </div>\n            ` : \"\"}\n          </div>\n\n          ${hasDepositApplied ? `\n          <!-- Deposit Applied Section -->\n          <div class=\"deposit-section\">\n            <h3>Deposit Applied</h3>\n            <div class=\"deposit-row\">\n              <span class=\"info-label\">Original Bill Amount:</span>\n              <span class=\"info-value\">${formatCurrency(originalBillAmount)}</span>\n            </div>\n            <div class=\"deposit-row\">\n              <span class=\"info-label\">Deposit Applied:</span>\n              <span class=\"info-value\">- ${formatCurrency(depositApplied)}</span>\n            </div>\n            <div class=\"deposit-row\" style=\"border-top: 1px solid #ccc; padding-top: 10px; font-weight: bold;\">\n              <span class=\"info-label\">Remaining Balance Due:</span>\n              <span class=\"info-value\">${formatCurrency(bill.total_amount)}</span>\n            </div>\n          </div>\n          ` : \"\"}\n\n          <!-- Total -->\n          <div class=\"total-section\">\n            <div>Total Amount Due</div>\n            <div class=\"total-amount\">${formatCurrency(bill.total_amount)}</div>\n            <div>Status: ${(bill.status || \"PENDING\").toUpperCase()}</div>\n          </div>\n\n          <!-- Payment Note -->\n          <div class=\"payment-note\">\n            <strong>IMPORTANT: Final Bill Payment</strong><br>\n            This is your FINAL BILL for your tenancy. Please settle this amount to complete your move-out process.\n            Your room will only be officially vacated and your contract terminated after this bill is paid in full.\n            ${hasDepositApplied ? `Your security deposit of ${formatCurrency(depositApplied)} has been applied to reduce the original bill amount.` : \"\"}\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"footer\">\n          <p>This is an automatically generated final bill. For questions or concerns, please contact the management office.</p>\n          <p><strong>Generated on:</strong> ${formatDate(new Date())}</p>\n        </div>\n      </div>\n    </body>\n    </html>\n  `;\n};\n// Send final bill to tenant via email\nconst sendFinalBillToTenant = async (bill, recipientEmail)=>{\n    try {\n        const transporter = createTransporter();\n        // Determine if deposit was applied\n        const depositApplied = parseFloat(bill.deposit_applied || 0);\n        const hasDepositApplied = depositApplied > 0;\n        const subject = `FINAL BILL - Room ${bill.room_number} - Move Out`;\n        const htmlContent = generateFinalBillHTML(bill);\n        let textMessage = `\nDear ${bill.tenant_name},\n\nThis is your FINAL BILL for Room ${bill.room_number} at ${bill.branch_name || \"JH APARTMENT\"}.\n\nFinal Bill Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}\nBill Date: ${formatDate(bill.bill_date)}\nDue Date: ${formatDate(bill.rent_to)}\n\nCHARGES BREAKDOWN:\n- Prorated Rent: ${formatCurrency(bill.rent_amount)}\n- Electricity: ${formatCurrency(bill.electric_amount || 0)}\n- Water: ${formatCurrency(bill.water_amount)}\n${bill.extra_fee_amount > 0 ? `- Extra Fees (${bill.extra_fee_description || \"Additional charges\"}): ${formatCurrency(bill.extra_fee_amount)}\\n` : \"\"}\n\n${hasDepositApplied ? `\nDEPOSIT APPLIED:\n- Original Bill Amount: ${formatCurrency(parseFloat(bill.original_bill_amount || bill.total_amount))}\n- Deposit Applied: - ${formatCurrency(depositApplied)}\n- Remaining Balance Due: ${formatCurrency(bill.total_amount)}\n` : \"\"}\n\nTOTAL AMOUNT DUE: ${formatCurrency(bill.total_amount)}\n\nIMPORTANT: This is your FINAL BILL. Please settle this amount to complete your move-out process.\nYour room will only be officially vacated and your contract terminated after this bill is paid in full.\n${hasDepositApplied ? `Your security deposit of ${formatCurrency(depositApplied)} has been applied to reduce the original bill amount.` : \"\"}\n\nFor questions or concerns, please contact the management office.\n\nThank you for choosing ${bill.branch_name || \"JH APARTMENT\"}.\n`;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textMessage,\n            html: htmlContent\n        };\n        await transporter.sendMail(mailOptions);\n        console.log(`✅ Final bill email sent to ${recipientEmail}`);\n        return true;\n    } catch (error) {\n        console.error(\"Error sending final bill email:\", error);\n        return false;\n    }\n};\n// Send refund notification email to tenant\nconst sendRefundNotificationEmail = async (bill, recipientEmail, refundAmount)=>{\n    try {\n        const transporter = createTransporter();\n        const subject = `💰 Refund Due - Room ${bill.room_number} - Move Out`;\n        const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }\n          .email-container { max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n          .header { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; padding: 30px; text-align: center; }\n          .content { padding: 30px; }\n          .refund-info { background: #e8f5e8; border-left: 4px solid #28a745; padding: 20px; margin: 20px 0; border-radius: 8px; }\n          .bill-info { background: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; }\n          .amount-box { background: #d4edda; border: 2px solid #28a745; padding: 20px; border-radius: 8px; text-align: center; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; color: #666; border-top: 1px solid #eee; }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <h1>💰 Great News! Refund Available</h1>\n            <p>Your Move-Out Process - Refund Due</p>\n          </div>\n          \n          <div class=\"content\">\n            <div class=\"refund-info\">\n              <h3>Dear ${bill.tenant_name},</h3>\n              <p>Excellent news! After covering all your bills, you have a refund due from your deposits.</p>\n            </div>\n            \n            <div class=\"amount-box\">\n              <h3>💰 Refund Amount</h3>\n              <h2 style=\"color: #28a745; font-size: 32px; margin: 10px 0;\">₱${refundAmount.toFixed(2)}</h2>\n              <p>This amount will be processed and returned to you</p>\n            </div>\n            \n            <div class=\"bill-info\">\n              <h3>📋 Bill Summary</h3>\n              <p><strong>Room:</strong> ${bill.room_number}</p>\n              <p><strong>Final Bill Period:</strong> ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}</p>\n              <p><strong>Total Bills Covered:</strong> ₱${bill.total_amount.toFixed(2)}</p>\n              <p><strong>Your Deposits Applied:</strong> ₱${(bill.total_amount + refundAmount).toFixed(2)}</p>\n              <p><strong>Refund Due:</strong> <span style=\"color: #28a745; font-weight: bold;\">₱${refundAmount.toFixed(2)}</span></p>\n            </div>\n            \n            <div style=\"background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 6px; margin: 20px 0;\">\n              <h4>📋 What Happens Next?</h4>\n              <ol>\n                <li>Your bills have been automatically covered by your deposits</li>\n                <li>The admin will process your refund</li>\n                <li>You will be contacted for refund collection details</li>\n                <li>Your move-out will be completed once the refund is processed</li>\n              </ol>\n            </div>\n            \n            <div style=\"background: #d1ecf1; border: 1px solid #bee5eb; padding: 15px; border-radius: 6px; margin: 20px 0;\">\n              <h4>💡 Important Information</h4>\n              <p>• No action required from you at this time</p>\n              <p>• Your room contract is being processed for termination</p>\n              <p>• Please wait for admin contact regarding refund collection</p>\n              <p>• Keep this email for your records</p>\n            </div>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <p style=\"font-size: 18px; color: #28a745;\"><strong>Thank you for being a valued tenant! 🏡</strong></p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated refund notification</p>\n            <p>For questions, please contact: official.jhapartment@gmail.com</p>\n            <p>J&H Apartment Management Team</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n        const textContent = `\nDear ${bill.tenant_name},\n\nREFUND NOTIFICATION - MOVE OUT\n\nGreat news! After covering all your bills, you have a refund due from your deposits.\n\nREFUND AMOUNT: ₱${refundAmount.toFixed(2)}\n\nBill Summary:\n- Room: ${bill.room_number}\n- Final Bill Period: ${formatDate(bill.rent_from)} - ${formatDate(bill.rent_to)}\n- Total Bills Covered: ₱${bill.total_amount.toFixed(2)}\n- Your Deposits Applied: ₱${(bill.total_amount + refundAmount).toFixed(2)}\n- Refund Due: ₱${refundAmount.toFixed(2)}\n\nWhat Happens Next:\n1. Your bills have been automatically covered by your deposits\n2. The admin will process your refund\n3. You will be contacted for refund collection details\n4. Your move-out will be completed once the refund is processed\n\nImportant Information:\n• No action required from you at this time\n• Your room contract is being processed for termination\n• Please wait for admin contact regarding refund collection\n• Keep this email for your records\n\nThank you for being a valued tenant!\n\nBest regards,\nJ&H Apartment Management Team\n    `;\n        const mailOptions = {\n            from: \"official.jhapartment@gmail.com\" || 0,\n            to: recipientEmail,\n            subject: subject,\n            text: textContent,\n            html: htmlContent\n        };\n        const result = await transporter.sendMail(mailOptions);\n        return {\n            success: true,\n            messageId: result.messageId,\n            message: \"Refund notification email sent successfully\"\n        };\n    } catch (error) {\n        console.error(\"Refund notification email sending error:\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    sendBillToTenant,\n    sendReceiptToTenant,\n    testEmailConfig,\n    generateBillHTML,\n    sendWelcomeEmail,\n    sendDepositReceiptEmail,\n    sendContractExpiryNotification,\n    sendDepartureEmail,\n    sendMonthlyReport,\n    sendBillingReminderToManagement,\n    sendFinalBillToTenant,\n    sendRefundNotificationEmail\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./services/emailService.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/semver","vendor-chunks/whatwg-url","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/webidl-conversions","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbills%2Freminders%2Froute&page=%2Fapi%2Fbills%2Freminders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbills%2Freminders%2Froute.js&appDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjoshu_mnu8z3u%5CDownloads%5Cj-h-apartment-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();